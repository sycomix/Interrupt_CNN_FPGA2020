%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: interuput.pdf
%%Creator: Adobe Acrobat 10.0.0
%%For: yujin
%%CreationDate: 2019/8/16, 18:14:01
%%BoundingBox: 0 0 778 353
%%HiResBoundingBox: 0 0 777.5763 352.3549
%%CropBox: 0 0 777.5763 352.3549
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1068 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® for Office 365"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® PowerPoint® for Office 365"
   xmp:CreateDate="2019-08-16T18:13:06+08:00"
   xmp:ModifyDate="2019-08-16T18:13:06+08:00"
   xmpMM:DocumentID="uuid:43FEF694-47C3-4D9D-8328-F4F7654F7E54"
   xmpMM:InstanceID="uuid:43FEF694-47C3-4D9D-8328-F4F7654F7E54">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">FPGA 中断以多任务执行</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yu Jincheng</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -352.355 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 352.355 li
777.576 352.355 li
777.576 0 li
cp
clp
gsave
-.853775 353.029 mo
778.146 353.029 li
778.146 -.970764 li
-.853775 -.970764 li
cp
clp
-79.8538 524.029 mo
880.146 524.029 li
880.146 -15.9708 li
-79.8538 -15.9708 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
13.4162 71.0292 mo
13.4162 41.4592 37.3962 17.4792 66.9662 17.4792 cv
526.866 17.4792 li
556.436 17.4792 580.416 41.4592 580.416 71.0292 cv
580.416 285.229 li
580.416 314.799 556.436 338.779 526.866 338.779 cv
66.9662 338.779 li
37.3962 338.779 13.4162 314.799 13.4162 285.229 cv
cp
/1 
[/DeviceCMYK] /CSA add_res
.363226 .0725414 0 0 cmyk
ef
1.02 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
13.4162 71.0292 mo
13.4162 41.4592 37.3962 17.4792 66.9662 17.4792 cv
526.866 17.4792 li
556.436 17.4792 580.416 41.4592 580.416 71.0292 cv
580.416 285.229 li
580.416 314.799 556.436 338.779 526.866 338.779 cv
66.9662 338.779 li
37.3962 338.779 13.4162 314.799 13.4162 285.229 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (LSPHER+DengXian-GBK-EUC-H)
%%Title: (LSPHER+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /LSPHER+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28636 <001C60D8A8C9B875744C21AD59FDCBB2749B2268B75FB3> |
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
28677 <001C60D8A8C9B81947031993F366B7797E01770F0CCF402A3810F4860
85B72DA10BE6CC101E91F1F1C8B8F646643C5A8F34CC08EB50A8A38B409FF70F
C08890288922D85661D7A1EFC0CE23BA363CBFF61764B> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /LSPHER+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/LSPHER+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
164.726 43.4092 mo
(o\334p\001p\007p\005o\364)
[5.92786 13.2001 7.63184 8.13611 0 ]xsh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28608 <001C60D8A8C9B7A73DB6A60276D55D01F153B7D96DD64C> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
211.646 43.4092 mo
(o\300)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28645 <001C60D8A8C9B7FA1378253013ECBC2E2375A528708F98127351381D8
D6D4621D951E8F5F697D02315B161674B3B669EC72DC9FB775331F6348CFA7EA
DF53D1E65E2A1653259F1DF90BA621D0BA605DBDCF6462367C15F1F9BCD37860
53893E0E997109E5787E293F736D944B821F2A5> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28661 <001C60D8A8C9B7FD84953D118AA979FC6C631901144BB02E815F2AD38
C9304AAD5C69BEAA7F87F397A8B68E05A58AAC0AE7365E3D5B033BE3AC489C99
F1A84D26C4414FD9A1B105486BFEE67D38C7D79B5C30E9D2EE19AB4E806BF73B
81F502E722B67ECA466A631456E16BBDB15CD7175C1ACFB9877440AC4934B23E
96968CD65ADBB658B8EEADD2A5CF185829ED50D824179AEBDE1D69054AB218F2
E572E00B798960921609D88F11B3649413151> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24 0 0 -24 0 0 ]msf
223.646 43.4092 mo
(o\345p\002o\365p\002p\007)
[13.8479 13.752 13.7761 13.752 0 ]xsh
607.176 43.3092 mo
607.176 28.9492 618.826 17.2992 633.186 17.2992 cv
737.226 17.2992 li
751.586 17.2992 763.236 28.9492 763.236 43.3092 cv
763.236 312.769 li
763.236 327.129 751.586 338.779 737.226 338.779 cv
633.186 338.779 li
618.826 338.779 607.176 327.129 607.176 312.769 cv
cp
0 .505302 .209964 0 cmyk
ef
607.176 43.3092 mo
607.176 28.9492 618.826 17.2992 633.186 17.2992 cv
737.226 17.2992 li
751.586 17.2992 763.236 28.9492 763.236 43.3092 cv
763.236 312.769 li
763.236 327.129 751.586 338.779 737.226 338.779 cv
633.186 338.779 li
618.826 338.779 607.176 327.129 607.176 312.769 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24.02 0 0 -24.02 0 0 ]msf
625.266 49.1292 mo
(o\334p\001p\007o\370p\005)
[5.9328 13.2111 7.63818 12.3465 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24.02 0 0 -24.02 0 0 ]msf
672.486 49.1292 mo
(o\300)sh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [24.02 0 0 -24.02 0 0 ]msf
684.486 49.1292 mo
(o\345p\002o\365p\002p\007)
[13.8594 13.7634 13.7876 13.7634 0 ]xsh
21.0962 161.399 mo
21.0962 154.579 26.6162 149.059 33.4362 149.059 cv
84.2362 149.059 li
91.0562 149.059 96.5762 154.579 96.5762 161.399 cv
96.5762 210.759 li
96.5762 217.579 91.0562 223.099 84.2362 223.099 cv
33.4362 223.099 li
26.6162 223.099 21.0962 217.579 21.0962 210.759 cv
cp
.154177 0 .0350347 0 cmyk
ef
21.0962 161.399 mo
21.0962 154.579 26.6162 149.059 33.4362 149.059 cv
84.2362 149.059 li
91.0562 149.059 96.5762 154.579 96.5762 161.399 cv
96.5762 210.759 li
96.5762 217.579 91.0562 223.099 84.2362 223.099 cv
33.4362 223.099 li
26.6162 223.099 21.0962 217.579 21.0962 210.759 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28675 <001C60D8A8C9B7FD84953D11880AD4F37B2510559D37A2059564A2CE2
E16A7500A94FDD66B9E5A19619AACEE642F7128DBE261B121C3C7CC16942981C
D231447F25C4534F5D376D352FCD328019825A63D60C00859FFDC4B610FDC284
CD7F0495A1DC5978D3ED40B7F14741A387BEC5E756DB50728BA11C7FAA4BE6E3
23AF5AACA5CEEA8995FF8194E08068A8A5E046955C8CD8BFE88BBA9F1EEEA2C2
A3AE2D93280F668321E4BB938F72F3C852944> |
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
36.4262 180.709 mo
(o\334p\001p\003p\010p\007)
[4.93494 10.9891 11.4686 10.9489 0 ]xsh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28672 <001C60D8A8C9B6BC88CCA209E81BBB23118C1962F78530A6D2B1B22F4
C42E1E1780F3FAF3BA4D143D7AB9094600FB0A392F35595463AF65F814F8CFD2
FA68D1EBD08F24F882D398540EABDE5E14F3ED20707C55D17AFC142A349177EF
446C8B5CD5246C1A25D9E29ACD913B3DA4DA32F40D6AB2427E526FB3DBDEFA1C
762999B6CB00C8AB4BD2941F9E463EC30C1D40E11263ED534E30DB477FDAFCEB
E27BF40CE00> |
28666 <001C60D8A8C9B7FD849A70FBAF5CA9A13C8E26C143A1DF6AC1FE547EA
3C5232E736DB519B3D3AA4EEB5C6BE5BAE3CF35795226E06AD4DC645F74CE709
D6D91E4316CA064CD0C4D0AE7D15A7DAFFFD0C871FB60DBABB3A2AAE10728B75
305448C7B5C7B5F2A56A6D5ABB66520DBD6D65AA03F04B1782EFFFBBC14C56FE
36F36723CB545DCDED9B40F166550D83238B31668EF901F0353888C1B5A6781A
E1D7629C16539B99012D949BB473BAE8FE8799FB00BF6C746B0B7BB5491EAECF
A034F56A464F3951098755CEB00> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
32.0462 204.709 mo
(o\334p\000o\364o\372o\370)
[4.93494 16.8032 10.0101 11.4686 0 ]xsh
112.986 161.369 mo
112.986 154.549 118.506 149.029 125.326 149.029 cv
196.526 149.029 li
203.346 149.029 208.866 154.549 208.866 161.369 cv
208.866 210.729 li
208.866 217.549 203.346 223.069 196.526 223.069 cv
125.326 223.069 li
118.506 223.069 112.986 217.549 112.986 210.729 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
112.986 161.369 mo
112.986 154.549 118.506 149.029 125.326 149.029 cv
196.526 149.029 li
203.346 149.029 208.866 154.549 208.866 161.369 cv
208.866 210.729 li
208.866 217.549 203.346 223.069 196.526 223.069 cv
125.326 223.069 li
118.506 223.069 112.986 217.549 112.986 210.729 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28633 <001C60D8A8C9B75E5E15AFD6A09866F0491F1027106958A942351926A
12C16CC8CE102375270AADD> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
127.566 170.449 mo
(o\331o\370o\364p\007p\010p\005o\370)
[8.58609 9.25214 9.01813 5.66988 9.91791 6.10208 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
185.346 170.449 mo
(o\300)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28643 <001C60D8A8C9B7931D88C549581514B303475B68F3A5B82FC10C33046
B1178E35B340E46A0F7AFD1D8477157DB986336BDE495E836D190C26AFD0533C
6A5709B3E706B37262928FC6678F90AED700592FB6F17C4CA4353B0E987BB933
7B4E4E6727403A52D0FD507E960> |
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
141.006 192.049 mo
(o\343p\002o\374p\001p\007)
[9.93604 10.314 4.03198 9.90005 0 ]xsh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28632 <001C60D8A8C9B7A4C86C58826A7CADEB7B0D78D3A58A13CDBAB0CA4F6
979882BC86A42E2AD85808956602D9668> |
28683 <001C60D8A8C9B763568A72CE33323336558FEDB35993DFA979CD86B9E
44D82CA27D61977017D8EA8E32C142B6DFCAD6275AECF8C3D9734503912A95C0
6> |
28662 <001C60D8A8C9B776A06C6FC231F3BF82B95E430F6D347A409EECD485F
9B406FA6336964C8BF7664E2AB055B44D3A06959A7781CE4D2FEDDD996C546F2
2FC5837E64BBC80EF4699966E80B1E4ED4A9C3550A8BDD97A63B0696CF3EE432
A03807D55000A523F2214> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
135.126 213.649 mo
(o\330p\013p\007p\005o\364o\366p\007)
[9.05411 7.92004 5.72388 6.10208 9.01813 8.15404 0 ]xsh
429.276 206.579 mo
429.276 202.119 432.896 198.499 437.356 198.499 cv
529.256 198.499 li
533.716 198.499 537.336 202.119 537.336 206.579 cv
537.336 238.899 li
537.336 243.359 533.716 246.979 529.256 246.979 cv
437.356 246.979 li
432.896 246.979 429.276 243.359 429.276 238.899 cv
cp
.154177 0 .0350347 0 cmyk
ef
1.02 lw
429.276 206.579 mo
429.276 202.119 432.896 198.499 437.356 198.499 cv
529.256 198.499 li
533.716 198.499 537.336 202.119 537.336 206.579 cv
537.336 238.899 li
537.336 243.359 533.716 246.979 529.256 246.979 cv
437.356 246.979 li
432.896 246.979 429.276 243.359 429.276 238.899 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 4 GetGlyphDirectory
28639 <001C60D8A8C9B74B0CB5DF6C84CF353B772D85B4038C184407812FD2> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28595 <001C60D8A8C9B8581AA5> |
28640 <001C60D8A8C9B69449B17425C8547CFDA8270817BBE34FB818DFD3400
AB236206D8E33A195934514318A5B76D2E6BBCF397E7437A6E24D2A09B92194E
D12385BFFF65C91BDA6D66CC8CE8455ABB16E2EC3596D70D5E874E2DB464B983
5FD670A17B5D18BB2C8E7FE95E35DC06C2C5E52744FD1BE1143> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
439.066 229.389 mo
(o\337p\002o\366o\364o\377o\263o\340o\364p\003)
[9.27081 11.4485 9.05103 10.0101 4.47546 5.47455 17.2828 10.0101 0 ]xsh
331.146 136.289 mo
331.146 131.829 334.766 128.209 339.226 128.209 cv
398.546 128.209 li
403.006 128.209 406.626 131.829 406.626 136.289 cv
406.626 168.609 li
406.626 173.069 403.006 176.689 398.546 176.689 cv
339.226 176.689 li
334.766 176.689 331.146 173.069 331.146 168.609 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
331.146 136.289 mo
331.146 131.829 334.766 128.209 339.226 128.209 cv
398.546 128.209 li
403.006 128.209 406.626 131.829 406.626 136.289 cv
406.626 168.609 li
406.626 173.069 403.006 176.689 398.546 176.689 cv
339.226 176.689 li
334.766 176.689 331.146 173.069 331.146 168.609 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28649 <001C60D8A8C9B7D7E8DC0A8F59926D729E6EE4D734E5A5AF737BE16BB
0E38958D10F8202854BDCA8BA9BCF0F321C0DDD8EF7643F3C3962AF09B1> |
28642 <001C60D8A8C9B6E80D68E03F163684EC4CFF5B1EEF6DF5E6C0C3B3965
3F13C13CE1F9B1EFD11D8817083534665198FD8830755391BBD258AD06368414
8BCE694325CCB6582AB71438D34BF1DB6F8F84CBF3E96B7E66DF6A51951334CE
EC24B11F525BCDA1134AE76B7004670D3BA41F6CCF50687AA283B47E1717598E
6C196BFDE21BC56DB38BA07A7DBB4FEC1653BE0BEB641260387BEF1BA8FE1> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
356.586 158.469 mo
(o\351o\342)
[11.04 0 ]xsh
429.276 136.319 mo
429.276 131.859 432.896 128.239 437.356 128.239 cv
528.536 128.239 li
532.996 128.239 536.616 131.859 536.616 136.319 cv
536.616 168.639 li
536.616 173.099 532.996 176.719 528.536 176.719 cv
437.356 176.719 li
432.896 176.719 429.276 173.099 429.276 168.639 cv
cp
.154177 0 .0350347 0 cmyk
ef
1.02 lw
429.276 136.319 mo
429.276 131.859 432.896 128.239 437.356 128.239 cv
528.536 128.239 li
532.996 128.239 536.616 131.859 536.616 136.319 cv
536.616 168.639 li
536.616 173.099 532.996 176.719 528.536 176.719 cv
437.356 176.719 li
432.896 176.719 429.276 173.099 429.276 168.639 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28647 <001C60D8A8C9B7B5777CD30EEC2706247F18F2EFF0FCD8D1B2AAA4975
E3C181CDDE8> |
28669 <001C60D8A8C9B88A65BA91B71C95C79E2595BFD7A517F4A71D739394A
E83436B91246280D1CD63102BE6B2C2BB92449651433DACE35707680A9E097ED
EAC4D73FFF6BEE62C81C32D63A1C504> |
28684 <001C60D8A8C9B747CAEFBC26A39BFF2819386B8EE1586C3CAC86C70F1
BAB44FD74F44D22A5C5DC757A66F0816E2C4932FBAD1CE3F09292C0B35BE69FC
446316A805AFF5DE4C4DCF6EE1023C859A9294B67999444465B2E58797F793D1
FFD7BE16AE4CE582B1E52CCD9D1A67897C4BBAC9E8DF1> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
444.786 158.469 mo
(o\347p\005o\364o\375o\370o\366p\007p\002p\005p\014)
[9.3241 6.10205 9.01819 4.03198 9.25208 8.15405 5.65192 10.314 6.10202 0 ]xsh
331.146 206.549 mo
331.146 202.089 334.766 198.469 339.226 198.469 cv
398.546 198.469 li
403.006 198.469 406.626 202.089 406.626 206.549 cv
406.626 238.869 li
406.626 243.329 403.006 246.949 398.546 246.949 cv
339.226 246.949 li
334.766 246.949 331.146 243.329 331.146 238.869 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
331.146 206.549 mo
331.146 202.089 334.766 198.469 339.226 198.469 cv
398.546 198.469 li
403.006 198.469 406.626 202.089 406.626 206.549 cv
406.626 238.869 li
406.626 243.329 403.006 246.949 398.546 246.949 cv
339.226 246.949 li
334.766 246.949 331.146 243.329 331.146 238.869 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28630 <001C60D8A8C9B66129408EDE254C9C680856C5C58CDE8931886FD33C1
3032CCEAAB93F031A223E0F10B1688B890AF923FA33D50791F3585DC847E52A2
604D942BE0A76707C2DC7FFDDCEEF612E4CB75103563AA302D73FE057047D483
85B58BB1622EE008969F0F8C1E9BD68AC43409FEAD97A8A1EE29EE86CE1D9D45
843FB75131B> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
354.186 228.729 mo
(o\343o\326o\337)
[9.93604 11.1599 0 ]xsh
223.236 161.399 mo
223.236 154.579 228.756 149.059 235.576 149.059 cv
302.396 149.059 li
309.216 149.059 314.736 154.579 314.736 161.399 cv
314.736 210.759 li
314.736 217.579 309.216 223.099 302.396 223.099 cv
235.576 223.099 li
228.756 223.099 223.236 217.579 223.236 210.759 cv
cp
.154177 0 .0350347 0 cmyk
ef
1.02 lw
223.236 161.399 mo
223.236 154.579 228.756 149.059 235.576 149.059 cv
302.396 149.059 li
309.216 149.059 314.736 154.579 314.736 161.399 cv
314.736 210.759 li
314.736 217.579 309.216 223.099 302.396 223.099 cv
235.576 223.099 li
228.756 223.099 223.236 217.579 223.236 210.759 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
235.586 181.249 mo
(o\331o\370o\364p\007p\010p\005o\370)
[8.58609 9.25214 9.01811 5.66989 9.91791 6.10205 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
293.366 181.249 mo
(o\300)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
245.366 202.849 mo
(o\343p\002o\374p\001p\007p\006)
[9.93604 10.3139 4.03198 9.90005 5.72388 0 ]xsh
96.5462 186.549 mo
108.036 186.549 li
108.036 185.549 li
96.5462 185.549 li
cp
107.036 189.049 mo
113.036 186.049 li
107.036 183.049 li
cp
.770321 .559594 0 0 cmyk
f
208.866 185.549 mo
218.176 185.549 li
218.176 186.549 li
208.866 186.549 li
cp
217.176 183.049 mo
223.176 186.049 li
217.176 189.049 li
cp
f
314.706 186.529 mo
323.456 186.529 li
323.456 152.449 li
322.956 152.949 li
326.196 152.949 li
326.196 151.949 li
322.456 151.949 li
322.456 186.029 li
322.956 185.529 li
314.706 185.529 li
cp
325.196 155.449 mo
331.196 152.449 li
325.196 149.449 li
cp
f
314.706 185.549 mo
323.456 185.549 li
323.456 222.729 li
322.956 222.229 li
326.196 222.229 li
326.196 223.229 li
322.456 223.229 li
322.456 186.049 li
322.956 186.549 li
314.706 186.549 li
cp
325.196 219.729 mo
331.196 222.729 li
325.196 225.729 li
cp
f
406.626 151.949 mo
424.256 151.949 li
424.256 152.949 li
406.626 152.949 li
cp
423.256 149.449 mo
429.256 152.449 li
423.256 155.449 li
cp
f
406.626 222.209 mo
424.256 222.209 li
424.256 223.209 li
406.626 223.209 li
cp
423.256 219.709 mo
429.256 222.709 li
423.256 225.709 li
cp
f
616.656 74.1892 mo
616.656 69.7792 620.236 66.1992 624.646 66.1992 cv
741.746 66.1992 li
746.156 66.1992 749.736 69.7792 749.736 74.1892 cv
749.736 106.149 li
749.736 110.559 746.156 114.139 741.746 114.139 cv
624.646 114.139 li
620.236 114.139 616.656 110.559 616.656 106.149 cv
cp
.0339055 .155795 .0731212 0 cmyk
ef
616.656 74.1892 mo
616.656 69.7792 620.236 66.1992 624.646 66.1992 cv
741.746 66.1992 li
746.156 66.1992 749.736 69.7792 749.736 74.1892 cv
749.736 106.149 li
749.736 110.559 746.156 114.139 741.746 114.139 cv
624.646 114.139 li
620.236 114.139 616.656 110.559 616.656 106.149 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28667 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C3C724D0F5C6BF169F72E1C71967F26B4562105E8A8583BC41A15D900A2B3
FFCE9F31BD4591CB25C31293EBF9381ACF282B598F9431868A2ECD743332A8F6
186BC7793F5EA54E68DE38FBB93> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
659.046 96.1292 mo
(o\340o\364p\007o\366o\373)
[15.5701 9.01819 5.72388 8.15405 0 ]xsh
616.656 136.319 mo
616.656 131.859 620.276 128.239 624.736 128.239 cv
741.656 128.239 li
746.116 128.239 749.736 131.859 749.736 136.319 cv
749.736 168.639 li
749.736 173.099 746.116 176.719 741.656 176.719 cv
624.736 176.719 li
620.276 176.719 616.656 173.099 616.656 168.639 cv
cp
.0339055 .155795 .0731212 0 cmyk
ef
616.656 136.319 mo
616.656 131.859 620.276 128.239 624.736 128.239 cv
741.656 128.239 li
746.116 128.239 749.736 131.859 749.736 136.319 cv
749.736 168.639 li
749.736 173.099 746.116 176.719 741.656 176.719 cv
624.736 176.719 li
620.276 176.719 616.656 173.099 616.656 168.639 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
652.986 147.669 mo
(o\345o\370o\377o\343p\002p\006o\370)
[10.3859 9.25214 4.03198 9.93604 10.314 7.30811 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (LSPHES+DengXian-GBK-EUC-H)
%%Title: (LSPHES+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /LSPHES+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28431 <001C60D8A8C9B5EE310380D9ABB94CAD62297C57B5CF61F2A9BA0A7AA
5A4170FCFDD72E6C66468390F4E474F4C08B4163820F1C4D9635F1F3AFFD9A6F
F964218> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /LSPHES+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/LSPHES+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
652.866 169.269 mo
(o\017)sh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
670.866 169.269 mo
(o\351o\342)
[11.04 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28432 <001C60D8A8C9B5EE310DC9E4D654640DA8ED2075703F3C644BF0856C7
9C670D56F4EB70C413F2BECCD0BAA7B6F1C6EC50FCD5BA902D832929A97DD960
CB581> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
695.526 169.269 mo
(o\020)sh
618.036 206.299 mo
618.036 201.759 621.716 198.079 626.256 198.079 cv
741.516 198.079 li
746.056 198.079 749.736 201.759 749.736 206.299 cv
749.736 239.179 li
749.736 243.719 746.056 247.399 741.516 247.399 cv
626.256 247.399 li
621.716 247.399 618.036 243.719 618.036 239.179 cv
cp
.0339055 .155795 .0731212 0 cmyk
ef
618.036 206.299 mo
618.036 201.759 621.716 198.079 626.256 198.079 cv
741.516 198.079 li
746.056 198.079 749.736 201.759 749.736 206.299 cv
749.736 239.179 li
749.736 243.719 746.056 247.399 741.516 247.399 cv
626.256 247.399 li
621.716 247.399 618.036 243.719 618.036 239.179 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28631 <001C60D8A8C9B625CE6BD2BE419D5CB815C1CA0C61BA0A2D3DFC3B96F
CF9FB6F9E0519EA65E7C8EC76A179BF9356B2C1F7F4A814471AED147404B13B0
B2776E0D6E4D16A4BBA0742D992692136F6DCF6FD8FBBC1141BFB8994DCD1331
B5CC1B493> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
662.906 228.729 mo
(o\327o\342p\003p\007)
[12.384 13.6261 10.3321 0 ]xsh
683.666 114.109 mo
683.666 123.269 li
682.666 123.269 li
682.666 114.109 li
cp
686.166 122.269 mo
683.166 128.269 li
680.166 122.269 li
cp
f
683.666 176.669 mo
684.206 193.079 li
683.206 193.109 li
682.666 176.709 li
cp
686.666 191.999 mo
683.866 198.099 li
680.676 192.199 li
cp
f
536.586 151.949 mo
611.626 151.949 li
611.626 152.949 li
536.586 152.949 li
cp
610.626 149.449 mo
616.626 152.449 li
610.626 155.449 li
cp
f
535.926 90.7192 mo
611.596 90.6192 li
611.596 89.6192 li
535.926 89.7192 li
cp
610.596 93.1192 mo
616.596 90.1092 li
610.586 87.1192 li
cp
f
535.246 173.339 mo
616.016 225.469 li
616.556 224.629 li
535.786 172.499 li
cp
613.816 227.029 mo
620.486 227.769 li
617.076 221.989 li
cp
f
544.436 168.309 mo
625.206 220.449 li
625.756 219.609 li
544.986 167.469 li
cp
547.176 165.909 mo
540.506 165.179 li
543.926 170.959 li
cp
f
429.276 74.3892 mo
429.276 69.9992 432.836 66.4392 437.226 66.4392 cv
528.006 66.4392 li
532.396 66.4392 535.956 69.9992 535.956 74.3892 cv
535.956 106.189 li
535.956 110.579 532.396 114.139 528.006 114.139 cv
437.226 114.139 li
432.836 114.139 429.276 110.579 429.276 106.189 cv
cp
.154177 0 .0350347 0 cmyk
ef
429.276 74.3892 mo
429.276 69.9992 432.836 66.4392 437.226 66.4392 cv
528.006 66.4392 li
532.396 66.4392 535.956 69.9992 535.956 74.3892 cv
535.956 106.189 li
535.956 110.579 532.396 114.139 528.006 114.139 cv
437.226 114.139 li
432.836 114.139 429.276 110.579 429.276 106.189 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28646 <001C60D8A8C9B7B9B9DE69CBC96F0B5A3AE98D065C1FD7CFAD83FC43F
1290F4F9D34982C14CC513501F9076D4F8907F22AC9522F2896E944B1C90ABCE
1EBF569BE3E67D6DCC89DBF0C52716419D51E2AEFADD36CC19C82AD0FC3F3BA6
123D0BD3A2ABA4E110BF677253E952D076F531E23520FFA1895776A2199512FA
C9BD1336F7E1C8EDFA463D40ADCD492ED3B75F11D80658BD7ABA38DAF43CCBA2
32FE248B15967CE3B652AF643FE11F6C5568129285AEA24CD260CD6D81E569EF
64502ECAABE996CCD635CCC94E3C711D5E8195F3A715AF8260F36A77EC1CE55F
17D20D8E151C2> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
459.726 85.4492 mo
(o\346o\366o\370p\001o\370)
[9.25214 8.15405 9.25214 9.90009 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
442.786 107.049 mo
(o\327o\370p\006o\366p\005o\374p\003p\007p\002p\005)
[12.384 9.2522 7.30811 8.15405 6.10205 4.03198 10.3321 5.72388 10.3139 0 ]xsh
58.3062 148.979 mo
58.3062 90.2692 li
151.676 90.2692 li
151.676 91.2692 li
58.8062 91.2692 li
59.3062 90.7692 li
59.3062 148.979 li
cp
150.676 87.7692 mo
156.676 90.7692 li
150.676 93.7692 li
cp
.770321 .559594 0 0 cmyk
f
289.746 91.2892 mo
424.256 90.7492 li
424.256 89.7492 li
289.746 90.2892 li
cp
423.266 93.2492 mo
429.256 90.2292 li
423.246 87.2492 li
cp
f
616.656 276.829 mo
616.656 272.569 620.106 269.119 624.366 269.119 cv
740.646 269.119 li
744.906 269.119 748.356 272.569 748.356 276.829 cv
748.356 307.669 li
748.356 311.929 744.906 315.379 740.646 315.379 cv
624.366 315.379 li
620.106 315.379 616.656 311.929 616.656 307.669 cv
cp
.0339055 .155795 .0731212 0 cmyk
ef
616.656 276.829 mo
616.656 272.569 620.106 269.119 624.366 269.119 cv
740.646 269.119 li
744.906 269.119 748.356 272.569 748.356 276.829 cv
748.356 307.669 li
748.356 311.929 744.906 315.379 740.646 315.379 cv
624.366 315.379 li
620.106 315.379 616.656 311.929 616.656 307.669 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28634 <001C60D8A8C9B658EF0ADE51311B4F60408290DDB267DCF525F593A91
297D0756D42D6ECEFA80FDF00CFA2EFAAC8F27DB827EA9B19398BDE549A53D3B
11B5D7A0408D8FC620AEC7FCEAE4EB860E130A0D03E77D5BCD4D33E711B9D9C4
173931BB35280B5806F2E53450BEC0278D24FAA264C32EBF03909> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
657.586 287.449 mo
(o\332o\377p\002o\365o\364o\377)
[12.186 4.03198 10.314 10.3321 9.01813 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
665.026 309.049 mo
(o\340o\364p\003)
[15.5701 9.01819 0 ]xsh
537.556 246.159 mo
612.556 289.309 li
612.056 290.179 li
537.056 247.019 li
cp
612.936 286.649 mo
616.646 292.239 li
609.946 291.849 li
cp
f
429.606 276.799 mo
429.606 272.539 433.056 269.089 437.316 269.089 cv
529.236 269.089 li
533.496 269.089 536.946 272.539 536.946 276.799 cv
536.946 307.639 li
536.946 311.899 533.496 315.349 529.236 315.349 cv
437.316 315.349 li
433.056 315.349 429.606 311.899 429.606 307.639 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
429.606 276.799 mo
429.606 272.539 433.056 269.089 437.316 269.089 cv
529.236 269.089 li
533.496 269.089 536.946 272.539 536.946 276.799 cv
536.946 307.639 li
536.946 311.899 533.496 315.349 529.236 315.349 cv
437.316 315.349 li
433.056 315.349 429.606 311.899 429.606 307.639 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
451.666 298.909 mo
(o\330p\013p\003o\377p\002p\005o\370)
[10.05 8.79126 11.4686 4.47546 11.4485 6.77332 0 ]xsh
321.276 276.829 mo
321.276 272.569 324.726 269.119 328.986 269.119 cv
389.046 269.119 li
393.306 269.119 396.756 272.569 396.756 276.829 cv
396.756 307.669 li
396.756 311.929 393.306 315.379 389.046 315.379 cv
328.986 315.379 li
324.726 315.379 321.276 311.929 321.276 307.669 cv
cp
.154177 0 .0350347 0 cmyk
ef
1.02 lw
321.276 276.829 mo
321.276 272.569 324.726 269.119 328.986 269.119 cv
389.046 269.119 li
393.306 269.119 396.756 272.569 396.756 276.829 cv
396.756 307.669 li
396.756 311.929 393.306 315.379 389.046 315.379 cv
328.986 315.379 li
324.726 315.379 321.276 311.929 321.276 307.669 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
339.306 298.909 mo
(o\332p\002o\364o\377)
[13.5265 11.4485 10.0101 0 ]xsh
182.646 276.799 mo
182.646 272.539 186.096 269.089 190.356 269.089 cv
280.716 269.089 li
284.976 269.089 288.426 272.539 288.426 276.799 cv
288.426 307.639 li
288.426 311.899 284.976 315.349 280.716 315.349 cv
190.356 315.349 li
186.096 315.349 182.646 311.899 182.646 307.639 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
182.646 276.799 mo
182.646 272.539 186.096 269.089 190.356 269.089 cv
280.716 269.089 li
284.976 269.089 288.426 272.539 288.426 276.799 cv
288.426 307.639 li
288.426 311.899 284.976 315.349 280.716 315.349 cv
190.356 315.349 li
186.096 315.349 182.646 311.899 182.646 307.639 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28641 <001C60D8A8C9B60C97DFC02343A3E5C1F4BFADF2D6A13CB977D71B63F
CC7869D9D2A8D6D48BA5B351B43FE416CA7C26B97CC2A1F0470F658BA> |
28681 <001C60D8A8C9B74969EE40BB25ABD91F8460DD23DB9B191A528027CD2
A43C92EB48C42770A0B496FFADA0F67DDBE4B6E31AA2489D103934A6C89> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
197.306 298.909 mo
(o\341o\364p\011o\374o\372o\364p\007o\370)
[14.5655 10.0101 9.31076 4.47549 11.4686 10.0101 6.35352 0 ]xsh
56.0762 276.829 mo
56.0762 272.569 59.5262 269.119 63.7862 269.119 cv
142.086 269.119 li
146.346 269.119 149.796 272.569 149.796 276.829 cv
149.796 307.669 li
149.796 311.929 146.346 315.379 142.086 315.379 cv
63.7862 315.379 li
59.5262 315.379 56.0762 311.929 56.0762 307.669 cv
cp
.154177 0 .0350347 0 cmyk
ef
1.02 lw
56.0762 276.829 mo
56.0762 272.569 59.5262 269.119 63.7862 269.119 cv
142.086 269.119 li
146.346 269.119 149.796 272.569 149.796 276.829 cv
149.796 307.669 li
149.796 311.929 146.346 315.379 142.086 315.379 cv
63.7862 315.379 li
59.5262 315.379 56.0762 311.929 56.0762 307.669 cv
cp
.191348 1 1 .1308 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
70.9862 298.909 mo
(o\326p\002p\001p\007p\005p\002o\377)
[12.3875 11.4485 10.9891 6.3535 6.77332 11.4485 0 ]xsh
616.636 291.749 mo
541.946 291.749 li
541.946 292.749 li
616.636 292.749 li
cp
542.946 289.249 mo
536.946 292.249 li
542.946 295.249 li
cp
f
429.596 291.749 mo
401.726 291.749 li
401.726 292.749 li
429.596 292.749 li
cp
402.726 289.249 mo
396.726 292.249 li
402.726 295.249 li
cp
f
321.296 291.749 mo
293.426 291.749 li
293.426 292.749 li
321.296 292.749 li
cp
294.426 289.249 mo
288.426 292.249 li
294.426 295.249 li
cp
f
182.636 291.749 mo
154.766 291.749 li
154.766 292.749 li
182.636 292.749 li
cp
155.766 289.249 mo
149.766 292.249 li
155.766 295.249 li
cp
f
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
344 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022E8287896034F98F0C335974F7EC994F23645F
C1A8204464AB62152BA1373B95B51> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
187.706 193.729 mo
(\001X)sh
156.666 74.3792 mo
156.666 69.8492 160.346 66.1693 164.876 66.1693 cv
281.536 66.1693 li
286.066 66.1693 289.746 69.8492 289.746 74.3792 cv
289.746 107.219 li
289.746 111.749 286.066 115.429 281.536 115.429 cv
164.876 115.429 li
160.346 115.429 156.666 111.749 156.666 107.219 cv
cp
.406897 0 .379156 0 cmyk
ef
.48 lw
156.666 74.3792 mo
156.666 69.8492 160.346 66.1693 164.876 66.1693 cv
281.536 66.1693 li
286.066 66.1693 289.746 69.8492 289.746 74.3792 cv
289.746 107.219 li
289.746 111.749 286.066 115.429 281.536 115.429 cv
164.876 115.429 li
160.346 115.429 156.666 111.749 156.666 107.219 cv
cp
.704463 .0555123 .205966 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
205.046 97.4692 mo
(o\327o\343o\345)
[13.7463 11.029 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
345 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022B54330B077440232E43B33E7F53620D8BD32C
7509B88CBA35B7E02575B89A922FC6D08F2749CCDE056DB22ABACAE66A27F17F
0D9398650EA33090C375B3BEB24F26AB744CC46ACD557374E9300AD659E5EEA0
A0F3769A5842EE30527> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
254.646 96.6892 mo
(\001Y)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
348 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022B181DBEFB4044A8E0D0DF92F6735CC89F270C
F967940367118B192E5216263B5BDC00503767A93F524B5225C0C43EE0564353
AF8B5277A8B5B069B691DA67EBD459DFD55989697815EF0480557261F67A6D54
A74CDC6D72E694E0D96E498207197DFFA> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
512.386 286.349 mo
(\001\\)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
346 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022AE88ECC5C2CA2FEB053E1BD4E62E51D8C47DC
4FA103EECE16794DC7853096FAA22BCB6E2AB223DBC0FE117AFAF47487357193
2EB44856AB9ADA4A904F5BDE54C24BA32FCCC2B4175B63F7A0B182427BAA5459
E468FA8CE789E6E2E376C425E25ADD834A2C74B711076404FE88194E8C947943
821D9F367> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
382.406 149.389 mo
(\001Z)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
347 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022D1B33357ECDD4C35070E23870B27D9D8A979C
AC913210801CDE9EAFF6C317D7128285FE62E80252C41BD1EF785> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
382.406 213.469 mo
(\001[)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
349 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022889D009B424B0CC82DCE335B296EBE01C721B
9DBBCDB4E0C93B4123DA5BE216954FBCABB2184B1C07A7D6291440DB19BD96FD
94C612571D2078B6A5CE195A21C5B000112AC38A60CE0C58A429315C5F69A323
1FFFC524AD17495B5C8F417AE29B8F33EC5B94EF3736215944445FD7DC765BF4
A4E> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
266.026 286.349 mo
(\001])sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
350 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26025E5C0B53D13DC82C7AB7CB026510445B0DF1F6
9788E7ECC880FEC162D4FBF0893B386EFD4EB> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
716.486 222.829 mo
(\001^)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
351 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26025FE9B6B0CE1350AEEE1C691B14C6AE56186DEA
FCE80895D0F51832778DC63169DD32AF2A1EBD368C96392F596E5F18FE113473
E66BFBD34AF7CFABC5DBAD2C44574E2009B492AD6D39BBDD20FE3E79DFEB01C3
62E79EA2A2AB0B51463CB9B862F954C13B3F70CF3FAED53338D19178FEED2C26
B372FAD75C96FA6D991A574124792D97A53DF8D82933B184B0DEA52D5FC91C6B
C> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
716.486 289.829 mo
(\001_)sh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
253.566 367.929 mo
(o\326o\341o\341)
[11.1599 13.1221 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
291.006 367.929 mo
(o\300)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
28628 <001C60D8A8C9B67106DCE06030CC378319F03DC2A59F29632BE590439
740FEA1C4E5B4BC8EED41D08FA67DA3FCB2D66CF5A13D3B752F6A4FC2E722E73
0214184A0DABF55E8F1F230E6A7308577D829465EDDDAFFEF> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
300.006 367.929 mo
(o\365o\364p\006o\370o\367o\263o\340o\324)
[10.3321 9.01813 7.30811 9.25214 10.3321 4.93204 15.5701 0 ]xsh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
378.266 367.929 mo
(o\300)sh
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
387.266 367.929 mo
(o\330p\013p\003o\377p\002p\005o\370o\263)
[9.05411 7.92004 10.3321 4.03198 10.314 6.10208 9.25214 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 3 GetGlyphDirectory
8295 <001C60D8A8C9B5EE311F6494298BD66CF86BFFB948248783F0E09CA4EF
DF49F9032CE9214F6CA1A28B23C9269B268386F2A5704FD972C98687C6179E8A
AD4B5B17BBDD7FC1186EE595221480020CE5EFF8CA01EF032DB59FDDF9AA08CC
DD43938C6083CB6DDFC22FDCFC22BAA9B45DCBBAF3B5D84554F63B883B62C559
EA234DE33D6500B36F358A7CA064309FF90C155829A04ED9793A1109785A744C
3595696EB192D44694D7074AC88BDE157FD38568D48D29EF74F8B268221D4C43
34E424FD1744E3123AF9B50D1E6A07BDDF91FE1C51F14A786BD7844C7B60B2E4
D6BFBC225B37162409957A0B> |
15424 <001C60D8A8C9B5EE310D6E459E8B1ADA3AAA093297591B9CEC442F449
1FD627AF81A659972173650941597031D06E1F910841CF919A17AEC33EFE5F95
062C2316D989051E93B6CC0AC29ADBB31408997F19B43A56791E6B924FAEF503
74A3CC6E2A77A78B7D95AE15B6889EDB06426EDE6D8A50E1E930024F0C7A4656
93636E7A2B0E7A0041C1ACA00C2868EDD90E07DFC6ADEB3ADC005247644057FB
271FF98447A4CAFF902F4D983411E16B7927A2B82506AE950C072CB9BE27E4E7
46E9EECB813AAF601B223031C0107612D35D9214D4B0F27D2FC3AEDC7221B256
40FDF2374573F9E62F79260A71B7B402E3DC5D977138C04128AFAB1AFC2673F8
5E5A3B41A92EB756B6AB5ECCE286C0D3542418FC51BA8EBCCBC342FC956492E6
5227CB665409AA7E8F4E7B7C7CD1BB99495A50911739758AFE3948128BF1F612
B1544C5E7B318D6D236FEB0F532DA4CE2D095C93CA9C7C9C961C148F02BA2B38
3F38DDD359205BC6C70927BA5039E0B4B9FA834EA412809EA8D53F498EC8226B
359133AA0F0B20B13FEF35986881A23153B6DE7FAF38D8ADA1EFAEF4E6F2D416
4281522729585B1CD610183C8AAE63EB4C5E3541473E21DE57759814B15C9FEB
AB33FFCC097A5FEFF867C147C5F3E2E41D6E158743533A7788EF9765002DC813
5675B4C18ED6A7A4AA555> |
18698 <001C60D8A8C9B5EE3102343C67F129BE1F56C15506E18BE1FC0C71955
95753EFFB3B286648F13F4C3D04A67C24B5EFD6D5538DBA10E87A2CBA430B447
553AACEE53D71673C297B82AA91785FC7BCF3D1663DC03A38CA2E5453AF5F7D9
65918786DF7CE7B2EC24527F377EB19B8E061FE02FD10438B1049194EDC50FEB
5E6BED8FD031BAA2D64C8465D0BC30B1DC4F5AF47C4E1049C7DE595BBF803BFF
6D713BE0BCEF6EE41BB679065D80D34555237E262966672E12541B4C245E5123
53C2D67C77825CFFD3354EE87F7E442E2959431BDFEE2AE7D6D400B9632289C1
FBE4F55B4DA8747BF0D9A1977BCA2318031093798BC9670E8605925A4DAD982A
21B8CDE8B7F36C7B802CD95EAFD5F6477EB1FEB57375CF56E8D34D7BA056F57D
6D610B8B79B84AE88F9A6572A5BC7BDC05AE03D1B856223ADEB59ADA76AD4900
D4B75C2CA7CDDB848A113AEB1C2E84FC2CBAD403FAEB785B2C496629B969D80D
BF64F2610C666D7D55B52D0C3380DE74AEC198B639A1AEAA00A7684B559B9C6B
0CC4A4DB1393B2F9868E37A77978B28B628E9CAAE40927A4080FB7A47B2C0A0E
FEDA6D483524C86D9C9357A72B29E3FD7BD> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
449.186 367.929 mo
( g<@I\012)sh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 8 GetGlyphDirectory
10278 <001C60D8A8C9B5EE310D1D990B9F277D493A512B188047C49C8C4081F
9ABC7E94A5CB0DD5400AD26ABFDF227E48141D0BF2904391C6E4B4744892212D
A2AFCDD37F2474B9F8BB3C39AC1F10C1C94D41220219E6A0A4BD3DCB8C387BB3
D839457382E22F185BB84DCC46F959F74C68C8CAA53581BCC0F036F6021B259F
88254CA42E866D3CA4A81B8444A3A403B7991A39498A7FEEDCAFEA2AFD575EEE
904> |
14465 <001C60D8A8C9B5EE310DF6A5BA4C02A19073A6C260DF17FC007AAA3C8
EFA34149A58B99EED5B85A654084F3D9D0E8AAF472111A444065D70FCFF6D55D
AF479B7B123667B5A49968F99A0813B95B672C2EE5157B0BF474D17F5BA2BD6C
2ACA8E52B29C822F5F1608C9C5D18597E913A3DBC60C63A0357584A677DDEAF8
8606FC390B1FB18C539F40F2D6A70384973EF4AA9E625D8358171535F5F80604
925B5047F6AC9604DF90F74E8780228B88CF45427D85B6CB819A8CAC696D704D
F76DFD3DE8E4F0C721D86712B05D1E6BF8789ACBBE4A30DF8E553ADB952C00D6
2ED5ACC501588CC46E6A896E7A46F9C07FEEE8B15FA024FFB96B8DA677B61260
63B66EE0A2F039764B27AAEE5852DD398FC5858C6187541DADDB749701F1D3DC
1530EDDE906034650B198BD2E4C539927F0767CAAA5920D55FDAC7A39DF9B501
8E21E5BD770B6CC3F761AD583CACC43DE2A67C194708B9C62053BDCCDED7A7FB
C0A0A5D332DE6A78DE64E46518650A9BFC3127F9199E81858F35F17508DF0355
1B5F7C4C5C5076F1F1C05CDAC641A2EE1D6950D7DBB141C9179401ACED2EEB15
265CF431B0F4B2B8CD49BA9E1358630876DD81CD721FF6729A580B9F3B8D3737
1B97485CB97E7E0CDF492DB3DCF2D5D8313D736BE553E5727A8BCC887E6DC576
F261FE2CD6F1A182B79621D5775995B6CDB660947C8B5A49D23147ED4D801047
BE5CFC26C2C3F4860D4215612E5EFE7B7CD55107B3C89E8C01BB90C320AAA520
3A950A84647C14A73A93BC2FD34DDC9733BB2F8843A33> |
26111 <001C60D8A8C9B5EE310314EF6401CFC25C044A2E1B9D5FB982F9B00F0
1379C06C7D2AD9EB2170494068404E9C0782437607AFDEDD47E3464F483DF1AB
54335F927400922DE2A2F556E8BFBB31775147C3C23B4CF3CA0B248E2893B1F6
9E911BACDC054747F971C11AE3178837D72F8424B9D65AE25664B2528DE22EF0
CCD38DC894A116B33EF7BD1928AE76E224266EFED66445161ED9694FE5C30B12
51036E7E94E33CA1AAE2ECB7394EA021A0EF8A1DD5F71DFEB8F8D38CB2E152F2
F43CEC19949EE1FDB7A14DD35D9A95208F75C2DC466F030D3DA8787C157BEA5A
7C33A93BFD3EBB7290A00FDB94921C65AE31D281459B4A6D2F249F481A1CB23F
887E3ABA4E6B6FA1EEB7970D94C07EEAA019F1E7242A74EEF78A4E22EDD1AD0A
2AF67F05E65F1758884545B883E6D947CAEE80184BFE6C1232C37369AC805BBA
EA4DBFE917FB32FFD7BD9BA7D67E5B84C74F99FDD809D36C3EC2A7306B70493C
AE5EB1BA8EFA513FC576A80811D4C8A3EDF1BD6EBA017181D05563806F19372C
C52EBEDB4A4AD18D52F1DA88DF3ACF6D9845DA09E054A9FE88908840B25C5E6D
A7D18EFD17B2CAEC5FF0D59BFB5FD2559DBECA08D26A391EE9059960EF144E55
994A6F372783DD8B8D392124D82B4B2FC41AF88B1A1E21AF666D372FCDDA86D5
8BD666AE3BE77B99314C4226B064437CCC56F9CB1CA979B6A725E567ED541D69
DC03ABFB0045FA18603A6BFE9AD7E068926E5D9CE8CED13E09CE7FAEF6EDA816
98E2A2D10D93D52753AD4AE8368> |
22656 <001C60D8A8C9B5EE3102361FD3A4A1A95A388B51622A2B080F7DCCB85
09923A0128899D9ABABEC71B1EDDECB36F63CA906C40037D0DA87666B9FB71B2
B7F524309A590AF088D0EF6DBA5C5A341829E5732DFDDFD00E13CF6FA3052A77
7DBFF2E65A080A4FAC863C5A690CC925E0BACF8D20A94CF740533E6D99128F30
714FF284ADD6F4ABD8F326ED1C133C15F92784E759D138ADC35A3A0913C4122A
F5949397E629AF1E2A42092A39758522435B8482A9B187D7F65E1494D6174CA0
82B68D963A66412C71BB8F54C7B7DC94CA774FF58ED04758BCA96A236E7D4EB0
D6A6979752AB0AF87D7EA9C76AD9ED7BC8E6540559609C46D73C44E0A417D93F
149260D85BFDEB472BAF55DF540EA9FD0F52829D1FD23556CFB00460AF145174
73415EB8B322B18A1A3A49DF7DDDD413849601090217EAA9B6CFE16374FC7D62
BB274324817124B693010B7B0B822458F9446DD7A33B39AE392E27CF32B58E62
48C49F7F3DE3E7B67F65ED53D88B8D06E18D5602DAC7C0B4A63CC4D5F> |
8298 <001C60D8A8C9B5EE311EEC98B663974C3BE2658E04DB0B5424EF6108D3
87F296FF6993E3188C6914D57AF25BB37ED87C38DD1706D390FD7820F95A7874
180394F784442D6011666BBF1327427713B796AD1393E0A14B641D5AF47F6A50
3DE53090DA1DC2255BAE8AEC875252> |
7465 <001C60D8A8C9B5EE310921957CC25C79257D8C6DAD9877D56F67D88EEC
E15C0692AF077B4E4B3C4FC3DD6668B157AE2DE14026D911316272D35E4C0D41
C85C18D9E818978F2F5353067FCD6CD0341DA45F86A34F569673FDFBCC1595D6
D7E833FC53819A0CFD095750CA1015A36C10257421698E463907345767F7F1C1
BA1F1E6725B04E6D9D54BF31325CFD8C138E8AF6E2E9CF20E6A9DD647C67F21A> |
14624 <001C60D8A8C9B5EE3102C723EA1C8027C726B15885F743D33BDCE900D
65415B683143FF256094D4A44B25E4D2338492F64F613AA57E0BF0A380922B93
56BBBF128C91A21E029B0CAFEF14AA4254DA35E8110F18030D006666ADABA022
234A57CCD5FAFFF4DD32A0B4BC8E4B4C29A7CE26F0ACFA8E53E663FF4633C0E6
3E1414C0396CBEE12B572398C83EA19E21D354125EA362BF2B830A1DE422C512
B7836697C1AD12F1AA2F97EE8712503E6FAA8B2D506E33812D26D80DC1D4F3BA
C394A88725C5D72361C2E4F20437DDB87250D8E4EE0DD21EA49D5A670AD137B7
776B60436475EEDB80C596FF7A87A56CD17B9AACC08A2EF952FE583B1235CF80
F2DB6A59DBBA2C5D15DFA95197DA87B3C2DD94884717130ED01DB14610FDA16F
4FFA655C94D8722489B8EA9FC947FDD66F1038D029A0FE3F1A2F075FFE8D1352
12BC9D205BA4E4638114B22A41CD193A88DC5052D1850B3A4D68279D3B942DEB
6FB089ED6672A8554F19B354BE30252485E593408B0B93B528DAD13727062387
CFE016D8175C85FD9BBB59E0F7801B5528C57130E8E7F3CBEE4388967E0D55B1
83AFE08D95FEC822050A817D40853C784097E30DAF806A139B976E2EBEB67E34
124B0B9C3E2358FF1536AC20EC540C1D395E3A3DFDCE1010A977DF5EC8C7164F
9303A1C81A6279F0484397C45FD0731666C54460EAC594BDE1A73E3D0AD18164
B8B679096A2C0F60DEF8A6F402B689AEB02362F0234EFBBCB9A8582552BD570E
6A635D809D0B56A6087FDF64727> |
9814 <001C60D8A8C9B5EE310DE68D996DE78C1563C635ED21821F2A44C9580C
90A648ABD1378C75712287839567CC2B52DB4714EB008629D1694A1B0D974114
31863A2189F1B7A585049186721206BF934EC79B8613A5C38FB9149ED5BE1ECB
6C7383178A984FC8C19C24BF9899DFDD1D65B6B3FBB4DE7DC6AE4D11956A1502
BC4B82266BD458ADE5EC8BB9C2A9EE8957D197A2B04FB1D26CA12C96A3B5692B
60A6D2A16DE212C026DC6F3C5B256F73A7DC86C654B097239BA63E7EF6CCE046
972AA3B36B0D4445FF7CD01F819A03398E441E8659ED423FB79D8EEF3DE78F3F
DCEF466EF46223CE524E716649FF8C4707B675955BE7070575CFDE87E34210AA
1118615CAFE7C61D27FBFE0A2EA8BC116F4C6E4F7A3F50872AC51F4622CA6983
D6EFCAC1DB820AA3D8962944E38EFEA106843696E298AD569115D87D19D44DE5
86545157E566460B6D2F76B9AF3E1B06484D176A4CCFDFD701EB88D4464E> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
58.3662 389.529 mo
(\(&8\201e\377X\200 j\035\)9 &V)
[18.0201 18.0201 18.0201 18.0201 18.0201 18.0201 18.0201 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28709 <001C60D8A8C9B5EE3100E8CCE681DBBAFB76B242527E54> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
202.386 389.529 mo
(p%p%)
[18 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 2 GetGlyphDirectory
8309 <001C60D8A8C9B5EE310D19F6D56BB607859D3751085C74F5FBFC393D55
2486BB38484141CC059DC1DBBAEB851F820C91AC3E5AF290C39F5B77CB96C286
B5D5402A00392F0FD4E75D28A78DFD525825225D447695C5F100E60126A84ED8
264862987BD71DD1E2ACDF3E30DBE8755F386C3AEB0AD936B46D76E35CF7FE40
68C11D8CA234300901B3D1665769C165DFAB349572695C3BECE11F3A3513EC39
A15825EA2C359C7C8001025147DEA9910C2DAC78B8AA757AB726D0EBCB789F65
9F635F04DE3359A2D496F2DA1D9AEEB2457D30B13709B0BAC939751BCF311CA9
F0B47822E82EB170198C8288E2AD9CB7797E475885D9FC2885A1EBA13EFEE7EF
E51D61E0491D6BF174E255424C3C2E260453EB17FC81EE80E3EA2EC8F782AB5F
C0949BCC59B9E6924AD72E2A3FFD8EDC46D40A> |
7468 <001C60D8A8C9B5EE31028434C4D6C30C64DF1C96B7E46404E90C2FA9E3
8488C286DD13DCCADC3A0AC855704BE521DFFEEF8C2FCC7041C780932D31D84C
64663717C7BDC9EC5CDE9EE4785DC1293B522116561533EAA4CF35E326ED302E
FB1E78D291DCB210CFB838D87A23CF01ECE388435919AD440336B2190CFF0AAC
9CCF40DFDA7BA855F0025635224377A8E04BD4F921C208D72A51CA69C5A20B6D
1714F71EF327303F4E298F819B27A7302BF7551867> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
238.386 389.529 mo
( u\035,)
[18 0 ]xsh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28612 <001C60D8A8C9B78C66ECFB0787869A9A1A23E44B3E9AC19DF9D3CAD17
2DB0C5BD42A48D92FB57C46F18F7186> |
28607 <001C60D8A8C9B89100E29774725B9AF77F3AE651C9530684501EEF93F
9A1EE95508D9A5441CEC60FFE9A27C4> |
28614 <001C60D8A8C9B78C66ECDB6140BE188B7AE32EC2E6019387F28A4D7BE
FD974FECF9A6F435E80E22F5012EC52C00C178C2C2233F0B02C6B10EBA64AD22
230138C4945FB4B066D7E42C2C6EFB71864F1E255E0A8537DA22ADB3D546CB61
607C115C7A490FEE823B22C59C8C165CEA3BA45F26ED3655E00609C70321AC2E
2A2A318B590A3969C48D77B80570739FD2C391323D888FB7CCA532472D5F05C1
B478B862C545672D9550E95CD5D79AEB7716096AD08C7A6D17AAF6F6AA3FE1AB
AEC80F85A> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
274.386 389.529 mo
(o\304o\277o\306o\263)
[9.48587 3.94189 9.48587 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 17 GetGlyphDirectory
13614 <001C60D8A8C9B5EE310D14D71FFBBCD8258762979E413F7E53733A658
8AE42DFED312990E4DD33124CFA6EE7EBC4D6BA2B294FC611276395D4B87DCE8
F2B4053246A0ED00B37AFE81ADEFC983B6858DF1AA6CC864958A04CBE1CECD7D
416678559050A4923BB6AE1C53BA249851B8FA3DE874AC580F16BA0F58530D74
2A8E50BBF1F4FDAA0F945179C9E16D6F6A2225D17A9B96FF51368FA119A3E90B
89E3E39925A188A99563967D6F01DAF9F83C50204D2497D55A15108773C5C078
F75FC49001FB54A32EE9888F56C76B3ECD7BF1BB8357979D54A625E539B7CBFB
557C2883AAF56C65F02D1238911E0D3BEFC5972940F4EA53100F4DC169B0B7F9
2DDBBFAB5ECF01FFBBEABB2EA8FFD8A6C306384A07775DF0B6350F591E8431DC
A1A7275CA32361D> |
8788 <001C60D8A8C9B5EE3146F1A47B4028BC3608BDFFB0B0E5D29C44F12AD9
B1E692154EF8974C91DAC1906997F632A8C593F0C17C662A539DDBA45D083E2C
A7FF4F289BEFBE1D970DDBDC67AFE71B68E8DEFAAB6F639387FC959942E7BD29
2E8683CBD14F766350D1C4C4E0B219C454A66193225827F05AE7EB0F76B509D6
1E6C6A6A67B2F8368AFBCB293DAF46C27BF4A6D76CC37B15B79933906051995A
74BF935FA3926E98D2730439E1B03E6F180CAB2E1662AC61A46693E1CB13A357
52DADF99565BC4568DA23D0D3EE77FF1C0C235F0EA90D4CA39B32B68A58F803E
9229E17810107EDC29B6129D1953814932AEB5EC6566509FD9B78AEA3A69AEDD
E8D1815BA0DD626F20514D82BB1FF9E8B2FD2B021E87AD9E9A648E> |
13881 <001C60D8A8C9B5EE310234B0DF4FA585FA322AA436913B11695DFB616
8675B4751D3CADA0BE52D169C4268CD5954D3E4543B0CD92E3E3219C9D02A35F
1F91250429D0BE9AEF3F162E915462A8FC45D2A2F026B59FF83DD8B8273D850B
4BBC14549DB78936EC8DC982C6A800C937921029ACCB53042163D800D4B53B72
722BB291630866FD72087D070C32A407559F2F78A802B41012069D73F7B771DC
EA01F92B5A5017E491AB16F5838FABCAC79B9E2796703A77126AF4EBA6A595CA
B2645439494DE2178EF206EA3E56C16A388B920DEB354476A0305986BCE3B23E
DFBAA1B810699A1BFDBFDF6F20E176DB6E29CE56937C8763F36E43973ED63BA2
37653C56712EBA1101D7310E326269AFA7053618DDD8F90690B2C6858B589B29
7A70734C1D92E74F8955948A97B111A39B969EAD87E92D0AAEAA0D7120644E9C
FD2ABDCD3FF1E69E6D2E4E470D546EEBBAA579E70CCAAAD24418B4215CFE9CAC
ECEF05C> |
9575 <001C60D8A8C9B5EE31371A078C09E5B91DE093C44BAC15F87531AB5DDE
3B0C7EF36D8C45DE136D8391AA19AD20637FDBC4F408C3D506A3C3CF555BF732
4C362801282870005096D56814DCBB648722A1AC08D1149C79688D2B64BC5FF3
23FDA8E64F87178019A098D4CFB2E23F491611CAC4B894F7543085AFEAAE92EB
B168B14C65344392602A66DF258DF3A6A7A4115A725CE54C0BD00B9A9941BA61
9E35DEFF2E025F40E2AA28AF71A2D5154FB8AADF19CB77B1074DED211261EA53
F49D941B70E4D5F461A6D5AF767526DBCD8E9752B6A821DD16C99604FDD4DFBF
8C70C76B2DE97BED33748F6E18C7849DA664281B08C3C143282336E070E47391
62629F7AD47A445AC15EA7BD20A5B85B67E8633B642D8A9BCE19481870358D47
E4DA9A6E33F1EE5EE2DC86BC71CD8873C7DEFBFCE3FC69070B394454E67AD21D
1C24E2B5EDAA96CB14C9B4A8E4EA9486F6B4463CAAE6B250EEF28FFFE7FBF42E
9F67E6DF5D7CABD4D04B69A6578DCE4B3E4AEDBA6CE287B433DF974DE8C6FFBC
B243CEC3EEA8C333F4D1F4C46AF5685A5527FF05EFD56617063FC60446EF1363
A6BFC71FAD3A3C99CD2F49E4FFD982CAC9864A837BF673D3F8F3A21B30752A9D
850BC504A0B5EFBFD747EDA519A0DBC0B197CF05615C632CB76AC95E8A366A9A
1F6850E241B57DF31EA197629D65280998A44CDC78E0395B2C3448BB21366E71
2CDC9AAC2417> |
7609 <001C60D8A8C9B5EE3113C653E198CDF4BCAAC9F6328058DE193E0EFE23
64A878C71BE38B519F5117840446A5101C4A506E5C1D222D797AFA7595D9F69C
9D5AE5AAA267AA6C3FBAFB01150CDA1B78C03E950203149EF4EBF593ADCAD150
8228E465A3298F642F9428D9019B43C40EED73> |
28435 <001C60D8A8C9B5EE310D6CAED735954C41DCCC8F64B7D7EDA32CF5A59
FCABE1CF904498FBB8AF3ADBDEC0082> |
15054 <001C60D8A8C9B5EE31028DC810AA6E5FCEFECAD182C35FFADD4230E7B
84C7DDC7ED2BF5E0896F9D3B642BA06F9F3D04C0DF438FDD607C8C1B8DD7E7AB
DA4CD5EEC4B6D69D7C2A72E0D979F9BC3C39192DD43D9C56E52277E952DF363F
AABEF8D650F5928B812DB1A2E3A1D9AA3BC205FBA34021889D049F99B3A31460
C38A0A8E87B2630EC6E0861C19FB5A1005836D1B47474FEDB7A7BD8142D75DA8
F1391C9CA8FAFC030AE94BFCFE4EA95DA8CF48C0EF5E230F868DE9C93EAA4F20
366FF048DC9B1622CFCCCA5721B07F5C2B160E65D10FC5EF881C12A84C05FC27
5888D7F69F8332BEC468CC8ABFC54F3091301C3FDC39E073875034145B631741
7173846E873BF10E422057F5EBB4FBF4743C30DD0EC7D3FEABA68F1EC64C1BE5
ADF7DCCF28D4B9573B2A81EDB59F6B9100A48530483D387A30C642AF3829B50F
7BCB22F0751EB0B52444C6A1E02D1FC1353BE18779FAD6926D5C0AEDE094A37F
0468F4D3ED0E28FA2D08225FFF3E22A9582649CA952BD2EE5DAA2F6A010640F6
FB69B75599CDAF92C2E59310D1BAA843C7027AB97FECF7313A63084DE5BCED0D
E26FEE0F6E17A13> |
11558 <001C60D8A8C9B5EE3103E3F5F9FA8F914F294C27EB7BFBEF7146DE4F7
9C30E79FBCE36F69F8AD1A64D45691C2D48B638FDB2A9BA3393304B409D9443F
7489AA3C1D2A87EBEB2DE893C284BC83FDE05E85EC533BFFFC437DD8916D93A6
81522FD7BB231523A4F48EC74BBF8997B8068FEF2040256B7B4EFE0498839824
F262761B1390E8B536837C10F6A64436D048C4DB5A87F4C1CB2E6483E1C43939
55A4C0013FD443E93847EBD98346E4C7C0B7CABCD9D875F9758DBB29D938618E
2BB737EFE004B4C72651CE6B250790D64231E3FB13B0158D9A8ED8177492DB52
A7C020B5490856B7D9336F7CAE966B051DD63C424CCD6C93043FD7AD4C789FC4
3BF01A0B8874A4465273F80D8B64F7BEA4E6E3017064D753749F34610E2C4803
1C863A5223312D1370A23D79F97D1A769B200F94CE1003F9230D5726284B19AA
CDE7A562E595B2A4B33A26BE8D7FD25227216BE31D5DFB98092FA234044F7360
3B0C6E727281FFEFC4FAB25B68F2C77B695D5320208A23398FC8AACECFE3D945
D7B92EC5536815774C32B37D0383D4A3A06A0558A9CAABE5482022F310698E87
74943DA614E8F7B7023CFFFE1AF6830> |
12646 <001C60D8A8C9B5EE3102A822048A8CE583800F670A6675F44F326EF30
72729D80F9B5265BA59FA29A067CF4B92C870CE7D372C92EE815C43899A27E89
DD6C09B7953E05C434785CF27DB9873E892CDCBD409AA268062770DED1B2A9F6
AA24845742A6DE93C8A19683E4CDB249F620F4D5B829086469C013EC5562E020
397C3DE9F34B5D034C2629D338F4C75470FCC63710BA328221272F65F72EC282
EE5FCF5C7E9E06F9009C4CCF64B15E7C27CCBB04EBBD90057367B24D0FBA371B
C5C273C994C4D258DE843495143678DD7F1FAD2E8473F7711BEF73D565160733
2C18DFDABD7D5BB7E09C262B2BE5E9723797AECDD83C089E7EBB3E135FFDD59F
32E2DA89B18B58E76742910A45FC23612249B1205A5E12D90669C5611FB9308E
87F6F058D9FFDB98F4A35B8468DE0D7762A9B9CF2A05EA8FF59544164305BF94
17BBBFFCEA1E82E9EBE0A9E04B5CB0EDD1D582BF79941BD1848EC1221B215F93
7962FEC9829D976070E5C13FA602F8D730EBFDFC30D75DAC375EE475097F480B
37A34C9F78F3DA3DBD7A1D83CCDCAE7DE4FB413A2ABC93B57885CC681599DF0F
57101FF7DC0581D2A531E> |
22347 <001C60D8A8C9B5EE31436D1BB7AA05197A77F0EE095DA9AF38490003B
02E6901545FAFF928E9BE8B9586887BC8CCC6352D4F0386D987E6F884CF5C743
46EB1B955A55CC695AB4835999D5048BEE4C36E44637739B0EB814E153802EE9
F570CFDEC584BDA1C30B26DD68BA25A738A28616062118E7451B84D550B265EF
C0D68D04F6630FFBB598EC331CE5D25F523BF0867486E14174610340EF56A8B9
5A68A4520C943E2A7752D77DFB91F81E7C92D58120B28BB22DB837138D759914
60345FC5481C8666ADFE610B59B50F064212886BE6E84A946A6EED4D9DEF77F8
187ACB4316865F77229D40791B5014B5DE92D5F44F90D376396AB51822E2386C
6FCF98B69017ECC5C50096423D2E150D8E65B39A3D64864F8533B79F88146> |
11000 <001C60D8A8C9B5EE310D0A5AFF28738D4FAA838BC56774D72EFE1419B
D91423402E3E668A284A4046816DA9866F05869A6EB0CEEBEE62EF12EC25CD62
BDADA58C225573BD8999B412DABC4F2EE7810710D095532950360324476BBA2A
34E884DF889632C4362A25EFE73184F7A1703177B55E5AB597799927E9E904B4
47C4DA6EA500646DC07CF847A11933F6A6A9799678F2466A62095BB6CB828AE9
778F267978AFC26B9F41F53616E924A7666A6DC4C410EAD6AC4EAD404524F316
2FA17AE81F1A968CE1C3ACFF548D53938572601AFDB92C1DE8462E5A7903ABAB
B32BC8A77C5FBA5E4E6C8753D8A9754E106844129570A36ED0732F04DF877BBC
32736DD73E19A5D61F87B38271A3EDBE2063AB5207326E419C2> |
10909 <001C60D8A8C9B5EE3102ACF689BA89FE2A2E9E2F575F7974D33091FF1
FDA80EBF74FF5A4ACEA62B8215CDAF0C69D08368D2E0BC112C23BE7FC167BADF
2ECCC0E4AF1B5F5A7CD78D1FBBBEEAF51AFD2225D8C7A977968B1DC12C6FDD0E
073B24954EAA95DF0B3C4710C35AFB33BA121F69145AE67E3E16A1C1E428F589
3C2DB30084B31809EF0EEF41D30EBAEDBBBA69C68DB9E8682946051E532FCBD3
53014E2AB270E454BD7DED10952EA9E75CECB165AFE39D255CB3DB87DCE96E34
74B6763F616FC37A7EBFA3EFB585157B5F4302A80DC03310B3BC487CA2BD89F0
DFCE6C61F7C70B08A5D2D4ED0AA01133376129DF1044F2FA4C8F626E4BEE4A9B
E8D3C6490FF9EF82D2D982C62758624B286FBAFF44A7A402655277E6474B9E1F
58F3E4E5206E83BDEA757FD6978E5F319CF28646EEE1D9899E0A6FCED35F4> |
13557 <001C60D8A8C9B5EE310D362AAA4DE36B55DCD16B5F5DFC7AB3FDFA4CA
A0BD41C7336041A3E020A7C01AAF20F8322DE0C32785464AE95B725B57C0363E
272024A774F1D3CC8FB41537C680FAB8BD50E5FAF98C5818CBE2D09208B1F058
CFE4C24CF8E25E70BF4AA57B1DA596AF08019A593BFC59E4197D2F20E59B3552
6D8AD42D8C7DC5C988DF1AF875DA495FFD281015688DF625C62AF560C8CF1042
68CC60248302763EBA8C05D4ECABA78AAC708C861EA66473AE8FF4B726A5B143
509F316704FE41D21BED15457CA95872254C697E605DBB77BC0835B06FD9D559
BE624352FE4B6A1F29700D0BEF0C32261BCB9C5D8EAB4F2072E6946A1B176115
E7B20721D2636893A9F1D754487AC4B3A66F5202A> |
12070 <001C60D8A8C9B5EE310D1C63CAAA0D4387A37E24C54D356D7863E6983
F88BDA2033B3E4B247BA719955B54A0CEB6DC99F63AFBBA46FA064B362A41B50
FD0D08E0C9F21070946A6F95573A7EC898E291F272435B09D12C6F16D05281E6
DE51180D8044C3E57C3828E918D869E5F636898119AE423A23542F23C479103C
D752639AB031182AD7621102187826D785F82AF90997592F4C114D49B4FF092D
60E5CC1C48817958A600AFAFBD5EFBC267C25FB9339FF9985991056E57B19B82
3D140259F458E0DE47ACE644C30C2DAA64E5D86332EBC5F6D3EE9A2B9A69FC5B
26A91D2806BDE046858DC8529362D7FD9627ED074892C25DBA67D3AAC45B5EFA
6179C979B649F203588626353B112EA33441C27CEA97B631E79B647BB40739D1
D5D72CB6DE17642763631020163C2C9CD99CA4CB0EA3D7CD0BE2AA08935003F9
BB72E3A386A20CA92719D3339055FA23D6B1121A3CCD08A4142A404234FFFD87
A9CBC205F73F3CC59446A9486B3289242C6C874987940E9BB2B3465631064D86
1> |
15169 <001C60D8A8C9B5EE310D2BF4EA27ABD8F7AC6C48F45BFDDD02B70C45A
65B358CD24BB043838B7192861F5752024C66E046840AC2BB660D4C542504823
A64C11617B9AAC61C764E727798E7CFF87944A77ACE6E3B06D91B08422F15B7A
39A44FF1A2B43E963FF42F69F7627D0B080BD48DC3CD816FF33428C6340077AE
A950DCD2113883D6BA785DD46058E1C8A706B6ECE83441E6E28597BD67395225
D59E9A66C6A92355610580881DAEC18CFF0E795D52E8752F5087ECAC5E6E5D4B
8688B6B720C422568865257672355E8FFDEB2B80BD0583BC7301069EB81EEFA6
9597F300543237061D7AAFF7DF5010244035B1C730344D211A164323007D257A
363A9A34ABB7F35ED416AA5D2DF0017492A11725E43A116C0E4E240B75C894AB
AA4E2562743E9198F7E54B460DEA34744F5C67810700CE8AF3317041A1B28E5> |
27095 <001C60D8A8C9B5EE310D09B61981FFE6512FFA862CBF5AF049E045122
122F076EAEF71734157479164B5BCF9C38CF83C3380E3C876CF94FDB8AB5F56A
3C57426A26EB75E4500630E4A3FF633941CC88D72B0842987B0A533B87AAE41F
B48F1335ADC64713FB96A62470226CE5AD9FE6677E46074ACCEFA012AC9DE6E9
C127DDA2CB3C8D10E4441C6CC5B6711E685DB8E77D079AD02130B3708FE686D7
2FCBE55424D057EA95FB427B49E0BA99D73FF46A603723A30A0FCA86B7D381A5
B9017FD5A60EF48E61021E488232FF0AC92F1CF0D131D1E3C2FABFB9DDEBC164
C7F199132CC4A99B61FDCF0470372F084156A3FDA939E63F3132A0426AEA8C05
5DCA1BA592DD369FA9635D5DCCFE15570877DFC9BA124D63DBDD816E305CF1A3
69F4FB1A653CD351F9063E810A3B8CF6EF64F22BA245509307B9049BD3083F0F
475C4E48FAC6594A9AF7C9C087119229D1951D2B972604027F019ED5BFC8A3C0
903815A> |
572 <001C60D8A8C9B5EE310DE440651B03219120B25474DE3ED7A0DB5F61DAF
92FD401B834FF178228BE3EC6BF579E516E3566FD3AD70F4F4AE2C99C01FF1F8
ADA8756E9E24E1DC07241477DFB> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
302.286 389.529 mo
(5."T6969%g\035\271o\023e\377X\200:\316-&1fWKo\023*\370*\2354\365/&X\200;Ai\327\002<)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28613 <001C60D8A8C9B78C66ECF39464E4C36A41875CA13B3F1084BE95AC3D6
B174FBE334F26768C74B2ECC4CAD6BBADA966160EFCC7F2747E70E0119D6AEC1
B017FF7666859BBB2EDC8A44058072DB251CD7C890E5801C60DCDEC2DC5E66B6
27F3C4E46C8D576EB2D7BE3EC5C6EC7CA35C52158FC62F188AA92F4A597AA61B
2CBCDB07E050E80BB022F1A82> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
92.1662 411.129 mo
(o\305o\263)
[9.47987 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 11 GetGlyphDirectory
10265 <001C60D8A8C9B5EE310D2EE0263EDFCF3829382A8800741D678A739C6
C13E0B737D4A4202A1A008C95C733C0516D641D213F84403438A48F49E99AD67
DD73323A13D566CC4088F7D8572EE24C8CF491E280673B9417174667AB890255
382268F7A5F36869BB64112596BF3D5AECE3013546CAAE7AE188CD8153C6F0EC
927EEFD35FEA9BDD433A7D4FFD97359ACA1B8609EDF69B02C098F3552C1E951B
6B29D8D0BBD7C009A5FF62B3B899C4C481985B8304A741A66F75864F2DFC7EB1
A3DEA4E7DE43B77366EC0B39F6C55C5D675CFF4263A96701BC462B181CCC8378
8054D76E7034A7EF08DC82BB5E620C0950699C21F843452ADD81B577769D96D1
1DED98317C95F4B629F52032B404A01004F20ABD2C3CD7968> |
17795 <001C60D8A8C9B5EE3102ACF6DA1574FF7DE927B8CBF37F5241CBE4591
10F5CEF92306AAF001C4E4C848D0FBCF1E97CF09D79B33182400D635FAF37844
7D75DB108A532C80D850D8D913F46D44F97EB2057FEE27BF74578F95877B9FAF
F6E357CBF18945F0C950567ECC42FDA83DB4E123D642E32FBA57B1471DCA7AB9
73BB27BED96B73F0B0A12EEB2737C7F657D0708B540CA09A238F21B11FDA3631
F5ADAD8450CEBF0F4E2E9FDEAAE7C0A8F86206F3AE422817B30431A83BCA74C6
8A20EBAD75F6902EEF457A04931416F88DA72C4C88AF8A3FFB3CFECBA7AE062C
03AE0CA580490699F24141DFB736E2D44F6EAFF71E151BE631069E7F8D2E90A2
199071532F49C7F8E6801EB3082C8C7AC4B39AE00A849B599A39A81A4B5E3C69
167BCE7EE65B69AA3D413A5BF63C408731250F92E7BCE1F000C5C77> |
7836 <001C60D8A8C9B5EE310DD051000A79CB4E16C86FD9740A325965681821
81C446CF813491422B5C43DC819E91D89D2E083F598344E0CCFD53B1FA742C2A
CE25A0C76D7457C76F8BD88EE10FA59F18543827AC3B84D94E3AC97C76BA733F
B67966A8113FF55E23E0725F81D75C440DCA8915B0258E4995FE4B5489BBC3E8
1AB84AF1C46B87E3900A21C8CF97FE163041F8FFF6FCFC048C9C916AC6DE077C
C8ECB62B38292A680B1EFC9AA2874F29B17A9AC1B3360AD189062907C9510E74
B0FB684EC63597755CF19E8B7E086C939161474E215869F37CC97346C3597613
BFB95F397292CF2FA6EDDC1BC4BEB2CCE7F6973B37A8081F4AA77559EBEC33E6
4234ABC8C7423EA782E9919AED834DC33616362BCB6CC4CC4823408396BD6CFC
35FEF62EF59866FF35BECF08B4D2035E2F44FAB684271745A6DBECF9FE5A821B
9ACAB7E4D8C41AF68F26A097A5AF4CC0EE8F2BDB8AE071A5> |
12909 <001C60D8A8C9B5EE31027E0F87C0852FB20BAB4D56A779125033838E8
9F0F9EDB9D544F349FB123AD6B0DF6A49DBAC75CF086B844F788BEEBB65D6266
9AB2F64212BB46E9A321DAE5CB900500A7F32030E05DB4F950AF41A98E02BBF0
58D660570342E833DB967B2DB450B44AB343B5CDEDFC59DFEF1CA2B18F95F84C
2D31DE438E993943993E428FF20760900E802478D234C6B6B25792FCCBE98B9F
19CE29143BFCB9264AE7EAE715B756F8C83E83AC6A39599409BD0ECE0A271705
2CC93988D6B15A313DE40A575DACE8ADC92ED3E8814DEF5944C3B4B5BA4A468D
7C0AA04594CA51F4B957A02C449043C631239521C510B87CA82EB9204077C86B
36D6CFDCC7F710C2947258A4AC918E70A027180EE79B98CBE0CD1FDD91D45658
479C8F821F00D9313263E1EF2ACC7F6433B0D99F43EA0AFA88D594F555BCC0E8
ECEC4A11F03FE12C59C9E3BE241A77DDE2B892FDB2322C170822EEAF4A3A39E1
DE69E5BE9C3E8E94220EA8CE320CD5BFC5DFE4882F270B22F484A8DBA3A188E9
600ED27ABFBD50EB74D2461377108AF599B2E9D9864315A08FB15E36E69432CA
5A15D888A2FA73B01DF839F2CAEDD4EC13FAC45FB91DA29AF28A7B7274F9FBA7
790051A7A11DEBAEC094548819B7C8336438E463A1355CD35428D718134D621> |
11637 <001C60D8A8C9B5EE312BB7032C5B3F346110D1E989C610F1D4130627E
7311AE5D4530F6477154D12776444EDCB375815B5920773CAEE1DD350345102C
29A939429AC208813BD9BDB756CFACBC74834E52852C8B7909AB1E10AE381991
902B8C603D9A05AC7E2A54B3E2D4913917B1C5F9B2FDA9C403A502F7251A2CAA
BE3B160F470C162F06B0CB0AA43FA31B47E5F14937B3F5B27450B0802AF69A84
3D236EEA1983E9C9949EE70EDB627B400379C15297568B7722DABC98DD82F4DA
C51A8EC4615DBD23AD406CDED5D8EA2297B2EF6B7EF29171F4C15B7DBBCAC3E6
A8FECF74D3B49861BEAEF2B2D30C13D9259> |
7436 <001C60D8A8C9B5EE314FBF93A6B0E45704A97A0D1B01DFD1A94B3E486D
23AC888E3E1DD2B57A0F4B95729A9FA36AC339966FD24FE7455F33DEBF5D6DE1
71EC23FA2B10AA3E4505079D6E1ECDA35B35EEF750E6C65662DFF363C1216E39
17A421C414C423048250DDD98B871FEC3CC2911DF557C1B7B0D43D508DA0B6F6
5F1211133FBF7BCAC38317> |
24572 <001C60D8A8C9B5EE3113117F70C712A69E1570B4A4D777730217112BD
FCA1E56903D1B93E9FEB8134A31396BC5B560D1A47F26648A41E83930532E859
AD93042308591E6EE2C95C1198AFEDFE11B61C868767CBA27130D2EB520B5256
2B6194649848F48C7673542174D8A7B29BFFF42D8BD018C5CE1E2ECEA50F7EB2
52971025D20E5238CAB29D075687F2685D3705C862543BCC2FCD54705AE09910
F7ED9F1DFBA0D4781409B26266E6689D35E20C9849FD94E766C533969E386A5D
57826F82F142779A42B0879BCB8D1760D8D836B10FDCA3D4289B9D0112DE2CB7
86D023CAEB4E2832B37BD91BCD323EF5DEF05DDEC31C33FD6783004B21D9094D
D7023E83E89680D1D1942FC29EE7F77D4A4E4B5780D1856BCCFFD55D6BC67489
B5E534B88F5854DCA0ACA5D4B409CE8C3D759D9C2D40CF3C20A7AA5A2F5FD36C
FDA5E96BD971F6E5BD52F3F4698A228A7E99BE83A8FA600BB5BA2D1D2C044CF9
EE6708444F59F1A7E5E58C3EE8729FED2C8F350543EAE3FDAF2BC6CB44BF5539
1C544C4BD60E0C9D2B03EB9D9401601675EC08F4516C5FCD008EE24E634CA118
991D8390108E89F> |
7749 <001C60D8A8C9B5EE3102279042A721BDE5143AF714065BF96AFBA5B13E
135479F40AF41D4337468A5C8DF4E0B10FCD6735C2CA0A6D1725EB6CB52CC4D3
B82B275067BEC533A19AE5056CF5A5C6FCEB1B60C4F17B5E2BE14C22B8B4528B
D05A78B6BD69A2446FB96AA61391395CA394BBA383945C275F47402A9C91D491
26380E61AD6EE4F1C434D3400D0754A922F4C1816946710E092EC5C8B8A7E499
D8A2BF97EC3F9B437DE8ECF73C9BF5D95A7116C6977B97F5F007277EDB45DEE5
472511EF44CA78F085CE91AD65DEACD51F7BB91649C75D57D3ABBD98130D74E0
9AE3C691E49893AFDF96A74E636DB1> |
13832 <001C60D8A8C9B5EE310D0752CF9EA0A02C0CF152C8198D4E6A62C327B
943401D7670C10FE73F68150AF149479989B74D6C70A8479F842E10F421F95B7
EF0597022B537F2975A9FCE7F0AD0A67844804B7513438C03902D689D8FE23FA
03EB6BAC06B144502B57A638BF6BD660CA6B67BF9D642762E0949912D1E688E1
2DC09CB414B2480C48AD9CA779C715F76ED6DCFD8FAE43C3FDC28B6E9797A82E
E95A43801705A0915834F00B01FA4849ECEC91DD6453F0A5E52C483B04D59041
C09C7191014654FAEAF004629C0CCA3E85F6E7EADCDA32D72F038B817C2978F9
970A7AA2CEB6B064620D1096909F59D44F2B39B1742D230E936EDCD08FA> |
7423 <001C60D8A8C9B5EE310D3B64359BC7E1A5470EF735B03284A9677B1D95
D677743FBECB52A9685CDF2D55B1F8108D703E5F6BBA5B2164> |
10905 <001C60D8A8C9B5EE3117DBBC4B8B754F6F4E3D88831B2316BAA8A087B
93941A073083E9613F69BBA956BD52ACD1E07F2F4AF4229428868483DAFD7828
3F6AD3EF1160B5B7FAF4ABF2A8B8818E8A9CC2D657E10D72A4EFB64D2486D132
A45C6B3C365C0DEBF6121E6AC1D4C149B199C5EEF1D1983293A746A9E664AF64
34D8A7D073C788459D4EC4E131369BE0EB1F5346F7819932E91E392B90D9817D
09F8C4CDE784B0169D9BF0F27D55C27CC699956A616D7E551DF028C2345B98E4
7ADC072DC0EC537D4EF6B815F196291175365F0B0DA3DCAB4F62C94C34FF1D95
34E2AFED8554E0CB54EDC06DA516CD045E70BBE1A39AA294A5A617D57D44D97D
4DD162A6A83150EA4331892591F07EA49F3FDCED718247FC79A6D0C1D8516A4B
153> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
106.566 411.129 mo
(5.\(\031699 &VE\203\036\2342mo\023-u\035\014e\377X\200:\316-&_\3741fWKo\023\036E5.*\370*\2354\365/&6\010\034\377*\231X\200;A\002<)sh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28618 <001C60D8A8C9B78C66ECF7D3BA67398AE9E49D48F332AD68055040EFD
C570015E965A8417FD47DE058ACCDDAB1162F2B6CC25E70521D0871F7A1> |
28619 <001C60D8A8C9B78C66ECD5488D579047B239C54C624A020C31F1826B0
F16C5909608B14476F5A930293AA6BE740A4F5A140DFDDD4E0958C1A52E4FBF6
BA81B0D638051C0E8D1E2D2009555C79DF5EF428E3AB8105A28DC840928CB64E
D9EAFFCF7368A493D280C274A8330D43887F88981244A989D0ACD146FBADC503
B6AAD299C122524F4F9A4E1BD3F87EF997F6B2BDF74FADEE69B2E551CD72B9D1
72C9799A7DDF4F816AC1A7DD7ADA9B720DDF8501D420670D8354A38C2F839B67
C321B6B8AB70310D30EBC4494DD1896C85773999A629B4EBC26C918FA7D75D61
700FBE81143935EA816370E8F4BE4120DA73EB73559368A2975308988C646D81
DC1> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
121.386 432.729 mo
(o\312o\277o\313)
[9.49641 3.94627 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 8 GetGlyphDirectory
7620 <001C60D8A8C9B5EE3108F04A9B24253E1E5F208033470DC1C3DFCD0CD8
8C47E811B5374CFCD11C7522635C47ECD96895FE757F802A40DD5AF1B92CA882
5DA36765A05D0DAD51AC1EE5B9F56D9BEFB8358350F9E8F270B621930676C3AA
11A0BF84DBDCD31B8EC79566F1F3D50D40BCA42D0B0A1AC3D589E06FDB8748FC
26EC66C43E777E92DFBC9631140B5CCEE5927C771B62933D3D306EF7BBDE1CD6
73CAA624789DBA4E0405A9E2D9F144238E402868D30DA2CE7952EC380DBC5249
4EAEB6E99B429D21403B8922C9D0610CEFB05C8747166EF2B2BD43D421B25F4A
A21926C12B> |
11858 <001C60D8A8C9B5EE310DD67710FA4584835AD702429918AF20E2EE4AC
666A2B8A01F551EF279EE7F693694C04F31F3C044D6C22470B2139AFD6654234
89E52544739BC2A0415D20732B749183EE18A1BC544F87473E9B289C836622C6
2A902444C121F6BA6137A7FFFA8A4EC58024C231BF6B5182FD5F182E57F940DB
AE6072D2B05E97B12F9A6C177C0E713FB2CBB10598CDB4A515F2ED236D532629
3B87FCD24418D6F051D0F93368690EEC0B171A3C7DE35DAE55489D9CE1FA94A8
CF9CE17C9E9912964DE0A52B01C18E1476421E09C88D00027834A796959707D1
F5581617DE9AAA24D6F31F5E5A7EE93CC> |
9775 <001C60D8A8C9B5EE3156276F0828238E1CE49CEA4908134B3EB17B70E2
31A0B862949F4FC6004B0D4CA97A9D5BCBCB5D3ACF0D7A19EDDB49E96CC59A7D
DD1880B0BF897DE1D27654AD218955BC90B771C4476E5293320140120AFCD590
49C3511894F78074401DABAC3FB2E9947F13D159859C806EA27E4C2E8D58455D
7CB3FEFE95979D2445F6471F68D34401ECAF0E2514FB7C03356114F217542845
B6EDD828F95D3FF3B29C14E3C2BD8F96B72AA79436DE1A8D520F110458833101
07BB62C5B0E2CA425E2836E783C2E56684CB9A1BE8C3F43DCD4CD4A9B8B300EE
D92EC28C93694C5EDE37E831C83ECB8C8113AC135E267A6805A0B71F1EAB1F2A
959C72B14A0FD96AD9CCAB43B45AC9201442263CFC390D460D2E48EF84492087
68C281AAFA166BEDCE9EF17221DE46CE43C9FDD542986766EA0DA042AA2E939E
3DAD9EA78EA6A708E940BD7975947B4C0F16C26EB6C6493779B8E9000754BB5B
697B2A5F7342E3CC69677C78D9E900108949BAB6B0BF425312897C2074DEF864
6941578FFE31C7BC6E> |
9725 <001C60D8A8C9B5EE310278D84EBAC674BEFE616C264FF404CBB02D4460
E1FB4D65A8B61CDB2CF6FB715B89921AFA513A07180A3C5DC4A386B507E36907
753628633CA22A983E7BCC42980309C3D7416A48CA483B814282C15616427665
4132EE4C11E1BB33472D69451F218992F0C78996AAFB51224ACD2CF1725DE980
F891476A1A81A950A712A91DB1AFB2287F590481C2B91C9C7F0C6124E8CCD5B5
8511A64B0EE31F69F18CDFE24D30C7AA5174C5D37CE1E7717C2549D66366D284
0C5958AB24CE4B0DA032AD7688228F345AB246F40ABEC43DF2BCCAE7CFD77229
B700A7EB3859E6C708B1954ECA1527B59F4C760717476921476214C7FED61622
10A2F0E8068BD3E1E46A7F1E9D5CEB197497333B172D7FBE1E41A99F50A88E63
39A2305C> |
8760 <001C60D8A8C9B5EE310D1A0FEB2215841E2A0EE9ADD7B54C630BF2AE5F
F99A1FCE0E9351F813A21404FDEAB2B02AF8E8E7EFDD12FEE61A004CCD53467A
9399A73C4A87A60D6B9385F67C364B9745338B2A23724B0111468F3EE5098386
29BD1FE79317150319D41B45C8EB821C21D2B431EAF2726EFA5963C7ED7B61CF
E1E098024390D0EB2E331F69085C3506294FEF67FA467DFC8EEC0DC284B47DE2
5D36C9AFEA0E142D62960AA3DB9141AC0E5C52E5407CFEC97931D2E3DA5D24F6
0E62759EB563826E77> |
24652 <001C60D8A8C9B5EE31009E682503058778850B595150C78CA6B79731F
F82E24359ACC1D5E74FF2A5D231D73162783EE4A45730A7AFE105F82FDCF261A
E29788ABB95D251859C146F3BC44EC39BEBE14F1D8E923D5E1744FF283A1C6BD
E69A576738EAF12278EA84FD37330E48AB09B39AF799F6362E5731516601D52A
D84C2E368B31F1FEB0E9FBAA22D8F6C22161E7F01798C0E51B7F36A0586635A9
2C99B5AC22283B64306A20A596FA4005FA6955A484A56003F23FDE3A2A3A02B7
35C8E6EFBF061C480D82B47AE54545E26198456454D2781F5B4BC54481CC7E3E
88F8428F972B1A2322678E35912BEE879710992FC343D23D304478DEB42B95C9
03B020C9B8489EE5F581A82FC62FC57D429B89BAE583BA1D819803A60A624D3B
0B6F36E61A33B8AC74EFA8503CB49A3AA2A379C70DD3A6865D34EBA1881ED63C
C209F30A3CD734A2CC0379FD7149D9A2FA8D9B6C5D549C7762A08436A54E418B
B48855D8E035DE2885A1AA096BB4537D84526E7B5058D34F48AACE054A73DE66
5206C23F90BB95E72D4CAB1BA4FEC99DDD744AACF6AAC954922BDF36170AD7EE
AF6AAFBBB99898C4DF50BB5834BEE913FB67D734FF43AD259983415D87FE1CAF
6D4C0D2> |
11765 <001C60D8A8C9B5EE31026EE8E831332FCA08986DDF7C68F7CFDF5A4B9
901870FA9CA349F0F94C9526EF379BDD3FD4421D3F0A5EFC52A543F2D81C4B48
DEB2992F97BF8FF8B774D46A2B11C7A4D7E9A8AA617D7DCCF73AAEDEB661572E
9CDC402E00EA2EE25FCA69DE5E12B207D7B53AFF139CE410837F3871461ACD93
4D65CF0464B7275E243AE1ED9EBF3F252441D801E1933DFCA9C13964419EC478
42D30F294D25A6F0E0C3E022CBCE759F9EB32D9D06E7793E5EB61408C3D2F60B
BFDEBD73411DF2FDF4351924A57CC83033630129923FEFF34F66C736D528F35C
DA672932CE729E788F6A276E971513DABDF37B1D621D8998D2436214FE52B53C
389504100A49FFCD8D3520245FB39EFA50277644C035394D87A5B712FE6C874A
F62DC0ABEC7D5C11990152D39399F8264D18A4AE1C4405931ADDEE4ADE5B1C6B
76BD1A8727673EBAA0FBD86D33A52D9C80FAEBF2E6C5D41E49C7BBC62045246F
4953857BCC354D41AB1438105C9A3288DEB46F51D1A3882C4E273CE7B9BBEBD8
8A912E8BEC1267BD89C8F9FE9B40CA54DE78A9BD4670FC63059436A5E> |
24286 <001C60D8A8C9B5EE310DB76856EEC9EFBB90D4FB7ED0F88F7EB70954C
DAC90110B66F5F8FFE17DFFDEB15D7FF1A6DF65ED2A498380D79991269E54767
03968BC85FEA809AE8B9E8502B6F3573E400295FC1E2DF9C74FC8400DA1CC2BC
154FFDC1843F68B9F9F150EA0FA91F9356959C32AFD6722D1177BAA9BDE2745D
8EFA6A6A6C00F4F7FB285068B5D75D00B9AEF43191507EEAC77CEE03840785C3
7B66ECBAD981CC0A499FD15A34CD6247DB41392F8CB8DD73AFC4B3002F7452D1
12303157F97E865BA7389BB9DA149FC7455B00D72640879CE93EE501D493419E
A4D7C9EC699E439F31C78B7B9D3294620FCC09AF8AC32DA7A28FDDB3F10FB20B
F9B55228C6F619C4642A5B987F41AD27A65D8C6474A2CCC8D64FC9AB783704D8
262DD65F0C05DAD7921E65936> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
149.286 432.729 mo
(5.\(\031699 &Vo\023\035\304.R&/%\375"8`L4\3651fWKo\023*\370*\2354\365/&-\365^\336X\200;A\035\014i\327\002<)
[17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 
17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 
17.9999 17.9999 0 ]xsh
%ADOBeginSubsetFont: LSPHER+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHER+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28615 <001C60D8A8C9B78C66ECE3FE51EC4A6C00F5F743D3A964A65A3B26B4A
BA75D1C6449C63EC7E2BD2BAFDE22A96CAB5112BA62956C94C83D> |
28616 <001C60D8A8C9B78C66ECA399DB3215B61D1045333ECE760DE944D4DAD
58E494E9686CE6E0B7F3BE1F35A93B5423265BA3893C04B714A69913AF9D9779
23B3C20D3D2AA76C91C82C1C386A7D46DE7E32B075962CCF06380F2D2F2120A6
00588A3E6789AEFC99A5B99FAD22A2D4F5D95FBB7D27994C4F36761D753099D0
4D937122FCF22470C8A4DB2D425FA5D9B241F> |
28617 <001C60D8A8C9B78C66ECA5FCAD2AAB40A4192A68649CE4047E4AFAECB
7CCE984F38B8B50E6233F27BD605D687743F24A7E136BA1908054D9AA8AAE8FA
60DFE236222616415444B0B8B81E9B590E20EC5E2AE4CA73CFE760E5978319FB
10D6E85D90B0F0670931F7021C1540F7F59AF2F4001DC35F63939A901107334C
C707991D976B1159441A0F1ACA86EE9A9885D2AA13CD06CBBC97DCCE8B0B6519
440F899D41BA7449252C8DAEFBE21085C577DFAE8E5250EB7438F2FCF6755F16
B841A2282B2> |
!
end
end end
%ADOEndSubsetFont
/LSPHER+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
195.666 454.349 mo
(o\307o\277o\310o\277o\311o\263)
[9.48587 3.94189 9.48587 3.94189 9.48587 0 ]xsh
%ADOBeginSubsetFont: LSPHES+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/LSPHES+DengXian-GBK-EUC-H 7 GetGlyphDirectory
8370 <001C60D8A8C9B5EE310D1E7C713BA048670D05D2A8C0AF4E6B55746381
E41A5DC66C581623C1A6900AB9706E30968D1A29313B2099BC6D6234256FBECD
EA9493AB0E3A55C1D847A7A422EF6427F6CAC9384841B415AA72C6012C19E46D
BE0B349DAF194A4C26456A5954DB6975EBB9EB4443D62690344E364A2B73FE9C
BDBBC0348689FEDB780B73CD237200AE2A81FC79B1E741A33062DF69A5C68581
E0BF5A17525B9041B2C66ED99AF202357AD420DF9B40803EE9288CC39EBA7203
9832613ECFAEA7A3221C0CE7E867EAD626EA5FCF7957B1A4D8D094292AD3476D
0499C9694C2D77C6C8B85E83F11E569A5D1AD32F21C89A0D5D39C831DD0885D0
72AF74B4BDB7A0F7027C0F99F790290415700FAE26BE75A0BBCAA18902C61FA7
BB222E19C22BEC5B5BB3AF55400BCDCE0106> |
19029 <001C60D8A8C9B5EE310D0D804719E3277B335D938AD58C5C509662043
1A1F0275EBB57CD4A7F85B907EB96B4D78D0D7816FA9595BCE0E414CC00CBEE3
833557C9EB66B3A52ADBC366E85E766A4E7AD1DB5F925021BB6A9168AD23D006
B179F1A658FB904431302DFE639819215D1B81E96A73BC0A9628338061DFFB96
AFA4CB5B046605CDC2BA91554307967F2ED3C6286BDDB4F7C96D304E7E5297B5
4D95239E4C170F956C5D304BC7C1D905FB574AC9E77B7DF58191DF79B9B83F2C
55974C4EAC2D66457CFE700E2B34E05DCEC6089E83A02ED6D54CEA65E109D6BE
6239BEBBC79C6D49377785F8EDF445E531A72A8A8E75CE456E364D8BE39DE787
4515D199F2C3618B243F3786E0C839DCF61E6CBE1F39F90D40FECA329B9B580C
C20BC2213D5EB69D27AF0696957511F1F00DDE93747A739B15457197E2F5B4F6
4030AC5DCD0CC96E45603E75496FA9F3D7F9E0582D0FC8087932827E1CFBF04C
DC5209F73DE804426706033DBCBF256CEB64B34EB70C0C5D4ECFC16399AF7543
F51FD0876650860E6FC2F4F3985D980A3EA822D0A32A1FC47DB2DAC0B0545053
5ADAFDAB791C9E115E1C85EF00CFCFB45F8DCE4E15D234B31CFE6DD43FEDA2E0
4F69FAD4C2DB5A96E546AF42F01119208D458B6A1B052BAFDD315FEC303C31C3
64DB817F481E19E6CB285CE2435513C616B7E0E2311FE88C623003A99D03EFF1
2621F770DCA8B82FFD1C95BD6DD27B84ACD3303> |
9099 <001C60D8A8C9B5EE310D1A3AD6FDD29C7AEB6C9ABDBAE2FF34C52D879E
C325E21FFC4428B069CA24F86C6447269FC589DA9ECD650D605E5A4113F32603
4A29B30B76FC255A72C340097BB8ACAB0FCC661E6D7DD77006F46A095EE06656
8DE885D53432AFD406EA406582ECA7B771D22CE72C33C2E68902A06117D77392
2122F0A32D839F23E5411194A8FF00B7560B11F4DE054FA6FB6C89CDDFBF9528
8150723E15348875C0C631BB24AD624BD1998B73627D6CE58FDC962365B9F5AC
9AF4177FCD351BA2DF3F56DFD5D6E72905B433988C787AD6CAD31ECDF7C2D94A
9D1FC4A11B7D9B8804AB5602787B14CA1DBFFECD6DEFDDC322E653AC659880DB
F0B5D7CB64EF88D86685DFA7C65DCB5976495D9734EFF5AB9CDA21EFC8F0AFFC
33E89E6C50A5C3CD880F55578F4D7042> |
12961 <001C60D8A8C9B5EE310DE497828F2919812B3D3217FF55E66E8B09B53
76D69B39638CE411B5D8F4A874D5BC773290837375A190F5D9CC2B9A194C5F6D
B6FDE30D25D77FE7B26B5D719B076FDC26D04855C473CD3601A78C0BF54AB7DF
6F95CCEC397DB1C9452A4293E38BB0987BCAFCB86C00283AC9677688FB3BA86B
CC15F14E7B53DB6A90A1D3785A8E3DF01ACA55683B07DD043F4836576BCC09E4
62B8A99BDE5E45FE8BC55F69457BD8B2FFA0C6EA10E72422D9954508CE2BD2EC
B1EAB8FC178699381D0E340A9153C3B6E85D732245BD4BA3D073FFE3C6EFE5C4
AC4D3831F70D3CC35D48A8D38F843E986874038030F46A45292937268EB08A87
B83C8032AF1D8DBFA1FFEAB66FCA3D970DA6F0A715711DCD93679134E4DB1081
F94A5D2479D36D8D27EC5AAA8AB3DB43F230F0341AE3311352F5B4BEA0282718
4A2BC996BC0A217E025B66D715D2C9B3DFB4A21A89EC69CF5E3195497C62C6A9
0A6657CE9678FCF1DAEC22A2D5E75B48E3F87C71D3842656C483B30373B72211
528235546C7F5665828A8FA0E9D2E008561B11DD7EC0DA4A210751A53A07AA74
A292594AE784A0CC0459A266CE4DFF19A9AAE324AB41D15DED22C49B34747810
5F72D559C4B0FEC3C8BC3273F22419E4F4C683E8C7CDE2D6E469577A7404912F
4F2687DA573B0EB7479F8BAE4EE1A750C761D50EA5F7FFF12CA34BB63674336> |
19489 <001C60D8A8C9B5EE31092EF318333F8FEAF50886BEDE1753AF3C28696
A4BF0AD28771325C83D0AF08A7953283CE5A807A63C915C8A81A10894D7CDDD0
0EE68C1E0D9A58B0B6C1588861118CFD907708AFE174D2F4C5ABD9CA9A5B79FE
47652B1B5C9A419427774CC574797F904B6A403DAF65DA4A75ECC67598311361
A384DE21BF08368E2D6090E068A4850B9F53928C2B1D1701197D07F22A108397
D05F9DE651FB377AEA21404203FF1780D337C00D8BA50DB64D2CA2795A9F1E72
E9CF0A2ECB6EA9F93FC9EF71E3505A8CC7B334AD386EE966617F68C2DFB4EF90
725BD072B2D4BB0465C0534C4ABF4A8F9AF3C924ECD470C32E33CE7B6BCB3870
45C6E3A47AB79BAB02D751792411DD2F4BE2948B8898919F0159525E813BDE76
D69794DC3553DEA74A01240FE56890067E29F9F9370A087C3869158D17E4B686
BC1A5AB4E229BA03D8928DFEEAB3ECE0A6120851B34C77440BD8B3ABC295F0DB
60E7131E5D01DDB127605E5E7F5D343F2D55AF44289408D1356D2CD7D171120A
B2A855614CDA7C28FFBB92B8F49F78AFD29FE49B97A41EA7B0202FECDE252205
D513A72A2E4C0195D3680E8BA9C6F2ADD34C055EB85C5DD6DB00AA0E28D1E16F
A098F287544F71F8B8C90BF50F2B330EAF451C872055B70E621B299E41804692
4E165C198F4D3931867F0EF2165E8FB370A0B30B40847C3FFE6AB53D87401FB5
DA320745E1125> |
10936 <001C60D8A8C9B5EE31036F8E298194CFDA76C67D014FB23D37F3855A6
361E98E062D1CC8496FDB329419D23D800A2F5DA848C177FE75A85DFD2D378EF
876F1D5CAC15DDC64755613AB565C2DECDCE99EEEF6433A2D517F06E10B0020A
D27DF4FBA96942BA1AFC339886C727055A4E9999D30E58A4BE7CD4B170B37737
D25FE3CBFE69567CDB3788AD862AC92C6B165E8663C37EB3393D70D4A723EFA8
F89CAFE5C640CE6AFB309E311AE54734048DB648CE17903DF90A12BBADFCD0D7
9BFD3947B73C6D77976948167396B4993440B00BF14FBD7068FC1136E6269B73
1016A1F1F80ED25C69B2CE0668A8335134F143ABD2F1D8098D036C384F0EED52
456212DF29B05BFA6829C0C26A9FF11C49910B43C70E23E6A18CFBE9794EB714
74AF258E7EFF4B35924C9A79AA9BA1DD9C11519380969BB2D86A391A479AA257
E4C19D48AB7738EAB01A6AD069B724FB1F83A1833F0775C2843841E65985E1E2
F5C2D6BEAC6FF8E1C2E64E3BF5AE5DCFF743781F2EF43AF7BDBBA0DB4ACD14C7
172A916A0343E4E77A0D5F419> |
11980 <001C60D8A8C9B5EE310D04131EB00FD1C1DDD5F7A0BD5A11ECAA5A98C
2DF38FD4727A9A5265C58A1AFAE6F23EEA91A7F8D7FC9459F6FFF551359A79DD
B7830A29572A6462ED8E109AAED3079D723CA3598BAAC81C17FCA520521AF184
E93A2D3ED6FE9D38196C253590B351F289E1D9A3C7819D378E1DAABDC2E17306
ACC48AB99FF96504411B42049F00C97B84EA692B20AC0F4B5CEF6CC490AADDF8
A4B681D074A7181BE24DF1EDD597DAF0D7241A29ABB17244C50488E0424FE578
1B9A709B26B263494A9ACF1CD22213B107D8DF1542F4BD01925F4F2DCFD1D40D
98AB7AEC273F67DC6151122873455F520E6150357412F22A2447B9BF555FE2AD
175E9F0D7CA44058EAC9600F7353259C47BB7E3A105EF9B06CDA02B34C98CF1C
7F2B3097332B4EFC10035BDB7BD24F9504A5CAB6FB1DE91E8C3C12540B9EF3BE
B133E5D327F89B848C0F2FC1527DB249D47D66D14C1E39D12F9EFCCC90F62DEA
DB5E898EE6C031D1B390BA69CC6FD7AB25499DD9E09675B9A321F279A4163BDA
BB3731B5A816D6992B0753B4C0A6A7C06CCF788048D76911AA69ED2A11CF5324
5> |
!
end
end end
%ADOEndSubsetFont
/LSPHES+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
237.066 454.349 mo
(5. \262JU#\2132\241L!9 &Vo\023*\370-\365^\3366\010\034\377*\231*\270.\314\002<)sh
483.806 246.949 mo
483.806 264.119 li
482.806 264.119 li
482.806 246.949 li
cp
486.306 263.119 mo
483.306 269.119 li
480.306 263.119 li
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/LSPHES+DengXian-GBK-EUC-H-Identity-H uf
/LSPHES+DengXian-GBK-EUC-H /CIDFont ur
/LSPHER+DengXian-GBK-EUC-H-Identity-H uf
/LSPHER+DengXian-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
