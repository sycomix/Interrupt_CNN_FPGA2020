%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: <753B><56FE>.pdf
%%Creator: Adobe Acrobat 10.0.0
%%For: yujin
%%CreationDate: 2019/8/19, 11:13:34
%%BoundingBox: 0 0 575 308
%%HiResBoundingBox: 0 0 574.0912 307.0582
%%CropBox: 0 0 574.0912 307.0582
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1068 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® for Office 365"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® PowerPoint® for Office 365"
   xmp:CreateDate="2019-08-19T11:12:39+08:00"
   xmp:ModifyDate="2019-08-19T11:12:39+08:00"
   xmpMM:DocumentID="uuid:6AD1A63D-296D-42F3-9770-7B3EA530E048"
   xmpMM:InstanceID="uuid:6AD1A63D-296D-42F3-9770-7B3EA530E048">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">FPGA 中断以多任务执行</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yu Jincheng</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -307.058 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 307.058 li
574.091 307.058 li
574.091 0 li
cp
clp
gsave
-.487854 307.91 mo
574.512 307.91 li
574.512 -.090332 li
-.487854 -.090332 li
cp
clp
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0904 li
-254.488 -25.0904 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UKGMLV+DengXian-GBK-EUC-H)
%%Title: (UKGMLV+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UKGMLV+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 22 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
7468 <001C60D8A8C9B5EE31028434C4D6C30C64DF1C96B7E46404E90C2FA9E3
8488C286DD13DCCADC3A0AC855704BE521DFFEEF8C2FCC7041C780932D31D84C
64663717C7BDC9EC5CDE9EE4785DC1293B522116561533EAA4CF35E326ED302E
FB1E78D291DCB210CFB838D87A23CF01ECE388435919AD440336B2190CFF0AAC
9CCF40DFDA7BA855F0025635224377A8E04BD4F921C208D72A51CA69C5A20B6D
1714F71EF327303F4E298F819B27A7302BF7551867> |
13484 <001C60D8A8C9B5EE310D33E6A7EBCB349A0D890EEA2DB541738A01E14
E34AA2B52532C85667319E048DD5F6580E7AF747AB1659197020AB9F6EAAA334
E5E0D7E5690B263F7C4555A53DF47C84EA1320C6A3F471C8E491F6DAAB4F3EEB
4252EEC865C8B8E38506F581EB6F4092C88F67CB6D98C2FBD35EE100A67E40E1
683A5DF3899E44E9696871EF8D944FAADAD431E4956C203A8E4D437F0BDDA51A
803ED2EDA395CCC27B477FCF7044C89D037168912871AE5B151AC50FE7A10901
E1D5E39E1CA227A7ABFF5A06E1B1CD341FB5F60089B976C9F78146A2A0D3DF5B
27A420E1F252515B96C8ADF22E3AA2B5BFF5DD149C76FD91A22A7B5FA876016C
9FBE44FCF49A43547AEC1ED5A64806F97A3CD69375CCC4AA351016DEE0A6B314
903F822777ED4B91F1F7D389C1F0AD75A77F8DC6202DE5C52AEBC81890DD8C07
944CFA3D686C761CEBCCF24BFF01CE3CE1269E802C6F625588B712FF29B74D42
2ECE8D09C2CA505BF59689A070E0C70FEC13C59A31CB388EE277E6C8D400761E
BAED9F1A3003D69CB57AB9D318CF05DBC9A64A1D039C77FF1CF99B287D4E7E96
FB06626640D72DC2253EF1070CD01C135B4270FCF5E47D287D25F37F06668B79
231E9810FE1FC6D0AA742115958DF205472C2FC> |
20048 <001C60D8A8C9B5EE310D5F76D66F81816DAC4DC2DED42C2C76FF501EF
D47C66D761A892B2B23F7C0A98BCC232036B8D735A190BF0AB745310CD53F347
5B984B042C12DC9A9451B7CC97EB93C06CEF80662DF6485690C3B4CBCE647ECC
6EC73C8120B0715CEE46F78F73F4F5F9346DF75B0CB6949D2C8975D944FF21F4
71AF28BCC8EAFEB1EC46E97C4735D3B76BCFB33C140C56B6FF523E3B64B495DA
A1363E5994AA0222EBCE96063DACABB20DD46A7E8D463669DA97EF3EDAF1B4D5
2160FEEF27F90809F748EC84D249FF8829049875D05CBD54FA72B3065046F32C
110AA03EC4DB55F6A829E8FA07CEA58779661979692EBF43C15EDDBE90D55F68
3B945FEAF4989D2D06F65C321AE9F227D8F8EDA186687025C9C347F35B482DF4
3FB0D72BB99083C827A1FAFFA957AA56F2506B13C9CB01C3DE7019C545A945F9
71159F38F14AA51> |
19931 <001C60D8A8C9B5EE310D088B8060A7E0CF39B156A49BE26550D522B6A
99355BBE3EF6EBEC2E50AFEC55B908C0C83CCADEE031792B2CCC49D34B9D5F32
1E68AF706D3D68ACDC82847A27DC130B08174BD35E9DB8DE6A325D122F67AF39
89D9B0AA96180F1D7202DE5A60975E56CD6F3B600ECABD39DC136E03B42CBF61
9B4BEC1199FA8E942E022DB276AC4508613D768A4E5605DD1BB39F6DF60F12A1
0E63A02A2F67DB9BD202822AE5A08F29D78AB1DB0B13758BCDD01D127B54FC2E
466A88539155C7E17DB5F2D9BD87F531E39BC132B481A7EF926CF4D938F6FF25
F642CC472F53FDF94843B96DEE4B15A95B13FBBE4B222A2DD8BC5EAE71568180
EF617EBE731D973EE12BD6D821F43CE1F3EF8C715F12C9E8F5EFF42C7C86C5D8
0345780CDC1402F753FFAA28B154F14B1C21A72089888BAA0322379817909EA7
46E73F526971D105FFD67785F612F271F7192E9DF059BEBC9B5E7BE55164A000
F8C8A5C686E6AF744C2A170C38765499CDF8A408DDFA884C602C5F3CE825557A
C50067972BB341228065E2E4D12955E51A01619921E277AEFEBD0443F456FD80
3CC2AF899D21275081B9D00A8C18D91A3C958A28AEC631F36> |
7705 <001C60D8A8C9B5EE311CDF2CCFBD5B9CB0FFCC6E2A68D660518DE0C55A
036E067038CE491AF98C7EEBD59B49016038AA13C22062BD9FD2C50DE49B3511
BA4BF2E8261187C7D6A924BAC8ECD3AB9C0AC176177A18CFB137FD529430DCEC
D5E7378685107AE6591C2E0BAC677988EBB6E51147C985579D50B9DE4D52E897
22E650586FA8D24786CEEC8810348F293CEE957374483843337F688FEEDE0571
A925C75173A6F3AB12CC16838CF6D209F2E3198DE95C67B6F62BCA2F64F6CD45
C2F8C52FAD41A2159379B140B11692BA428B32268CFC1B2CBC5624E3CB3486CA
B76A5B2704134578F430E5FA0DC1A06384FE9ED0820EFAA73607750AAC8EF15A
7B89953F4CC8FB4757B438677644BE9E7D7F37D03FE20D3DD36D4BF3E5AB0754
9B1845C262B5> |
11003 <001C60D8A8C9B5EE310D25224073F5C22B4AD196FCC34A0F4E7666F59
1FF25F6D9EF6AFA13425D6BBF81484A401EE5E0D9F68C099195A6A5F69D8C110
86075D6B7D6D58902311EC4360422356E76D1ED7B1F3E6AA1C1E1A21E58D3EA7
438A2E1216C9B74B49EF5E3000EB7036AE37BD4B84440BEAB463EAC9FCA6E1A7
B5BF6833CAEB33CEA55B9D011858038F173FC52F2138CEE46F894BA6132E0825
68624FC7AFB76E24210BA7DC1FB5709E5A6466A6BAD7CCC5DC4995FC30C1DCD4
CA0A0018078DEE3DE4B2A953F2FC4B5E20E5FC3D2E6E234F9EC71F1EA47A205E
572B4D52A3D20EC040A46D091DD575A25A341B67C40924489C6FD1B122CA210E
EA2BF14BA30B17B967B7E5D770704D4391C22F0C1190976433054ECA92E7F695
A794242A1C7CCC41064734D6839B5020A6EF340EC5791EB9A5AC7> |
20723 <001C60D8A8C9B5EE3102629AC37F245BA98369630F24978E74DF12AB6
2BD25DA7657AC7723EC2CA28222381F6A10BBC88DC8BC6976B2F4C680B9808A2
4A895B3E7CA85C50FE9611AFBC0852EC8DE8ADEC4DBC02276DEF97D2E049CB27
ECA3A47B3363E1CAE458E4F72C1A09F19C9C10BFDDDECDEDFFA6C86E42FC51D1
9B5C77F171483F163959DCFB702E881B780E1E878C92DE8675231D50A2914CC5
D7C638B24E5451D40A33D6684EC95EC9EA18317869570056054993738F9FB674
1A5EADE90DC6C81130D3CDFB05DDA8597D5E89DA2555845C78EC8EDE5A89DE03
C65AC943F384D884AAAA8C26577C8383AFA0429DE9B06A4423DFA29FB740BFF9
5F1D34875E9351F450D4CADE39E7CBCC41E0FEB84DD66A5ADBCD85F52CD6CE8D
17D6C5CE1B66412823966A1BEAF93DCEF0C2338F27A7375FC5A37CE55693FC16
FFF898ACEA28792739819DA0AFE19F308B595FB04953B1414E94E408D4D2E156
14ED4B484B5C787B3B74F0DFC092C0299ED145B08438C6D01A9B1F662F09F525
F5CEF4D313279E922FC7159F02FB618ED45971EDF3FBECD7B331DD5066D30D49
6355342D1845F2EF45DA63630> |
16710 <001C60D8A8C9B5EE310D13A905EE4EE896BEB161294F08724FF316931
287FC93F3464B6AE88D61A84B9BC8293AFE3FBCAF920604C78496011ED7AC962
CB0D2B26D5E986E9F478479F1D97A56DF2FC17CD4B0D83841375CC1FE5468157
8A62C0F577F982072AAED2D7504352A37F0C0B546EC1C073CCD5870B2460E8FC
8D6D483F0079699C371F1193EEBDF3C901B6981640866D8ACC51A334749FD205
912180B1A5CB5968E2AB3BFA7F784B14D4FFA778D78832283698349B34197C35
6FBE18ECA8E854789AB8ED919B3E9773A22C030C3182361AEBFBE8AB69E09> |
7433 <001C60D8A8C9B5EE310D358EDD1734B756EC703EB62F58CB539A59966C
71F6C42149247A08B679AAC67D28DABF03A0F30CD37C10220B416F9FC065BE54
B880BBF0BDAF6025A24394863BA21CEF58C74FB3F20161A9B75B8A1D50C297ED
00E02374F2AD8375E9307B9DA68A93F0C3D84CB1E123BC033C> |
16821 <001C60D8A8C9B5EE310D721B6606EB4A280E00D86FD61705CB3A42735
1A881A1EE331F55DF955E658A8486926A6FD743FBC541AEF367A96E112B367C9
28B65632E2796E2E647C68CB10BA989937E9CC5ED9D697EF19CE78DC36418530
84A447CE9B40406CCBE1D2D0CD7C927D5E0CB1C508B6F9D958666ED5F4B45014
FCA247DAF838ACBE334724A3F2F061A611D63F7C2DBFE0C7BB1C0CFA379273D2
D467EB40CFBBB166EDEFFA1220D3322B9377F52432B62FB9BE39168A8B4B3C9E
AF2D45D384F937E525A89020A5929E5E3EAAEA65A9CA033944EB871952E8F03F
91112D315AE4C33117C4662164793B5D75818750D508AC1D5B1FFC8FF4DF0A71
F696002323EF10C2FE86C5D043307A8957ADAA48FBA01DF74E346DFAA776E590
60274DB5905EDE72580E42DB19F1CD583CF7AEDD35F7559B5> |
12032 <001C60D8A8C9B5EE310D035FAC99D07D61B6EB831DCDEB285AD65AE33
F726DC7305A1BA022485105245241C53357A5605779B257C7C661EA0615E1169
779CE01595EEF68362364C605544229B6E9080C8DB270EF5B094A92B839AFEB6
6BA37F37A7000F871DB81E81066A4F2737AD52BC0E33C92920C7AFC9492A51F5
0E57620DB2757CAEA8C5659D4CC41FFB844C8715F5A6B64961AAC97252DD201C
4005660B76372B68A59238BDA2911845E36FDBFA5B22B47D8D88BB7EEBFB0703
D585B8BCCAA737CA9CEFDFCF39DCF1A9192753FD48B2CDD05AC7A234F822C9FA
C8AE7AFD5E8F6A446BED44C8FBABE4F6A42FBD46C3D2B4A3E099C4F29B11C856
FE5849CD0E0BE3A169EAD022E94620C2816625FB2A4F9A32916F79AC2BDF2BA0
7330D4D591F5FDCE961F39783C66F8A0AAED2A53606FE0210948FDA2B6174799
BC184D07A47F4419ABE453866BDCBED09D70DE36E58FA4702F477F37A8325589
8543F168D87FD3122D715B7F7350DE76511856913F9EDFFC289E3E2C64419343
1CCE10A80D7AD1406D7FF6FA2A0E0> |
7436 <001C60D8A8C9B5EE314FBF93A6B0E45704A97A0D1B01DFD1A94B3E486D
23AC888E3E1DD2B57A0F4B95729A9FA36AC339966FD24FE7455F33DEBF5D6DE1
71EC23FA2B10AA3E4505079D6E1ECDA35B35EEF750E6C65662DFF363C1216E39
17A421C414C423048250DDD98B871FEC3CC2911DF557C1B7B0D43D508DA0B6F6
5F1211133FBF7BCAC38317> |
8942 <001C60D8A8C9B5EE31031154B615742F1DAA80CB5B5A06DB3018438022
143CBCE708D5DADAF44B39292721DB5E396A74E4B589796E3B9CFC76197898A4
A21049407DBC3A4F7D695D6911F17AAC040352AD0A869BB7CBD6277A7151FD8B
C515430274242DC1C877C7533839527BBC23321DB667F5DACF02B04714CB7BEF
B3A2CF759AB9942AB77D03C6B795F88A3CF57F51158EEAF39C678F891DF69020
B0F415B6BB45250FA4DE68A26ED2D813B071966F90082D1861D9288F862E89DB
F86DFE> |
26499 <001C60D8A8C9B5EE310DD2A23B8D98529B79FEFAEE046CC1A32699D3C
5F7967575044012B669D58DF546C34A2B634498067832B78CEFA80F887D0E271
A8B3AE1113145E3446B7512DFA6D14C64F8A371FA42DED8A8A716137168FDDDD
F5BADC188FB78B8268C2F46DD41D69FA41915122FCA42051BE11E7524D39F564
B76FF53D43E0784EE06F704FB1B7FDC04AED1540ABCCE8BE7297A9FA4CFAE7F4
8E5A0660167F1BD1827505E938CD0921F02860D165098E0DEAF900E3F5AD782D
2067E9A4631ED97ADED8B89F9183A4F01FEA57F7ABAEDBE94D85FF5D4E791325
C646CF9CF48FE57C3DB2BDDC00EC36F11C125C888B1C894A2C9FEE9216B02599
E4C68C60CF302C1C81CE39FB4FF98DBE5033ED389620382881763D95D7D29B4E
B135149880F367F7D3B57B8F4E5C5575DA16A0D48834251FA4AC1BCA26C6302F
D5F0BFAF69A757231A87777738F22ECD3F7D0F5E53676704B8E3159736838A3A
D6CA91E9650FA2DAFB1860F6D2EA1DC37A87B276DC53DB9C430AF60DF1B26D57
98B2D84F30B9BB96C1A4387C081AECBF9679A0B3CDD1EE0369B06FEDF56B74CD
347AF5C42338E663900A2D9176D1F1067EA0567C79CAC293FD8111AA6A59C771
5B9C8D48F> |
13854 <001C60D8A8C9B5EE313AAE10C0DB0B2E6BA00C9A68AEE8BC32EFCAED8
99648A21E340E385265F4E4A8F9045C1A9F9E2D5017C133449124A4E1D77BB38
DFC0EA56BAF154F2A3E0D6BC6F4EFF8E827B6A6BBDCE50DEDD8ADA479FEB89C8
E4CC535B85A9B1419B54D27FC45D70D19AE21FE0D0844BF48275387D7435A0AE
C6EC9BB7202F490291FAB935E533CD9A3C021D34224A2550CE55124E76BC8427
2CEA162F09F35EC308D9F40B1D153915A46EB51E1EF7D96E49E90CF9A4A9540B
239AAB09F2B29D09571A90A5099B03305B3C55F3D48B576F61737D83E67B669C
C73D9A12D73FEC4677FA710616F93C368BE510FC5FFF0EBA11DAA79EB923EB46
7ABF9EB627567F239A724E29025C49392FC9D6F9D118FA025C66D1777CD6E79B
A259BBA33E11E64141EFDF95C66B971BCC247BE827508D838289306E6148D9C2
085779730037ADBBC3354648CCCEA0CC8AE74C567B9AF7E2546FDD77A4B6AD23
9BC47A7AE6179F8BC3D55FD22364671AB509505EAA357035F78C581838EA3A26
D65294DB76FB37F11C90623BB02E737580E7D5141371CCCC3879F58A09E0DBB2
7DA8C2FA65FCC895952CADE6EF54267C897F8D37843D77BCB60F5209BA0B21A7
C85B96200AE91C56AEB266FBA995EF597706B810F2016C6D6D1910B126A90353
C> |
28435 <001C60D8A8C9B5EE310D6CAED735954C41DCCC8F64B7D7EDA32CF5A59
FCABE1CF904498FBB8AF3ADBDEC0082> |
24210 <001C60D8A8C9B5EE310DF1AC783F3DDE99D3E14C97F7CCE053639BC74
A4BBC9B395982A98EBE817B45341AD09A961600B956D57D5D62DFCB4F0094217
2545CF87D5D7FDACCC096D5AD4B8E537F4600EB5C02806C305C8033A6E3C1F0C
3DF84741CEFC7D9846B745A731FB307876E01A1F6D2890FF884E0128872F97BF
AEC1E48B5E7A8660FEEA8518BB6F05A2D2389DF2D6C609F18E0944FA4D904F7C
ED439C769AFF0BB73966884C13B6ADCA20F79405275F671401E8046C2ABB5B3C
5AF280BE4A4F4A30EE0479B1CBABD2482A2BDAEB253C0CE6CCCBDAFA638A8F8E
BC7115EC565F6C5A154A4A88683BE7F0AF90C4DA67DEED121393E1AC0E218B09
A046D09A57F2A76D6821476E46656B3DAF9B365FFDA4F107F0CBBF4D637B2349
73CD15CE8B94AF82BB606E8C9645BA92C1534FF5BB5EE255FD4D60369B12ABC4
E6D1F65F5250308173216548F28793A117739A86DA667888479258A7F96170C6
FE6C5D967F999E2DE8F7D17DA26B5BD4E95327EF8CB31D47ADA316F566B6CD30
443DC17E82720148C541A7C1D4BB432ECBFECE41607A823BD76D22B4BBC8303C
1F6E4B1E77CFF82CB48338ABAF307711A6DB3EEBD35139683472E81C653F383F
0FA771D33F0ED4A621187D4FF90B4810498F10B7A2D14B99E32CCDDD3311C598
2664CA9CEF5E1CAA50ADDFBFDF1DF6BD1C4F8FE03AF468ED2300C6377F00723C
8D67844ECC818D3E74D0549CFEA538F104655503DDDB76065618B6555A236241
444247090208081270BA83B8CD82DF820C2B2D17804DDE1C7BC6C10A998AD53A
1AD0A38E356C0B695C193466AAEAF79A436E39CB7ABA26E2CA6420D38761BA9D
9A05315CD801C314EC913789B24F4AB4439F9332091D621262620720BD1A30B3
18F2F60C0D2D9E8C96E5B35749AA4A7E02DD17E3F886A6715AFCA63D5878F779
854> |
8292 <001C60D8A8C9B5EE310E2571EE2EAD6EBFDD738033D547F170416A3A85
5CB9A7F3863A375AA540182650012C1F227CFEEE535E28F144BE42EBBA1AF473
3E3ACAA9BA2AB82A00556FAB181F06AC10A22B03DD07EF80E227003898385076
F1F6138F99ED1ED8CEDB6FB1DB2474FFADB250E7D495E6B686> |
13423 <001C60D8A8C9B5EE310D088434E191882D53FC947B32A3356BD76B41B
37E293AD803C66B38271B21B7C5CE1F8F475EF715C1E06944EEA61A02B21D63B
9A2B81E7DD1B94F71AAA2FB2121D65B879E119028051E346AF2AFF565615F2AD
E16D08ED80E7CA616B633E7C7CBF706232D6A2D0589086E98872CD368960EE08
581556C373047443768A59963313F920095AE635A64A65DC7F7F810BCCD6CAC9
28000B30ED543CB4B17D46BA22C877AEC831E7319E7944345CB68A28E9D3ED3E
8D132F35869E07E393AE604D3C9E9EB28EDABC679613B07C0FB49EC16282A7C7
9BD6D61B3C7B14D1BC37267DA6895EEA1232B4EE14FB8960A9781E4462123E6E
8D98D19DAD66FB0D11857C6C435A37827AB1150223F01C0BFFDFDC7638791A66
EF7D9A82AD0D1D68CB27DA2D6345673837E9FF27EDDCFB8B0FE61BF7CCA69314
684CD7626459258BA0DD83062944C581930AF99854761BA47EAF0BBCF2B1F636
A46281544AEDAAF3D03659F8A9B5FA4C4939D678C52AE9919EB997B005AE05BA
2D18ABDAF9450D11095B60D4ED02EFD96E7D8B7EF0C1076AA767B1E7AA5B1383
5E59B9606DB54DEE076DA73EA22F8ABBDD2470B51CBD3EF8A93632DC9F616044
5872B540B685A2F533225AF9CD242F7AC79C725B66867CBB135EBD1AEF3C7CD1
E6583B22B507153F21A6DFD443ABC1D2367E43076E357E3A32D7C06424444572
38A346AAC5D8105DD0A2729311A3BA78C9F554647C78ED69974B23CA049BF320
7E9B838C4AE521CDCF6841D14265FCEDDA017CD2768A6AE607DDDDEFD0BE480> |
12909 <001C60D8A8C9B5EE31027E0F87C0852FB20BAB4D56A779125033838E8
9F0F9EDB9D544F349FB123AD6B0DF6A49DBAC75CF086B844F788BEEBB65D6266
9AB2F64212BB46E9A321DAE5CB900500A7F32030E05DB4F950AF41A98E02BBF0
58D660570342E833DB967B2DB450B44AB343B5CDEDFC59DFEF1CA2B18F95F84C
2D31DE438E993943993E428FF20760900E802478D234C6B6B25792FCCBE98B9F
19CE29143BFCB9264AE7EAE715B756F8C83E83AC6A39599409BD0ECE0A271705
2CC93988D6B15A313DE40A575DACE8ADC92ED3E8814DEF5944C3B4B5BA4A468D
7C0AA04594CA51F4B957A02C449043C631239521C510B87CA82EB9204077C86B
36D6CFDCC7F710C2947258A4AC918E70A027180EE79B98CBE0CD1FDD91D45658
479C8F821F00D9313263E1EF2ACC7F6433B0D99F43EA0AFA88D594F555BCC0E8
ECEC4A11F03FE12C59C9E3BE241A77DDE2B892FDB2322C170822EEAF4A3A39E1
DE69E5BE9C3E8E94220EA8CE320CD5BFC5DFE4882F270B22F484A8DBA3A188E9
600ED27ABFBD50EB74D2461377108AF599B2E9D9864315A08FB15E36E69432CA
5A15D888A2FA73B01DF839F2CAEDD4EC13FAC45FB91DA29AF28A7B7274F9FBA7
790051A7A11DEBAEC094548819B7C8336438E463A1355CD35428D718134D621> |
9099 <001C60D8A8C9B5EE310D1A3AD6FDD29C7AEB6C9ABDBAE2FF34C52D879E
C325E21FFC4428B069CA24F86C6447269FC589DA9ECD650D605E5A4113F32603
4A29B30B76FC255A72C340097BB8ACAB0FCC661E6D7DD77006F46A095EE06656
8DE885D53432AFD406EA406582ECA7B771D22CE72C33C2E68902A06117D77392
2122F0A32D839F23E5411194A8FF00B7560B11F4DE054FA6FB6C89CDDFBF9528
8150723E15348875C0C631BB24AD624BD1998B73627D6CE58FDC962365B9F5AC
9AF4177FCD351BA2DF3F56DFD5D6E72905B433988C787AD6CAD31ECDF7C2D94A
9D1FC4A11B7D9B8804AB5602787B14CA1DBFFECD6DEFDDC322E653AC659880DB
F0B5D7CB64EF88D86685DFA7C65DCB5976495D9734EFF5AB9CDA21EFC8F0AFFC
33E89E6C50A5C3CD880F55578F4D7042> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UKGMLV+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/UKGMLV+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 323.03 mo
(\035,4\254NPM\333\036\031*\373P\363AF\035\011A\265/\000\035\014"\356g\2036\036o\023^\222 d4o2m#\213)sh
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (UKGMLW+DengXian-GBK-EUC-H)
%%Title: (UKGMLW+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /UKGMLW+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 8 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28682 <001C60D8A8C9B6317D7763A655669C6E02448AAF388F9364FE21A14E5
285A2D62023D21C941644EE4B175DE88CF4C48ACE81BC234046568E7F7423114
120142242F4073B0692C01A1DF9EF591DB9537DD9975603936B7DBE5CAFE64FE
E70E042E0FC965DC960BE64BDF0895A91F4698C15> |
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
28666 <001C60D8A8C9B7FD849A70FBAF5CA9A13C8E26C143A1DF6AC1FE547EA
3C5232E736DB519B3D3AA4EEB5C6BE5BAE3CF35795226E06AD4DC645F74CE709
D6D91E4316CA064CD0C4D0AE7D15A7DAFFFD0C871FB60DBABB3A2AAE10728B75
305448C7B5C7B5F2A56A6D5ABB66520DBD6D65AA03F04B1782EFFFBBC14C56FE
36F36723CB545DCDED9B40F166550D83238B31668EF901F0353888C1B5A6781A
E1D7629C16539B99012D949BB473BAE8FE8799FB00BF6C746B0B7BB5491EAECF
A034F56A464F3951098755CEB00> |
28667 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C3C724D0F5C6BF169F72E1C71967F26B4562105E8A8583BC41A15D900A2B3
FFCE9F31BD4591CB25C31293EBF9381ACF282B598F9431868A2ECD743332A8F6
186BC7793F5EA54E68DE38FBB93> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /UKGMLW+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/UKGMLW+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
107.872 323.03 mo
(p\012o\370o\374o\372o\373p\007p\006)
[12.5999 9.25214 4.03198 10.3321 9.90005 5.66986 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 11 GetGlyphDirectory
26111 <001C60D8A8C9B5EE310314EF6401CFC25C044A2E1B9D5FB982F9B00F0
1379C06C7D2AD9EB2170494068404E9C0782437607AFDEDD47E3464F483DF1AB
54335F927400922DE2A2F556E8BFBB31775147C3C23B4CF3CA0B248E2893B1F6
9E911BACDC054747F971C11AE3178837D72F8424B9D65AE25664B2528DE22EF0
CCD38DC894A116B33EF7BD1928AE76E224266EFED66445161ED9694FE5C30B12
51036E7E94E33CA1AAE2ECB7394EA021A0EF8A1DD5F71DFEB8F8D38CB2E152F2
F43CEC19949EE1FDB7A14DD35D9A95208F75C2DC466F030D3DA8787C157BEA5A
7C33A93BFD3EBB7290A00FDB94921C65AE31D281459B4A6D2F249F481A1CB23F
887E3ABA4E6B6FA1EEB7970D94C07EEAA019F1E7242A74EEF78A4E22EDD1AD0A
2AF67F05E65F1758884545B883E6D947CAEE80184BFE6C1232C37369AC805BBA
EA4DBFE917FB32FFD7BD9BA7D67E5B84C74F99FDD809D36C3EC2A7306B70493C
AE5EB1BA8EFA513FC576A80811D4C8A3EDF1BD6EBA017181D05563806F19372C
C52EBEDB4A4AD18D52F1DA88DF3ACF6D9845DA09E054A9FE88908840B25C5E6D
A7D18EFD17B2CAEC5FF0D59BFB5FD2559DBECA08D26A391EE9059960EF144E55
994A6F372783DD8B8D392124D82B4B2FC41AF88B1A1E21AF666D372FCDDA86D5
8BD666AE3BE77B99314C4226B064437CCC56F9CB1CA979B6A725E567ED541D69
DC03ABFB0045FA18603A6BFE9AD7E068926E5D9CE8CED13E09CE7FAEF6EDA816
98E2A2D10D93D52753AD4AE8368> |
22656 <001C60D8A8C9B5EE3102361FD3A4A1A95A388B51622A2B080F7DCCB85
09923A0128899D9ABABEC71B1EDDECB36F63CA906C40037D0DA87666B9FB71B2
B7F524309A590AF088D0EF6DBA5C5A341829E5732DFDDFD00E13CF6FA3052A77
7DBFF2E65A080A4FAC863C5A690CC925E0BACF8D20A94CF740533E6D99128F30
714FF284ADD6F4ABD8F326ED1C133C15F92784E759D138ADC35A3A0913C4122A
F5949397E629AF1E2A42092A39758522435B8482A9B187D7F65E1494D6174CA0
82B68D963A66412C71BB8F54C7B7DC94CA774FF58ED04758BCA96A236E7D4EB0
D6A6979752AB0AF87D7EA9C76AD9ED7BC8E6540559609C46D73C44E0A417D93F
149260D85BFDEB472BAF55DF540EA9FD0F52829D1FD23556CFB00460AF145174
73415EB8B322B18A1A3A49DF7DDDD413849601090217EAA9B6CFE16374FC7D62
BB274324817124B693010B7B0B822458F9446DD7A33B39AE392E27CF32B58E62
48C49F7F3DE3E7B67F65ED53D88B8D06E18D5602DAC7C0B4A63CC4D5F> |
9767 <001C60D8A8C9B5EE3111BEAD497A81E9CD8E02A067AD21B3A1B103528B
6E6FF8652194045EE9C431380961F1AA7EDEBBDFDFD725FF8560C6CA80A693C2
0177DA8D134A80E129C3527591979459436F1B0432B06B09459720B4D8B44E5F
EED8567715E1280135D9838674883574382BB113D7BAE83A92F7987788EED254
120F65526F5DAABFFAE0F3F8E964ADA1ECBCBC6CBEC074A5F6F4761DD3F0A0C0
F4806D99534821B21AA86BA2464140A8802BE890DA979D6C3CA4D372DA39410E
6DC2417D3C678C1AF4C6278F37D5E3AEDAC1F3615BF5D0CE253106B3EA926907
E84C62AA8973B66BB62F8A482F2966D8ACD003EE95E700570994A30D3B110325
E8C12294D067A989A57D348F6240662F5550F2547E30D24AF5C81AB79E33F2B0
610A9DBE36109F8B5909AC51C2A451BB51038D3CFF7E3B> |
12129 <001C60D8A8C9B5EE310D16454D7AF43C49BBFCE687D2A210FECA4C671
3F65C2CF16CC8BB54499D098589505E493364916C34BE7246F543F2F2FFE3E87
2D355465ECBE73D69B8E98364FD7C836A53F851EBA408701785BBA9790254F1D
355A336FC01D3061F5431EAA8E9BB8367CA8E0C2EE7C9713CD47C34B00BF42BF
6886ABE2848AA541F604EE5B7E2CEEB81DD5FA2761C03855203A48B00191ECF2
6C0BEB38C603211A9837B49D93A7D42D989B77F9A7862CE921D90B3167DD9355
C2C58B73F089690625350CFFDF2F341328D9A8AAA185DD3D26FF6A025C08E40F
26EBB8E775443BA81C47FB95377D0E74C9610800D69CDF6BA79A74D1EA35318F
7CA6D74D3EEB9A2AEEFF41911610D83B9DB44F0A45B8999917BDB2381659CCF2
1F64E110F9CC41E9612C72E1D34F56312B7B091DD2844DF36EDFD5EA59C54529
E4DCE648B5F9AD46FA81A0D18AD55ED796096BDC4578AD686C4A5AC3C422E3DD
D46B16F3320C91289649954B1402CA27D7F6181557FC6481E03C3849730D6E83
CF7CB041738997FB8B18656863B3D04F5FAA2FDA9F750A3ACE56CFD943710D18
CCD6E7FD2C081643693CB99128A262C5B12D7A763E3A37F595D47255CF947A7F
AB6494A4F4054AED2201323BECE79FAFDC42ABB70> |
10252 <001C60D8A8C9B5EE310D0D83AD0EB700A03A9B5C7A42146929A69F2FC
16841EEB97D433CB673B4EC4238DFA2DE4C6EAA854D95AECF5BDD3559FF4DB6E
EEA4A64C8821849C60E45222704A6CF23B984AC085F9B927EAB962FC1DC1D8BA
2754A4C20EDAAB3761854878F1BDBFD6D37919260AD0B4CC68A04EDF81E946F1
61150C7538C53AEEBF6279438238BCCBF21495F384EE45A5420206CCAAD50972
D99952872A9C75BD3CB22E63DAB0013D02F51BD560A3CAF3738AE4183770153F
3F37867DE2829D84B75E308A9899694D463CA033E2F9B24FB81D2DDF76D14AB6
31009880EE9FA59550AF02A6882D2F30B1CD9EF31C189261A67D456B0C501F64
CAF0325F3E426ADDB4CDC07688F9E96F67E23684D79DC0B4704E254E84CA9DA8
1786EFB71285538A21A5C0F5DD3113B3468BAD250160C9776D0B4553B77444DA
1C2AB9EAE00415FFD1C5304F10D1841> |
13557 <001C60D8A8C9B5EE310D362AAA4DE36B55DCD16B5F5DFC7AB3FDFA4CA
A0BD41C7336041A3E020A7C01AAF20F8322DE0C32785464AE95B725B57C0363E
272024A774F1D3CC8FB41537C680FAB8BD50E5FAF98C5818CBE2D09208B1F058
CFE4C24CF8E25E70BF4AA57B1DA596AF08019A593BFC59E4197D2F20E59B3552
6D8AD42D8C7DC5C988DF1AF875DA495FFD281015688DF625C62AF560C8CF1042
68CC60248302763EBA8C05D4ECABA78AAC708C861EA66473AE8FF4B726A5B143
509F316704FE41D21BED15457CA95872254C697E605DBB77BC0835B06FD9D559
BE624352FE4B6A1F29700D0BEF0C32261BCB9C5D8EAB4F2072E6946A1B176115
E7B20721D2636893A9F1D754487AC4B3A66F5202A> |
24780 <001C60D8A8C9B5EE310D47B943E087DADF79222A3C2C037BFE45389CD
F6F75EBD659B45912E7D4F276E3D3A27BC0AC2340C7BE590BACDC6F874E8F537
8F7ED4E4C5B71B11331F0F50ECA81229D964ADCDCB471DEF232A5854E06719D2
805BCF7089006C56EB1528904F7A2BF473DFA04168FF5699140ACDC59B81203F
EF7BD76E675721A0CF377468616863EE19B4F5EC387AD30E73DB3D36F38D1904
BF0213AC91F8C51DA0B2B7EE3443E942153347EB558A6736CDBC6D7FBA8A7508
DF4E511B82902F541870BCC83B612AC30A169409510F7CF102CBFEE00E682DE6
29FF7D6764D6F7373CF0423EBC248EE81C52FAA58AD22F73BBE9051B3430AD55
1EC1663F03101B9AA57884705BB244D23E5F451540E978A0E2F113429965E710
662437CA2048AAC0A552755173AF33B110920BE247A92FFAF2C70E539872BD85
085AA8FECFB5325ACD4629AC5F6E4F4C7ADB3C271AE9C264641875B08F254AC1
74D9A84A63789D3EDAB918AE8EB7B013C6ABAB039> |
13487 <001C60D8A8C9B5EE310D0A45EEC3D2A8324AA4F740B269EB73BC95CB4
111037368D53A1C30DF56F3FE02670194C1300BE9541EE2F4BBFD1BF62A0B363
7C3D2580543D97F289718D6AFC55514732594E596B42A6C993B74C7DEAB82EBA
4F942E3E0F4A67214327273E384661660FD3E2AD2E4799B57257DF72FBEBE525
C800868749BFD9F43A69B13C412F48C87F5F7091A850DB2228AF2B7D80FACCEC
59166E0AACF137169FACFBD769BD3850ABAE60A57361B4210747BD4A82C45FE5
5AEAA8A9230321D4009A97A31B08FFEB73B47C590924BA2BED4896C765294CE8
E56BD66BF4D59AD32A687F7182C78872BD062B7FBBFB918BCCBBFAFAA8A9095E
5EF87DCBF808A2D539F74C97D3B88DE0B95833CC25C50EA8A8DCCEEC61066E3D
FBE888F6CA024F46107E6DC18BFD874E800D81762950C071BD3B532EC80310BD
16772709E48914B9C3CD65DAD98AC115BEA9C79D407406F207992FF61377B1F3
B13420C7E5279073D98C9BEC6829D0A70DD448DD08A13BBD912F26719A5D7D2B
91C1C449B8E00984F1D642DEA51DB6499DEE3136954D2603F7658FF82EA0BC3A
4C2EFBECC07D2ECA835A6A2E6BBA001F20CFAEEE97993BEF6FA54EBEA6393CDE
BD3FDCF8BBB20DFB6382C63DAE577085238E9D177A4B0267EE468503947C3144
97DA9AEB7BC58288C39E5236434F3CFDABD5CD33A064157F6855B4A63BB869FE
C0CA099CBFAEFC7B45BFAC755> |
13099 <001C60D8A8C9B5EE310203308432E18F1FFCDCB95FD044198538D24E2
11CBE489B0DEFBA87D85FDC6333D39F583A20CE1A48C9B5D0E851E290CFECA06
EC38A2CFA1608F227114C94DF1D6E8D1D0A941D919F37BE26301B3A00B3BF96B
3941A13627C4E3A82898BDF295FAFC7F17E658350D173956690A95100CF6F885
60DF8593478A2E5AF197B3BF968720C163C2D6CAA2D9148C2811AAC06320FEAD
4DF9A67FB5FF3A3B24582D7C36819918A1C72B6DD1A4E875CB30F572A3E4A0D6
7CCB02CACC448B1F6471FFB7D1C6A635AD803B8E78868011B1F5E53F1EF90D5D
33D2F55B14957F6E2ECEF317C278824384E966C8CECB5CEF2E37E02D98016BED
49F1CBAF2CCCAD3D8AB723D9C63BCAE3C63B7565CFDE101EC3DAD3A61AF27CED
C309381030CA207C9C6DDB212CD0A3721889D403DE5BAB962A3F6BDE37A7A42F
B695708C992FE28A9C135641DB80C036AF8BDC40D83D1F7205291B7A9BC87F47
90381858E78E67961C11936EC4560EE8B9F6E28EB9FFE24749A12F3F4FC0D87D
8348560EF59B2E79DC0FD123FD38F5359F238D01169F59DC2E22EA4F004BA9BA
EECC03BCE481258A04EDAA9383C9CD475093DF470AB50B86700EAE5AE0B9DE28
2A6D45A7B09C1336D6145591FA991B3E627ED65F216BEDF22EB10BAD9C551F20
C7AE84DA029E067705316F7A504EAC4D158C97B49F2E180A9F5B9D833BAFD06D
155423189DD53EC0D930A007BF05CE8E14DDE06E00B50E98D47631B6BF697BDF
5123468D741E3BB38EFC015B3037C8B4A1ABE695C1ECBF4F7B15C61BC298AD11
6DBEE1183E190016A3371FBB29C462705ABC0B1CADF862303B2AF6950323F922
DF985413477F9881C29FE966C6139DAE7D515AE8DC6FB25E1A0645482A53521B
24F1CEECEAEA83D84CD2432742B33B6D5EABCF0F125CA4008B60CBBB13D1BD4B
075A188333B870CE4C9ECB75A824A933A0875568D87591B> |
24271 <001C60D8A8C9B5EE310DAEB692537223E2087870910652E0267AD2F87
F639ABED23095F54E2CBC938D37D06AA0AE67FBEAD3EF72419D3519D5C0992F7
5416278681ADBEB63A5B6207558FED77A1EA79308BE111EC8209601D4AB40B15
56FE37386AF0BB5AF387A39B35D3DCE0F37E613A1329EA8AD99A9BDB063E649C
541CB8E8576B212C20D4A502C3815EFE376D3767E5FD7BA6B95D8715ABEF6CA7
BEF2ADC3BAF64086B090051D25C5BB6D340FCF9254D41D04786D072CCB1D51C3
5E583D9A622658434BCE4B75E8F0DB80B4BAE11492781651BF075045D1036A4B
FF6BC2FBF21FCEF690360B4FE6B2795C9490C85C2F05F005C9AC26C6DC92F31B
8977B533174BFE035B87CBE62517460D70236F0DFAB19D583C2A02A1636A2909
84AF97ACC299448CABA76A677631B0D5BD9ECE4AE5E4919280FE4D27112A83F5
9CB34AB7E4C58E1DB707FC1EDE78C15CE5C3B7D91F51C64E9DFF386B937B77E0
1EC033CF3F55E> |
572 <001C60D8A8C9B5EE310DE440651B03219120B25474DE3ED7A0DB5F61DAF
92FD401B834FF178228BE3EC6BF579E516E3566FD3AD70F4F4AE2C99C01FF1F8
ADA8756E9E24E1DC07241477DFB> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
166.972 323.03 mo
(e\377X\200&'/a\(\014NPM\3334\365`\3144\2573+^\317\002<)sh
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 16 GetGlyphDirectory
12560 <001C60D8A8C9B5EE310D1C6C3F021D1E57A1AD7950B2A3E3897F0935A
0EA2A133A443B87D64D8A939E27021AA0119EB12F7E6535D343E640222052026
60F29B36ED85444D7FD042D8298FEDE6B567AD59DE0CD005E69AC55EFE683EC9
E1B4706944F616FFC06BAEDA9FF4F71228F27192F4F52D9A4EC1ABDCF4790A4E
39F4D58B9A74A3A204CECA00DA4416ED6AEDDD0C4A022F21F589CAC39EF4F5FC
9D47FC165BB861D1C5CE403BB056552E76D6224D3C4EE1E1F31EFDB0BD29F0A2
96F384384D30ED1E7AB7FAF1B2FD8DA0131ED9FC9748176341E3C3FBBC2B2427
1337E6419C8257AC8A393D1BDCA4A34E980AB4E14C084774DB3CF1531A723173
00795A62011E43FE88ACEB8BD5CCC21E6020608194ECDBC438AC8F3FC0235A5A
8104C471438D63CD34DD3652BE4867ABC13ED48C51A0E6CE973FB26C71C47C60
582E56CDF2C494665E2291CE3C84A01974931C0555461B381544DC5D0510621E
74BCF104F92F9117FEC3D5EF7F7AFE871DA5F936D5DC7AEA39C9B75017DA5F30
E45AD8CD7B1D9A32B7BB8AAC20BA2FEE227AC6885C78EC9C3B2657CA9893A4BA
DB79025FEDD> |
7659 <001C60D8A8C9B5EE310D0B29C4F1ACBF02FE9A9238649F2B1822092A1D
7A0FA2FF72E556FFE43CBFAA9C9AE85DD9D3F8A4D0241D41F63023680E1B98AA
5270A2678D1D2E0ED1F4E5942CCBCFCFFF826786C8C625CF864D16740F78A686
CD5A275E0F31B5A58389CDFD580653FAB2C3F92329E41772F9CA821988947001
953D29737623FF35F47ADF1A4810740E282C84BB714B34957B5E5FAF4A230C59
9A0917F202FAD34AF9AF3413CB520348F4F4B7DE1EBE0DC863E51178A19E9CBF
D898D174C8C43A379DDD6791EE8DF2DE89E21FBA502F7D0E3DCAFF79D2BBF784
BD5AE44A23B3DAC1A10027E75E4DCDE0AD3F24E1075772740176697411A3907F
3AEE852A1C99CCE0FB16724B0BED9564D1> |
11013 <001C60D8A8C9B5EE310D61C07165CA6EE68CAEA505DE2B796DA460532
CF5EF63D638F69E287525AC6DE3493A01A19CE8FD875197967F107C052433137
51FC02D1AE2533169AC44F15F27A68689BD5EF879F910897E00F564B87B35310
889A8C942E7D5121E623A85748766EA773E64C014FF8E240777EC6DAAB453FC9
87703586F281F348406C2C7DB3DDEBE18EC48103C5DD9F8A09C9E3E438E24276
2797987A167F0ECE8B15F29D38FEB14B5DBF5F6A9E29F3BF7E9E9809019E4594
6A7049E9B28361E56115CF63B6B7348BA460376D6D6A62EA8799E3B3862B2928
764642D890E7D7B0EDDA5C777576EF881EB6E98FB6FD1F20330ED454AB83F91A
247544C40A646885A10A06BDBFEB19F62125243CF1BF02EC173194676B6CE868
E5C361B5A33CB1DEAD1A84B9579C9E7DFEB9534F8EF0FB43E299E38730FD1324
3242AAE447302C9AE3EDD44E77614786FC7C0E7DC1AA41C7681D6DC1BDF29A6D
B45179EC4124507AA5E69EE326F7E79037B0CEB3B5F017E4873CA8494FF13F36
25CE6FF27D4A8F4D6D029C901E790FF79C6247BDDDF9BB37120C510B36D78A63
DA1934764AAEF7F01955064E4B9141595190D> |
12806 <001C60D8A8C9B5EE31009EBDF88840ECC2400DFF258F537A4D6930540
1AB0273F2B1126B6C3A50001B8BA96B4027E7A8FE9E9C8E1F6BDA5C4C3B6D7A7
02A8AB6EBE2161BEA517409D8180074C57A1C35A0BE9B2E0BD7BA74E0731E7F8
0BEC6FF5750BE9FA0B633D7C241698ABACC93F9DC09BA6D01189148C335A2F45
2ABADD32311D6C4F222815088F90AAF9F4EB797B4D1B72C2F93D99E2392E10E6
E101ABFBC062D40CCFA4A07962C04F02208043E60261C6FAD9ACC9D58BAEA715
6CF0D0C257DFDD9955B552728D58243C6A043822F0D594C57C9262FBAAF07903
47C336DAC258532CBCA2B0B386C0BC03D9B26A11D8A237FD071C2288BFD37C95
1AFC09537973FD483DDC4D8B4750A6D72A28DDFCEDA6C79CAFE49867846CC958
68686776263E86EE8B510298F9D4770BC3357073328E2062A7DFFC52E34EED54
1EBF8515C31168E5C9517EA9962B1F5EB27303C462BE3DADCDD77C3F5976AC49
F36F5ABCD29E030971B487AA5C16E70FC7D03525DFD76B613CD59A805B920709
A0732574BE85070D376D0B88D747EC05335398B4D97E0B10051AB7CC667BDF04
E6F5FB6ABA00AE1D82F7E3F993C86157FB348075D6CC17D335CF1F148EAEA778
5DDFD545BED2D18311B27FE> |
7651 <001C60D8A8C9B5EE3165FD03260EE922EDFD5C666BD569D4781EDA9AB6
DCACFF97E636932D1DBECE6D3E0E22CA9ED999B56F30602C757136BE30F0BCD6
F0F8B66E2E0E2C59FD816B2B0F832F233BC96FE1A5E078DD5D029BD2EFA82A1F
AB27155EABD88B6F6A599F152A6EE60D80CE51E8EDE0E20E5503813C596A3122
76BECDF48BC1F0AEFB12CF11F756526F133E62B5C648052B504EC589ABF59981
85A4E3A2C6BE8F6A125AA2C310868A46A68F73972DA8AEAF9269C82989D17DFA
8337CCA242DECA9DD108DB19D46398> |
26992 <001C60D8A8C9B5EE31186F36C5168A93206A6C58DD20F55E946BDBC93
EAE4160FD724CFEE9740229A24E0AC0F6DA0AF25C63CEBE6846D3486751AF89F
03648D706717F14EDA2FBFAB2B87D7A6C030E0E157F544D32C2A98DB465C5233
D7BDFE677C515C17B297E5848572255667150359CB898D60239984E37F8F6089
193C4099F90B5799E3BE27D3418F7CEA3FFEFDBEFABC08AB1277F50359157BB8
5B5D4FA417C180701F223D72368B5E099EC0F0E41D3E81464C1611DFE562EAD6
63C15D2BCA2C812BCC373081B4C89E4DAE8AC028FB431A09C2D66E622FE832D7
1EDA103CD3BACF5196B9180F43915981684260E33CEF725DD21BB955748CDEC3
8CE227EE6A35A77FB005CA9996608E5F94965E77FECF814F30ABC2439155F071
1F78F2451A9F7B4492A52CA21036CD8EFEC3A76E0904BD037007785F79F1E2B3
E3D2FD5D10D5A3F45E59E75C3B27D88BEABF57DE7631D1546FAE73F64F18874C
565E689DE4E451CA61F9AC1A41D9CC2CC05F2EF7A94F9A0E2EC75C3AE6939905
87B76CA8A34FF9B730ECF7884B70075A1EE766720> |
8615 <001C60D8A8C9B5EE3102B2126A82D8A248D1BFD01A9109712D0157ED71
62CA28ECA8777D059F98C1836FB623F03FAB3CE4C8897D6BF0D74775EE515D72
E5AD327247D2F7EE93A91FA61AF7C6C857F31687AEE60429F9F0CCF20D71BD33
1BD2135A0F65FFE1FDC13572AE6E3CD6C3F52B37A2E0866EC41BF36D918D9AE4
6AB9BFA23926E71949378B9EE632DD69E239376E55F6410DCDAFED651718C0CD
1E045E14E7ACEFB682EA626F42A6E64C648D7379D1899C616120807893BCD974
2B7B767685327368F3580535553BDA5DCFDE079A7897F2FC6F29D643DCA0DC0E
AC52C6B8A688D6EBB32FDF3516D19CE5CD1D885BC7CE0F2E6C8307AC9E0D053A
22A09D3598D159219F512C62CAEDF23C63F6BCF34112B59D26289C27AC4A9360
55E65249CCAD137D2864D5C42F8286148DF2F8EB4D300DAEA03F744D56E4B58C
529D57E7FF828B119992A6783AAC9B61C5B96708FBF1C474B8E0F47A8BD3FF0F
F42FB775132A2C2A4325A4B44EC92BEBCE7BF19AB630942EBAC36F959CC3> |
17795 <001C60D8A8C9B5EE3102ACF6DA1574FF7DE927B8CBF37F5241CBE4591
10F5CEF92306AAF001C4E4C848D0FBCF1E97CF09D79B33182400D635FAF37844
7D75DB108A532C80D850D8D913F46D44F97EB2057FEE27BF74578F95877B9FAF
F6E357CBF18945F0C950567ECC42FDA83DB4E123D642E32FBA57B1471DCA7AB9
73BB27BED96B73F0B0A12EEB2737C7F657D0708B540CA09A238F21B11FDA3631
F5ADAD8450CEBF0F4E2E9FDEAAE7C0A8F86206F3AE422817B30431A83BCA74C6
8A20EBAD75F6902EEF457A04931416F88DA72C4C88AF8A3FFB3CFECBA7AE062C
03AE0CA580490699F24141DFB736E2D44F6EAFF71E151BE631069E7F8D2E90A2
199071532F49C7F8E6801EB3082C8C7AC4B39AE00A849B599A39A81A4B5E3C69
167BCE7EE65B69AA3D413A5BF63C408731250F92E7BCE1F000C5C77> |
14136 <001C60D8A8C9B5EE310308934337F8D0B126246D03C4F77C440BC12BA
8C302BF7367F7E2540EE34176593954C949C55F955EE23A48F12E9003C18F73D
00751AB31EDDC8E821AD55AA259B950A9CE5851578BA2ED4222B582A51F8366F
B872157B118A2E2AE1EDD26B5F4F75550413152362E65859C908499E4926B585
8D5C9968F69D08A6C5CF6692F5F61036426EF725BE80C0E4EC630B3A8F6F296C
D0BE5DC61AD949C0E9C83A88F395F8538B965EB474FF2CE701F93B996BE3D1CE
ACE09794FDF659037C621F83D439512C532160BCB6D4586CD335A2FBD0D4A190
D6E5829D86049DFC149B1DED022C74BD01864B1E457366A470E940205205AC74
3A3602776E6F7F32570B578FF158C772645D25392E9085CD606E47E5F321DC9D
90D7CE33884AEB35E4C7DF56A0E2BDE1D14C38E7FF08D984D97ED82E80DB8C49
4FB81BB938E4ADE1A37357989EA1BAEF571D26BA1771D2428FC37EB9E7827A9B
B> |
7650 <001C60D8A8C9B5EE3117D7DE4AB16AAADFB83E08470BB5FFE8E1192F4B
C8DAC7BC6233A5D95EBB52BE8AEB58867D34DEA13772954CE158A5E76F9945AF
E744DDBC2DDD19A372F28D4A622969C58182B965F51CD9D51DE45FC317B86C0E
E0FD9EF83047C354194771B68283AC4887B4E3B9D67F2E77372D97C2400F7606
9CC966D420DC0509A386D7852949199F1567938C899A1283F1297D744994C41B
31A2FECAB0753B9F386870CA1CA0AE01F5F544F2CC20D7EDCF5AF76F9C797125
4B6A26E7C849D9E915885341B939694BF32CB6359B57F0888D23963D93C563BD
892AA83106502DCD6A2719AA95B38E31845819BB292AC74B4CEC0DF87A2635A5
F49E5E342573938B063B54E85E697032AB7335D3F38CD1CC6A4C576629F4011E
EED89F291E357367E10701420E03> |
7670 <001C60D8A8C9B5EE31587155DE69BEB2802850AF3E74EEEC1816B53827
E1C9CB962DE660E04CC78F8A9DD63FEA9DD0496A1153AD806084441E87069716
619D3DA299AB80ED3FEF0EB16365F0EE6039D855C8892FD970704740C96CB4F4
E8E851565E7F0D9B47C22783A6C11AEEC8E7CEAF195CD27CCA02DED9DE481A56
58E6A3D1E4273A459ACBFD2B5103D579587A4AEF20E1111DA1CD108A6065C8FD
FFFC92CD43328F20B44314BDC1EED0DD18D5D52CEF5F98B8FBBC307E787C1CFC
99EA5C2F14ADDB1397B685C84560638EAF89D07E6B375B85CF41BA60B178C7CE
8D3523842DB3E2791C21E7A1DAAF04AEDDA866DE6DB6F10CCCDAE37448D4AC66
33EA09F441892A0D4F7AD67BE388A8011A1498328D400CAF58315E7359879134
DBFFAA21152397264F7D003965CC048E46237EBEEC33ABAB29AF> |
8453 <001C60D8A8C9B5EE3112EF14D2E788042E896728BB40860E801E060687
8C9F7D71CC4E7C1B1684B7C605B0E6CA19E97C33F0843FE5EB512471FF60E45A
82C34FC1FE67939480115D4276A01191CAD8CD9B00D7039FF73F98DADFE490A9
646420CCCD1CD23A271982C6B461842DC18FF87878E52462052BC65ABA7D8005
106DBE71F3E19EA369F6927909078CF76E524846CD811E9E73981D654CA4EA91
E5A50E29B31DB1F5C6D14D58BC51749D7ED78F3F259E491F41F3514E2001CCAD
98373FEF15EA6D7848CDA87BAFAF750EFA6696701EE314ABBAE70A99C7981B3F
40> |
7481 <001C60D8A8C9B5EE310D3F3780C3FB133F302AF9662CFC0273780801BB
04A9CE2CCB6BF39482B09C53E470488C282EF3998B3583D7BE5A45FF3DCD9358
EA1FD30A37DE4237E578A6D9EFB7853461318F1B6827BDFF1605A79637D95DFE
169DBCB5C4C6372AD7C4C0B0E4AB2534420A9EA9EDD0037D0F5A587D0428E83F
A5DFE3722641AD2D74D37BEEB49D617E9DD30261BF846BA4C1802B288EA36252
0D2B1DE157C96FB60B398F0DA48EA13572F5F356645D9EE9579307D7D432F9BA
4E29751135B238706294E282587E38AE9B7AB54C2C52E1F33CB27E29FA955CE2
E6EACA1116D7A0626C43FA9CAF179660567D359AE8CA> |
7571 <001C60D8A8C9B5EE310D2D09A3F2464330955DFEBA2F939A153F5DABF0
75D638A348D34407C41BCB37E7A8461448D8558068A3E12F8B57997144254B10
BC7C5CB7780DD2E15BCFC6B6A8A394ABBC321FBB0AA72B2FAD5EB4231E344253
CFDA3A94962991102C2823ECB67EEFF198C6908848BDBBF5541FD795DE718CC9
3CF8701F9068F6465789BA9CF4BCB6ADB15D58C1F9B650A186F7F107D762BECE
14B6633ECC3D7A8D71A492C05404DA4C409ED299> |
19322 <001C60D8A8C9B5EE31144FDB23FFD943605C2F480799DB590F7ED9654
B85F545DB7B533C3AC7ADF27DB0B8C3E3D7C9DA8B06FA7B6E96C739A478E2E12
9281DC432A613F919FBB38AFED91ADC8F67AEF20E59A2B7C4F0E79E7F2E9ED23
1513C0648C253455667D2EB3F8527D085FA683476B0917CBF95B93039ECAB2EC
63C27C99C9BB04797DC8B6C12FACEBDF2D1C6CC9E8E82B699971FBBA6311411D
6B2331BB110C1A930DDE3D9E59CBBC98FFC71D43EB614BDFF1BCFDF6210FE034
78D832350D97BD51C4C7A82F22A8E9DDE7DC6C8836AF8905D66AC803E31ED54E
6DAD8BF7A98CF7EDC834BB89D9F2B596D2B9FADA2A04C9E63F70C836D29AAEB4
91A5DE6B53B25674B0677BB3C0BE91452BC3A3036D91D7BFC8D7C071A9856D59
43D96B8E58DE6EBEF18232ABB64B09F345105A09BEC869BA1D7D908F865A1970
AF6197C44FB54ADD5473BE139D099FF16A7ED26AC729C0370FA4AFC663692F57
9EC4BAB5201D171F9585A499E9E0978858811CC29A6E96483BDB8134BFF79763
0E2> |
28449 <001C60D8A8C9B5EE310D8BED2F47822674726410D51AA56174CE223C5
85F0ECC82C2DDECACD2A4BEF9097B3B86B4EE2E5BA7D52865C4BF514B504AC00
C28BB6ABEF1D990C32EA726CE92926FDAFF52F06B5CA8556F2939734059CAB71
3AA3C26B2DB97B2BE824A21A5B9795D85983A3B1626563209C2F21D89296AE20
4FAB9DBE8FBA7C7> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 344.63 mo
(1\020\035\353+\0052\006\035\343ip!\247E\203782m\035,4\254\035\342\035\3662\006\035\343!\005\0359\035\223Kzo!)sh
grestore
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28612 <001C60D8A8C9B78C66ECFB0787869A9A1A23E44B3E9AC19DF9D3CAD17
2DB0C5BD42A48D92FB57C46F18F7186> |
28609 <001C60D8A8C9B89100E29405032CF540B228E72552> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 366.23 mo
(o\304o\301)
[9.47986 0 ]xsh
grestore
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 5 GetGlyphDirectory
28639 <001C60D8A8C9B74B0CB5DF6C84CF353B772D85B4038C184407812FD2> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
28595 <001C60D8A8C9B8581AA5> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 366.23 mo
(o\337p\002o\364o\367o\263)
[8.35208 10.314 9.01813 10.3321 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 4 GetGlyphDirectory
24351 <001C60D8A8C9B5EE310D075C8BAB8D286C6DF434C0D92196D1DD89B62
B2F0853AC9EF03FFC759B9ACE06DEE53FEA9F67FD707658FAF17B6BC790D3B79
26DC8920FEEE156B3B04235740A2BBAEF247590AA2DC42E52B3E02AEAC0C42EC
039C3C4FBFA948D8D3A778412B6EE7A4C7626D3BAF64F29BAA2A65495D0F13B1
EE63F232FB41B07AA4B01551939C7A07F8BE310B08EEAF2E3A9FE31B2ECF17E3
929C071FF98510CFA97FBBDD6E35D13E79233279B65B76C2B2CB32AF3514CDE7
A466D8D650482ABDAF145FA752E628A9942E8BC1B7A278670CCDA6CD0080D0FE
EE218DF137CAABE60E0FC21691260A9F55EDB71BAF1D6C2B02556CC4C82D17EB
BB972228246417283F7E5F71B8ACC3E84C5196FE93F95432CAB9B10803F2B822
25E21DA884EA7F88699BC7B3CF26E2904F33A304502698EA90FAAE5C86FE50B8
8F21E53F99844EA60DACB85B708A90BB57874756549ACA37F32B0B49B40963A4
22D7C7D0AE00787DA543919730C7849C6B00EEFFA45710BA38D933D6864F172E
D9C9F0EE97F61162DC57CCF576736C5256C885DA3E45923CAC462C92487B0DAB
8E6FC42BC72FC6E4A> |
12559 <001C60D8A8C9B5EE3117DB87B7A587A34C4707F1BF48A23B81329C676
DA51B7E8E1A18049029A4BFF290697ECCE3F83ED96A78CF357361BD8F0BC0146
4685D7B055073117869525B2E098E44C52C8A351A37054E74083F2BBC1BA2A4B
1BB7F8A2826875817B0E362D67535AB61562AC18D67CCDAAEA6088CB91AF46B1
C06DC4F83B3E2D16E9007B9DA8E529F7F9A3BC56AF5D48D73772C6ADBFCF9D3F
A19CF8849B48955BAB77330D6DCAB74684E3CF84C90DFD21251E34467A5B4CE3
5E386922D88AB8C667B095470C8CC43AF35471F035A1D5B9A4058CD8F90F830A
A9F5E23AFC495F113115E3FE951D738E6AF0C891E3BBAA79AE904F897C27A59F
C436090E5CF0B2B4E2DF4404FC32831B90751D55A2B4B397DE64DE64D44CF016
ECA0915065A79A61C3ECC05AA51D4F70AA093FCD3A29F458E31328C95111EC40
3ABE000A47ECB31557267C26135517F11A15888E2CE4D289674345A9B9859A59
6309F2A4D64C72D14225E3F866D8C20C12CF6C68A> |
11505 <001C60D8A8C9B5EE31035815D5C09BCD105EB6CABE65EBFAEEDB18F21
B414EF4B74764651F10A95B5FF4516C3A4DBE865801F83429997E261344EECD0
CDEF89A8666E960FD991E53950149FFE17E29C5F69CF084FDC433571087098BE
C5EDA429EED5A4A94186F4A42BD7867B27A2F00D4E2C701269769F09DD5C4C15
A02D245B14D37375E871BB086B36C51F09D3D15003CBC196957DBEB52A03A7AF
641156B7E936E5CF0C0373B83FCBBCC8E34D40A1B9884004FA9EA40D69DDCA98
3552A253C5F> |
19918 <001C60D8A8C9B5EE310DBD9FAA5A7C7CE6C4321D233DCEFD44703CF73
088185C36F58BFE70DDD507177331ACE1BBDA20CFDB97CB8E88768F2785E5AF1
6C17963E25C79CE2A05214DFC3AF14082EBA3F9B70BCBF7F0386A303BCCD2D75
856B44BFBF1AFA9C9656E58C4629A58A0D8045D8DDABCA23EE6E32DAE46EDD79
F7BD34A7697679CB272D270980DA0271EA5AE5D2704B4170162C11AE86DF25A5
D3592F7AC8741DB306CF3A3FD0E96999B1F953C65C4F85041804C446BF315433
272C2DD4B032CC6494313355EFD33A8A504766C67A7C123488169EDD30D03453
86BBCC875AE2F255825B4BDD899E35F4DC5BE01FA84D84DFF708CFFFDA982CDC
001C1C99A1383E6DA15D30FA2629A43DD4FF3ECE147DBB3FC1A033459CFB710D
9A11FCDE025848CD2834634B58319F1DC985CE00111ABC5BA68BA5C9521A8EC0
ED29C5E4D0BB206B56DBCB5625925E88074EACFBB88D3C6B78BDF39E6A90975E
5A2A620EE1DEC811878> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-200.128 366.23 mo
(2\006\035\343o\023_\0371\017,\361M\316)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-74.1279 366.23 mo
(o\337p\002o\364o\367)
[8.35208 10.314 9.01813 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 3 GetGlyphDirectory
15465 <001C60D8A8C9B5EE310D71E9B0D6E8B5B586B5C66FF1609DC16808852
AE2233D516F656488DE118E9FC9542E79C59B49A6574F9ACFBE3A1E3CCFDDD06
55C908902DEAE8C31EE3EC6AB620D589EF5E49153B6D8EAD92C9317C591D08BA
105115FB2BD0FAE9CE7B2D3391734CEBE9F8BF50CF9705097C2003E13C50243C
AF03D29853CCBC2C9DD1D5C4590D105FA4FEE72F9C8AAB656D665D19018D707E
2DC242960379BF3EDC84747B89EDBA401FAB057A4AD5D2A3F1299B26EED3924E
C892D05FD1D5798713330A4E76CBAFC328410CC768FE8D60A094B0B1C1782888
5549DA1E01199BBB3309FF923EF63C40515BAF29DE8AF0A5AB19F32876A4228E
0177A626FFB927BB9520F802FFEDCA3B943045D5F2E788A81CD700F103C7B9FB
123916CF280F88D4FAD46D887B8EE773727D293FF661948> |
23608 <001C60D8A8C9B5EE310D0EBD44BC15557C488F3244D27D6677D458ABA
4B00647EF601B92AED81B190E8122DACDDF8869B2DDB42E3EBF5192BAD5694FE
FB8835064920798CCB950BA6955A6C2B5A8F2A802F5BE91CE59BAD0BB2B4CFF6
50DB00C609989233356A76F717F143ACB5526FF776D0C37BF124E1D824BDB87A
0F4A97C9D665A9331BA0A3434C5D411FC3B80BB177B4F77D6C4ECB876013A892
B3B27595E1B1308CADC61CCA54CA30E71C758120BE6D0B9B70D4816DB520C2FD
A915226B0DE0EFA0ECBBAE690AB6FFCB2C0068601B125EF77B80557C0B0278C7
2C8CD2958C0BC79AD6A98A6680C52BAB3FA67A1ABE13A2313B527A3A3A93C56C
1783173AE46B274D430AAD2E74FAA2CF84559D6588C603946FB912FED22D1C8D
D4C89D7B460C26602AFB30FBAF213F8D6204B115E2088642EBAFFE378546C795
D058E872B9616943D16751B3DE5B620D6522EA6953C895C8077CC96C4ED7833F
FB34E5F81C21CE528F90251F1E1879AE01096A09CC757E418FC4C84361B20092
389CE5DA3207F3FF302BE45670CEF0C5955C8E1B4BCF2145C3402646379EF14A
8C64E836B509275C91345A6FD79CCCC5D4DA6F59A2AAFA681A3C8BF66AD433E7
913DF8C0CE5981D43EE04AB111382FE394C7581AF2960219CA72386451F93E27
CD07D0D0D5DB4E5D34D94A411A92FEB1837F83615F4BD9283160123369A40CB6
002716865DF1A9A68C1E212B583EBF5692878CC445D814F4407434B2BB5978BE
0527CDC> |
12936 <001C60D8A8C9B5EE31020460937A03E3B0D33BB2D53599E7854496BF8
500569F1883EA13FF7F860CCE37217845BF80C6446512A31A2C4D7D4A0671CB6
A353D54A7A8D2056C8E4636E9143F225BDCE3397BD75BFFCC5F50588694136D8
B122B69A3D80E5D9FE88221CE00753B5A8A0BC995FD2634DE3CA0C521FA3D807
805F000B8EC592BEEBDF39712DF2E12FD65DF35AC84D37D2BAD5610639693568
A22C647E6AB79649E4D024E6226440B9C90395C6A308B2648E40FA609BCEFC09
AF617AFABDDE0A04E80E6F2D825EED14A650386B9CB26EC559FB1F28431784AC
26570A52198BB38E10401006539BE6271E9E4B83834614AB748A4C5882C5AF36
3CB744E4860469A8EB44DFF119258E5D15F8889A01A0612EC36788A87416D8DD
412C7B4FBEEEB1DB0C4FD26EC6C091FB7BCF27FBC39CC8F24F40E4383DDCC5B8
CDF7DE03D0394F792891C888CD2C62C5E10497654A0557FF05AE968B85158580
2C4188E016CAF59F3B100B3A5EC425C886F833791DD818666DDB767FF68676C7
931146FDD66C359A1A6B937B49941105F1B4B157365BE8DE82DE459DF7B9D8E6
BD49D9178> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-36.1279 366.23 mo
(E\2034o2m<i\\82\210\002<)sh
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28613 <001C60D8A8C9B78C66ECF39464E4C36A41875CA13B3F1084BE95AC3D6
B174FBE334F26768C74B2ECC4CAD6BBADA966160EFCC7F2747E70E0119D6AEC1
B017FF7666859BBB2EDC8A44058072DB251CD7C890E5801C60DCDEC2DC5E66B6
27F3C4E46C8D576EB2D7BE3EC5C6EC7CA35C52158FC62F188AA92F4A597AA61B
2CBCDB07E050E80BB022F1A82> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 387.83 mo
(o\305o\301)
[9.47986 0 ]xsh
grestore
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28646 <001C60D8A8C9B7B9B9DE69CBC96F0B5A3AE98D065C1FD7CFAD83FC43F
1290F4F9D34982C14CC513501F9076D4F8907F22AC9522F2896E944B1C90ABCE
1EBF569BE3E67D6DCC89DBF0C52716419D51E2AEFADD36CC19C82AD0FC3F3BA6
123D0BD3A2ABA4E110BF677253E952D076F531E23520FFA1895776A2199512FA
C9BD1336F7E1C8EDFA463D40ADCD492ED3B75F11D80658BD7ABA38DAF43CCBA2
32FE248B15967CE3B652AF643FE11F6C5568129285AEA24CD260CD6D81E569EF
64502ECAABE996CCD635CCC94E3C711D5E8195F3A715AF8260F36A77EC1CE55F
17D20D8E151C2> |
28681 <001C60D8A8C9B74969EE40BB25ABD91F8460DD23DB9B191A528027CD2
A43C92EB48C42770A0B496FFADA0F67DDBE4B6E31AA2489D103934A6C89> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 387.83 mo
(o\346o\364p\011o\370o\263)
[9.25214 9.01813 8.38806 9.25214 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 11 GetGlyphDirectory
13867 <001C60D8A8C9B5EE31113D8C06109CF538164AAF67DC4436E7F7CBB50
51819A57BE31BE6C9D32B6525B5ED54B312DDC21C82AE4BD0ED9DF5F21066C65
362064989C4888EC88604173E984C6B82270D0235F328E04AF4FD0933F1839E7
5AB16AFC2D5DD2072F97D7A1FE8C638D797E82EFE1E32930B245FB858D78DF54
DE9680C2B1D4CBCC82DCCBE076983D3E59FAA04F4C765213DD2E5DBFFB02FEE0
8FF6A3FE80761798440FA75746BEB50A763BB6A28732BC1F8F2AC35B053C3677
5B3CEF5593E6E8F0126C29B1AAB8D7D3966CA0B4B7B7F051756E2D229A92ACD0
7F0EB3CAD7D7F43AA1DCC510135> |
13924 <001C60D8A8C9B5EE310D51A838217E41581CBD8E2DDE41D81B6284904
A1E41157DD73990BE9A6C69C153DB5A2C3DEBA31629C447588B9F4F5820E1158
1F19F53AFF1CBE72B20171435B3F9807F2F8020EBCFAE5FF575159B11EAE1317
C87CBEEE910B3C0D50A49305256815E52D06B80F90E8B80F0A55B0EE74E75A87
4F32168E16A476A0813AA06D94A6F3A39246B1B9794FC00E44BCE3BB2DB01CCE
66C646AF6638DD62D80933D3AF662E3E0F773077BF02DEC60F90C36A34907FBA
70CC737A638855E5BF7C3C4D58CE95C5941E688D67AC6BD1F0B38C70C9EC646A
631458E31CCBEA60F2C9E4FCE1E2291483BF0B411F9CF792AD630A43D622D5D3
4FAC05143125A2D974510A761F5707F2DD57AC84B561930BC592D5CBA7A9099A
B54823B24CA3558047F> |
11056 <001C60D8A8C9B5EE31085A9BCF7EE558FD47C535150E62136661274D7
4C84D3595BABDED2F901FF3C6A5B4A81980DF00B03BDB715F19FB7408B221D4E
07E21714E92BEFC9B663AC7C76DEC24BD75A5A9C3C64C7ED0C64FC2059AADF1F
8D2247DA30FD2ACC051EBB3DDCDF6FDC83FD75164994F2E37680A17FD16AE324
CAB50A44E0D0E38544ED97A7BE30137A6C2F5B01E196BBD219B4BB1173CF4711
E46E156BA359792869562F9790DDD235503F70507A2BF7790D8D9757C09CBF11
A9C897259124CA9EFAF3AD270F793F7F98C96939A18B6DBA7C738DE9FFD8AFD3
DFADA3EEDCA06D321C4DBA4D1475BFD4D47AA07E3F4066922295651BDACB20D3
AB21217972080CC6214E36E69425B53AC4D52ACD71B92CFBA933DA4D62B8474C
9D26E1419D6223E392B52F90184E18491F15344A9E659BF15973F7EB0847C7DE
CC6EA81564F307DB8E7851B5B1A256FFC7D22FAEE18FFFDE489C7CC7962FB315
E1EE58E10176EAA6AB9609C199623A96D3A0D1E7C850B7E9616338BB551C9568
599CC44CE7B07A90C352D9930F621781733125A3BAB4F685A29278AD7AE88536
6336C18805C1EDF4E394938C5D5CC7DBB3C33EC07DAF5D89213560597933A7D2
70CD6A4A6B50087221A5B27BEB54E9B9B1A53DA39AF1243BCF493BDF53DC0B93
61B680BC0B2B88BFF1F5B6413CEEB9B5AC6B7C5F0557CE395F35ED4291707D11
94F0DC8AD9EE5AEF1A6171CDF326ABC9020EB974FC87B3839A1FF8956CFEB887
3983E2B670A64EE90A4D8B78B11DDE65EAA836B4746> |
13614 <001C60D8A8C9B5EE310D14D71FFBBCD8258762979E413F7E53733A658
8AE42DFED312990E4DD33124CFA6EE7EBC4D6BA2B294FC611276395D4B87DCE8
F2B4053246A0ED00B37AFE81ADEFC983B6858DF1AA6CC864958A04CBE1CECD7D
416678559050A4923BB6AE1C53BA249851B8FA3DE874AC580F16BA0F58530D74
2A8E50BBF1F4FDAA0F945179C9E16D6F6A2225D17A9B96FF51368FA119A3E90B
89E3E39925A188A99563967D6F01DAF9F83C50204D2497D55A15108773C5C078
F75FC49001FB54A32EE9888F56C76B3ECD7BF1BB8357979D54A625E539B7CBFB
557C2883AAF56C65F02D1238911E0D3BEFC5972940F4EA53100F4DC169B0B7F9
2DDBBFAB5ECF01FFBBEABB2EA8FFD8A6C306384A07775DF0B6350F591E8431DC
A1A7275CA32361D> |
23200 <001C60D8A8C9B5EE310D4CB0561C61DE4BC95F49B2EE503A84C029335
1911BCE0CB089ABC7A996C18FCBD526BC49826D259693B889D0BA0C1901FA548
7CAE9D83B5D292F588B809A41B6E7898894EA2F799AA85E627E7F9F57EF1FBE5
907B3FB2BF8350A008E04805A7583E2E7C29A3BE8BA884E805CC746A63C2FAAB
57263824B47A17A7FD789D8976E5FF4AF13137651F673131703A34EAB7C81313
37DB5336B9C42248FCA5ABC33828A783467F40DE3D9D03AB9EC8C683D89A8B62
0CD867A5EECD420083F94D79A0E77E2560E3A6D4898272BD7CCAFCDD8C56BA7> |
19094 <001C60D8A8C9B5EE310DB5049D64D561C14831E6242E5CBD53B158BEA
79884104F42065EB6C64DF335B01EC893A8131BA1BAB2901D805F4395AFE55AD
843B59D10D3213F11601633412EC1D4BF84FE17064ABEC635683802DB2E4A669
5E5F974F2A1C8E79CDB58F11E2DBA0F12913A0DE3B2F9F2221131CFCDFADE4A4
94AA416965443FD86445E8198CA6B5A6B3027457F16FD2E4D481792E5D2F2858
3148F3CF7049882C3C7D173830EE11933FB61095ED0ADA8AA6D4943A8C19F743
0183CCF706609220251DC84EDF7830A4D067E9842C74198FE6647B13DDF85B06
E447C0C43E51C09A16A31D31A44408001AC557245A769B4169F2C1AC3EA0B67B
41314893F79C647408EF68B71CEA162CB3672E072A22965F0A7107F53D6B2973
B22EE5101969E0C07DE5F171E3CF0A439735CBFB3697E1B36D15841B59009329
8E858AC4D1443E838FBB1BF695A5BCB1F0603A8E3C5A40B6C9FCF34A2E0C7465
B3E4B9DB6FF0DFB183E0A8974BF93B7E270119C76B6CC04B85AF5476784F051D
F59BB78A830BED30C414A9DEAB178BDA02805DE8A465CBC1DEED449BD8D0BC32
782D5A86E494CA2AF664FD97DC3> |
8441 <001C60D8A8C9B5EE310D544C3A1C05372AFE26DE493A8EDD6296C020E2
69964344DD7E9FD7A9280142A468B2F880DB72ADFDF5EDE59949B1E8AC9C975C
81DCACB408D3F9EABD72C3B34ABFEFD97F563A3BA798D94B7E2AAC0FEDBB7EDD
145F2626AA19E8975680C98892FA7B56AA946414860A5968B00227C3834BDF60
16A2140F718B8E4794AFBB341B934BDE063173E68ADC30D040BFBC45C6D4AF68
0C4B8054621204ABAAAA0A528233447C2ABFFB94B692BE430C25585420B2E6C6
814EBE3FDF6C23765784973CA8CEA0D03FDC0F70A090CBF38020E57390B02DFB
630B7B2EB1DEA0D3B59A6A66A4F1F8AF606428AD42D013AFDB1CE7BC864D3E1D
88AB2124C270802B2EE0D25DCE0BD4B989E2FACDFFCD82DF604B5F438303E83D
ED700E63> |
19922 <001C60D8A8C9B5EE3145471278B072BADEFEAA4336C61FD208E46387D
252DE0B66A3F173FB3C7644F1C2964578911C26FC3880D3DB1CE8FCBE0AD6E59
4B533F851CB3E559B573CD1ABE662F74BA279A40E7F131EC710C4D93A989889C
0D7F8BE2900BB95D17195172F6C4CCEFBF6D035DCF6BCC0569286D2CEE4274EB
70AC4A83C2723FF00FE52FB9B2318DCAD634627B9D41245ADB10F4F6BCBA3C63
E9D56952B2E2022FF1DC22326535225352A96A63FE501BAFC1119CCA64812B89
2770DFF62F16500E22E89CE1D11BF7A5774BB859BBDC9595E8D7F30ED6D06BD7
E6FD3FABFD2525E0170ED8429EA72B2A05D7258F91A2C3735E4395BA9F30D700
4363E6D117A4BFBE2D7FAA5F150BDB51291E647B71C3F14F2D3FA8FA4CC68288
AF2B7ACD36BE24115736120A94FFC9AE6405D9339DCAEB9A4B9063DA94C43963
039CE2EDC3601B964F08E8ED97B2D78E0F422F796FCA0727174E6145CEE5B63D
518C468748BBCC304936F6D57B3ADC7838F16AC0C539FF0662CB1328EB88094A
E674B078C4E9AFC5C0E7C1C7AFC3B0DCBE83F40D7BF7B3420BF3346124285901
BB24613A70903B29B287F> |
13979 <001C60D8A8C9B5EE310D4062F8D0613BC2C9743EB9984C54505F1621C
32B2EE203D5D44FDDB59B9751CC35C6A387090AE274BF2C852EADCE1CBA8456C
D29EFE0F0CEF468A6F0812A3B52B679F3A4313ABDD2E256FD6CF8DFFC743CF0F
92C2084D29F4AD6CDBFBC829270BB4A44FF0986E0E69DE8D9C6161B6E971F396
D9D295194789A91E97A3B9EC8244DDE5208235B3B2BF4C5CFA0C7BCE2E366933
DC185C3EDD6EFE7F0710992F935CC3C50DD9D7187C6992369401AFCDEC712AC1
8E6E240CAA4D7EE0668207A7869AD3ACC72C7AC63D3F0CBEA048D3AAEAC7B7EE
F1D29C741308E15645538306999E0304CA0A8C7083D4B860DF476CD28102F87D
0FD707382726D1ED94303B01B6A9E59846DC6> |
8344 <001C60D8A8C9B5EE310D4A799606404136EFE5A1EA7E5FBDF7B79F5C57
BBDF57D4587356AF29C4F514D5D1FC9D9F2A861EEEE75841078774AD3777823E
CA1BA2E12F070D226E623EA6F116A885BFBC361C21D9FF194E0DD0E4CF921EEF
996E02DFA5C7795F41F18DDF9CB02AED4394D841E8A8C60BA7942F0A811E62F8
2B8CD8FAEEF738E454B4834F27463F8837842D5266010987E12E3A3CC19D37E8
A29BBE46522AFFE2E6C5210B1701A96758F7B18E7114CE9B28154DE6C085867B
03C0C307FA72F90EF0AB5A3DA15EE5EE3F36B61C85557FBFE7FAC515EA00C5F7
C8EBE9CAF5EE00724BE7B206AC205A599E664B0CEFF656EB5C0B71264C22C7D1
A353EFEA9666E9771B663AE8F70236FCEDAD4B247E6C1A1A8E93201206DD72D2
92D3E410503E54D2002055EFDA488E22753FAEFEE235176A> |
9693 <001C60D8A8C9B5EE310DDA30BF3EE89811D0430E311D92D36A7D90E654
54FB3898FF11650137AA591BC6A7A4B536DAD43C3B374C910A8D82E347EB92B3
5F63B7D7066D766F12123F904D7CD8FB3F222D78C454B8BF7747B85BC82D4E88
5334FA62311035DA7245530795A8547168CB3BD36ECF90C254993B195BB8D4EA
F3FEC3C5D1589030AB0A5562A9145605581DEE6499F507F1020E5722A0281F92
9AF62716FEB087C32F0E0342FD1A21676622DEEE5AD9408F320AF41C9ABE6664> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-202.408 387.83 mo
(6+6d+05.+\005,\361Z\240J\226 \371E\203M\3226\233 \230%\335)sh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28631 <001C60D8A8C9B625CE6BD2BE419D5CB815C1CA0C61BA0A2D3DFC3B96F
CF9FB6F9E0519EA65E7C8EC76A179BF9356B2C1F7F4A814471AED147404B13B0
B2776E0D6E4D16A4BBA0742D992692136F6DCF6FD8FBBC1141BFB8994DCD1331
B5CC1B493> |
28645 <001C60D8A8C9B7FA1378253013ECBC2E2375A528708F98127351381D8
D6D4621D951E8F5F697D02315B161674B3B669EC72DC9FB775331F6348CFA7EA
DF53D1E65E2A1653259F1DF90BA621D0BA605DBDCF6462367C15F1F9BCD37860
53893E0E997109E5787E293F736D944B821F2A5> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
49.6122 387.83 mo
(o\327o\327o\345)
[12.3601 12.36 0 ]xsh
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
84.7122 387.83 mo
(\002<)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
102.712 387.83 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 8 GetGlyphDirectory
7498 <001C60D8A8C9B5EE310D89A5EB5AC395E17DC4F4C38314C86B977CC614
981D4CB5FF1EE0E3D843E99C014D578DB74CF906689A64AAF39A7E8B7D91800C
290440E154BB65CE2D49CAF3E47C3CE558AC7D9EE8E172EAD14D50642A40C7C0
04FCB208D08D74D87BF24A2DD4151C23C9AA289EE99F682EA9BF4B79A086B011
F3B6FBBADAB6EBB1897A314355B3AE2B051F85F5BBFB671D6007866DEAACDEC4
1EB99153496A8A0BA136475BD10A626942B1B4245D06EBFD> |
8973 <001C60D8A8C9B5EE310D06E4D22DBE98A1FE2F2928133747EC42742620
8CBF767FE8803CDF3EE12E5FEC273C20D3EF22691B17F4A24B3F0F6E8AE67C29
8175DAB03FD3B235AF250C85DAA94ABF8ECC6240D319AB6263445F4FF4DDFCCF
9E60DDAFBFD71AA809D12690BC0A05AC74A9951FFE439EAD1899B34CE684C006
506D5F5C517EA34F02C257D2244688FE0CF5B87450B301A2A3C9CE2473BAB0D5
453E6A4DA3CB3D8CD47A7B3F9DA01DC6EA7A9CD98A5D5D0AD837BD6020F8DDD1
1EB8DF205076482686C6C722DF58C1C439F76E4BA57E5F4F0C9DDF8412BF7713
74679D8FABDD27DEA2CC0454A0681741C0D9A6A360C3E64E51> |
15264 <001C60D8A8C9B5EE310D6455F42B5E35339770B300013165C57A38A93
792A2177B48E14E778E8D019244DA785B676060248F43A0E14C87B82938045F0
C051686258850217E587EF58D0B56D768D594CF38906CD6B1E601E0313127911
DA1CBFF3768994BD1E498D37B223C62D3DE4F71FFD08E612D340A59EEB461A5D
EC2E5F9A9ADE9A02D3920B3B210742A2DADFD52F009E62D68E67468E1AFC5510
E60C2FFE32FEFA68DAF745C06B0A910EDB7E28D33A12AC2F98E7CF5B206A4928
7B52F52D63FF038CD99F8B0EE909F17C5B92EBB0A1021A74481BEA7EE9D8D94C
D88C2978C1A88CD85873C47D16FEA8879711C0CB4749EE89F49820B6A5DCB62C
63B87164F78CEF3912C43E21563CC302D6EBE6E074D8226EF546F7CFC569AC59
D351870F5F92A9ED2B1D5E5B26A720385C5A2C5C3ECF02F62C5689855DB0CB76
E9CC9773CC3D7FF461EB5651217073F62C1D0ABA9E8A91B501C53547111F53C3
2FB94F0E91FA4FCF016BFC9BC495D90ACAE633635131F2586C84BA8963D0E0D> |
13832 <001C60D8A8C9B5EE310D0752CF9EA0A02C0CF152C8198D4E6A62C327B
943401D7670C10FE73F68150AF149479989B74D6C70A8479F842E10F421F95B7
EF0597022B537F2975A9FCE7F0AD0A67844804B7513438C03902D689D8FE23FA
03EB6BAC06B144502B57A638BF6BD660CA6B67BF9D642762E0949912D1E688E1
2DC09CB414B2480C48AD9CA779C715F76ED6DCFD8FAE43C3FDC28B6E9797A82E
E95A43801705A0915834F00B01FA4849ECEC91DD6453F0A5E52C483B04D59041
C09C7191014654FAEAF004629C0CCA3E85F6E7EADCDA32D72F038B817C2978F9
970A7AA2CEB6B064620D1096909F59D44F2B39B1742D230E936EDCD08FA> |
26524 <001C60D8A8C9B5EE31574CA3374A19B5620AF9CFDA37BF0F7BEACC137
5EE2B5A4E1CF9EF86A6FD12E442CB170229F7B9F0F14FBAD586B9157E7A51B04
FB3B4C9190826FA25E66BBFD2193A38AFD3D64FBACB357723CE16244B9AE86B3
969EB4AE731A35E9423CBD8B6A854C9C56CDD1DE194699FC1274D312CAC998DB
B413F18A989AC0E9E53FBECF51008D5AEE8D701A2DC392DA71D3B9812EDCBD6B
E9985352705F97102F3136705B03F86B4E4C4D1DA9D659E78C9DF3A1F6A21E2A
07F4BA5043438F9EC3F1789F90BABB557368FCE41DE510CC9033D7D39E9E3CC4
1AF481BFED6C394FC4147DB9829B67E5F5778D16C415836CBB36306B76F159FD
7F2BF442EAEBEFA96541E3AE03900345E55266ED2E039BD093824D439223FCBC
B2765E750A27D265EE0468FB1F935FC6A2D47A6420527769A3700C0043012012
A83553EB82728748D72227B14429CFA6B347373259925BDDA79C098E4AA320FD
29DA39FB8A833A5B040D469A1CA1D068F808A1BD6538E1FD69EC71841396366E
5A1A64B1F7FA06A7E3C6000A99208B92D2F21526140EF25376399C2957C36CC0
2800681574CE81C2894312AC82C1814BEDBE0A3C88F7212B657FACB36B48B58C
BB9D9FE10AD019A8FC254828044C40A838C09169F9C36B9D1766191DB96EC844
6F9A1E7E83B0F0CCDC801360424497AD03B93697D24FD0F82775ECB461AF9172
DC94BCF3915AE664F8682E0CC593F69BA808E9233BD12AEF1B93CEE385613ECC
1DEB7A1921D948A576CEE67FF85F4B26D185FD01A8EB16EA895F0142A8402D1F
FD31AD8440C82C7FAD0441A6169131F53FA24> |
10261 <001C60D8A8C9B5EE314854AE533FC69D1E8D79A58CC706871F2169236
56B2131FF7CAABB2CB76A3B514E07B06B3C38EACA29050C959CA9F812282F0D3
71C20EB09046A5D1CD3342213BACDED28E9591D3ED2E600556FEF629BBB08F1E
16EABB78FCCD33ABFE18F9FD5B1ABE597D1C10938485F7B4E331E5624C95688C
24D77A5A978DE998FDEEA5669D1ECB1E16FEAA559F0271B0EC468829DE344389
713BDAD815F3EB8900D0586C8D5AF51DD63D0C8582A8338E2239771319C52FD7
91D4F8332A76AFD46B342FB84763F3AFEADB87AF98CFE> |
11775 <001C60D8A8C9B5EE310D61CECD04DC1099AED614A27F66559AFF71974
2CD7B9312FB8D781FC9CF95796F308240E41DF2CC913B29F836E8787A7C75995
8C17C8BC7026FF05B883E19AF1E2B00B8E14C9CCA3E49CDF8DF6FF4722A2B00C
A99D01AB57847CA54D1417FB345935C9924A197530DCAF11D76D308270E33949
5CBE4AFD32237A9DB346BF6178203AB9254314CD5E93EA4F811DBC8BA6B8CDB2
F0CA1AD909FCA4B95D354EB5411EFDB6FE1121896B5> |
25599 <001C60D8A8C9B5EE3102856420A006ED035D19A0754CFB87C746A458B
3FEA2086A77A6F9B58BA2622688462EA3D7C6AFDA0082A274F707FB04514A9DB
A61C8CD5A1B17C07813502A5524A8FF4C388DA33E070820776048F4CD6CAF9DD
D6C9F28BB7376A8E25123759B544F327BDAFD87483583FCBDBE98DB8A9CAD1E7
0EAA5E22757DD08B299A830DDC13717B86D2885AE16E47D8FE47F4E2C4082B2F
D8A15E2DA8DE83DD219F70CB55631B665FF628907C3D12C8CDF412F88B5D0EC7
CFD8A6B78723E6DAF452FA02569592C060F388BC4CCE3DCCF491EEFFAE01F1A2
DEFF31CB1DF014E687606B783FF3300A0370EA8B39581FB46832D2E2C1329437
A912033A85EF35D8B010DB1B64F2C9473BD9969C3F849190A20FAFE3FBCA8319
D17F339B107661616016005CBFF86120ACB07546E97F9063A01239B16AC83371
0F2BA43424CFBEEB6502FD5124DC8E11BDD828443F3B22488AAD0EB2E839156B
C70BA8C8E560AD3F5E8F881A1B0C14C58C8102B622EF55048EDDC6EB2DAC906D
417784FE8C71A9EC8430B043B32DB47A0D35777AEE2D6E53D48F2C6AD7C84490
C872FF439626A1B6831750E213830CDD546505225CF10EF59AB4AA1EF76ADE0E
F2C1B84B002A46BE27DC03B914DB89B42CBFB3AB8A6AC64B453BCD65830D7> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
138.592 387.83 mo
(\035J#\015\035,4\254o\023;\2406\010g\234\(\025-\377c\377\002<)sh
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28614 <001C60D8A8C9B78C66ECDB6140BE188B7AE32EC2E6019387F28A4D7BE
FD974FECF9A6F435E80E22F5012EC52C00C178C2C2233F0B02C6B10EBA64AD22
230138C4945FB4B066D7E42C2C6EFB71864F1E255E0A8537DA22ADB3D546CB61
607C115C7A490FEE823B22C59C8C165CEA3BA45F26ED3655E00609C70321AC2E
2A2A318B590A3969C48D77B80570739FD2C391323D888FB7CCA532472D5F05C1
B478B862C545672D9550E95CD5D79AEB7716096AD08C7A6D17AAF6F6AA3FE1AB
AEC80F85A> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 409.43 mo
(o\306o\301)
[9.47986 0 ]xsh
grestore
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28630 <001C60D8A8C9B66129408EDE254C9C680856C5C58CDE8931886FD33C1
3032CCEAAB93F031A223E0F10B1688B890AF923FA33D50791F3585DC847E52A2
604D942BE0A76707C2DC7FFDDCEEF612E4CB75103563AA302D73FE057047D483
85B58BB1622EE008969F0F8C1E9BD68AC43409FEAD97A8A1EE29EE86CE1D9D45
843FB75131B> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28662 <001C60D8A8C9B776A06C6FC231F3BF82B95E430F6D347A409EECD485F
9B406FA6336964C8BF7664E2AB055B44D3A06959A7781CE4D2FEDDD996C546F2
2FC5837E64BBC80EF4699966E80B1E4ED4A9C3550A8BDD97A63B0696CF3EE432
A03807D55000A523F2214> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 409.43 mo
(o\326o\364o\377o\366o\263)
[11.1599 9.01813 4.03198 8.15405 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 1 GetGlyphDirectory
25843 <001C60D8A8C9B5EE310DB639EFD16D65252454DF5ACF6125A4290A2CE
AA90468220F348764C0FF7F85BBBEECC08D11B9FBFE6471426E5E835C576648A
B127975295B4CDFD2ACF3103A993A4058DB3184CB6BB37F30D39BB5A72EA5A07
CC9576585F711815C2BB6324286D18837BC5C070E713BB5814A4168B5D3B301B
F3D72B98A705535738013E2D2E96A448F3D677B9A89FBAE65F88C2749F533E4A
FF477C73DF373D8C5AFD1EA4122A5563A077CD8CDC45606480B65846AD172CE2
99A4AEF88939D7E5413A1EF130BB171E12BEF27B7BD78928A974B97C36E8A02C
5651C278479691EAE6BC9EAAC54DACCA76D189B94EC4499789D5D74912654F6E
D27759F4A7D154E397C0D8104C4BF9F1EC0419FE7294D0DE50FD07DCC67A16B0
01C> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-206.008 409.43 mo
(\035,d\363M\3226\233o\023_\0371\017g\234\(\025E\203\035,d\363M\3226\2333+^\317\035\342\035\366\002<)sh
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28615 <001C60D8A8C9B78C66ECE3FE51EC4A6C00F5F743D3A964A65A3B26B4A
BA75D1C6449C63EC7E2BD2BAFDE22A96CAB5112BA62956C94C83D> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 431.03 mo
(o\307o\301)
[9.47986 0 ]xsh
grestore
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 431.03 mo
(o\326o\364o\377o\366o\263)
[11.1599 9.01813 4.03198 8.15405 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 2 GetGlyphDirectory
13823 <001C60D8A8C9B5EE3100D3B4AB99C897B31AB7C722B3D7FD42B793F5E
1672B1DCBC95C15BACE12FDDA0EAD2041DB3571FDBC31BE73E92C4DC3AD318A6
63DC22D7E957AC201CD55603AE26C29BEC7BB9FE8AB64C83B51E9CD756660FAA
646AF621A1A6523456A4A3F0EFFB7DD3389BF0E6952C44A96EE17487D958CB64
9D22C63A4477F460DDA48B1F3F42960FDF43D1E0D6400D77BA06297E565FDE26
D1CE10A71EB48A23B332D9B2F6D49A1ACBACD1432FFDDC7741CAB3045EE12A9A
8A40A49B65EA84233437B83AB3D1FA9AD554A07B6B0D30906A6DC4C8C24BB0E9
E376CF371AF8699D1B742B4ED0A6AE4BA3E8065AA44D1439D869C6C558C3480D
FA7241262D5CDA5C238EC61471AAD5D86C840DAB823FB701DE146AB923427B74
9AA329E3943D07C8E92E274A9DBBAE8BAAB8F89C2E883D4524FD6092F1BE5187
6CF1EACA2F23BF82D7171B03FC19EA099645552A8379344CA8FD943979D64EED
547B15D016456B49BB50AAE6D342E6A1D231E7F7522794614A75D8F726F08189
0501F9A906AC749701213D5CF301D0FF99B739C6C1CF618D178E0FC0FDBC0F7D
8E1> |
19911 <001C60D8A8C9B5EE310D8D4BC1DAD7300A586DA044A43F391ED56A951
EBAEBA76BE1FDC1F5FCAD70F52DF2FE3151F0FA70CF6B1B00FB14E92AEF1BCC7
928877B88B98A7E4588063BC60EC716568E79096DACAB992A60C01E1265FAA7D
3B43FAC762E55B72D49E9B6574AEE762ECBA1FC5804AE3F8A1C6BC1D436ECD4F
D1DF00032EB76EE36967C6E07D2099D4D25EE146970E4A3D46AF58CB41E45965
6EFE1B8A7234FB86D031542519E847F2BF7D6E0ACB866F37E088476AC23AD11B
C4A211D4B5AB5C950DFD79461BF66D433E35B247BF52B5BEE653E68DF282FFA6
2B4CDB1F94F82127FD2F208E4B7C6AADED03D4AC08477FAA00A51716168C30C6
9E5427789F202B50944E97875FF8751784ABBB94445D6713B16D1BD49104E05E
1E77BD3874B3DCBD543986BB424DBF7F88EA3038396A6C1B2CF120166CAABE4E
18E4E4D26B0BF766551CF94620EBA4F8D6449D7A71AD2923B8650EABD63ECA5F
5028DD6175784A342A94A951455C31408EB4C10CB92605CE051B919B77F> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-206.008 431.03 mo
(5\377M\307M\3226\233)sh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28607 <001C60D8A8C9B89100E29774725B9AF77F3AE651C9530684501EEF93F
9A1EE95508D9A5441CEC60FFE9A27C4> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-134.008 431.03 mo
(o\277)sh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 7 GetGlyphDirectory
11637 <001C60D8A8C9B5EE312BB7032C5B3F346110D1E989C610F1D4130627E
7311AE5D4530F6477154D12776444EDCB375815B5920773CAEE1DD350345102C
29A939429AC208813BD9BDB756CFACBC74834E52852C8B7909AB1E10AE381991
902B8C603D9A05AC7E2A54B3E2D4913917B1C5F9B2FDA9C403A502F7251A2CAA
BE3B160F470C162F06B0CB0AA43FA31B47E5F14937B3F5B27450B0802AF69A84
3D236EEA1983E9C9949EE70EDB627B400379C15297568B7722DABC98DD82F4DA
C51A8EC4615DBD23AD406CDED5D8EA2297B2EF6B7EF29171F4C15B7DBBCAC3E6
A8FECF74D3B49861BEAEF2B2D30C13D9259> |
7443 <001C60D8A8C9B5EE31441A36DB24941DAFED030E9845A3AE55BECCBAA0
A0132C99A20C1F77BBAF9C7E6CFA94082E04A9F69785DD511EFA63A7C27A08E2
DD82D3F1282572CAB6050895DED219B0F7227CB5648D188B6FFA412311E0CF59
F923B1B61E9F19FB1364095442EF1EFC958EF26DD174E137FCB4E13A409A6A8B
B5141A1DF28D625A67> |
19494 <001C60D8A8C9B5EE310D151419A328D7CC4D90C169D35027C138C1754
036576F06017AD24F663AC11452293DA337FE454196934C0AE3D0985A8236B26
326292597F6516BFB23CAA0A5CC7E498B4A2D9F63D9C0951F810FCE3EDDFC379
DCB4B17A837ACAF4D2EF0627DAD7A03BB0DCB8CB69487242A7ED329E42BB7668
6CE93DF30CE880538FE99EBAFB15A20BDCBB657D9AF2D7050FEC5742C7EB6EFE
6F4FB73F7DB6E7EAE3663A19FAB1904CB6E0113C2E53807E181E2F0D4DECC886
5CCD9929E4BCA5787A69314B74A138444BA1070F231422BCD2F941356A9F3AF4
7B2A97F48ADA5CA9E1C384A4ADCD705281884A1A603FA8EBFF32ABC9696F2EF3
8F0367449BFE152BBF87FA31B91DB27BED32DC738232834E601522D5DCB185B1
ED8BAFA7F9F4EFCE5A301BFB91DB8E027893EE2D8596F69AB5ED812958B76EA6
7FF9BE93CB6AB297657537A6C1A2460F7AA54F7660A980723341FEA567181D52
166E634E0427383981306EE7D6FBE439BEB04E5F2309288C30015E72E505B0E2
19EE345A803AF3D19638E9B5539328D62628D2E88010943511198DF280485F6A
304A83056AD4B225340EDD008CF6A312BBFFA583016F4E43482F4919D481895D
F633F1D54EC835EB9575F806372CC117820B405503DD361CC4B164DA341815F0
B8E7AACBA29E404D68CFAEE4E26CB4880B15002176204151635A089289F81710
DFD89B658B85C359234F3AC011EBC316BE159A27157315BD6E0160A2C3DD6439
7B641CDFC7ECF1F8EBD862B8DDF93CD870B0EFAEFD6B5CBD7D9E28FF5> |
23774 <001C60D8A8C9B5EE3102A82E0AA719F0AF78F921891B7F700B0037116
A340EB43949B7989328342EAB53FA8B3DA49BB4D4E3C7D1D2BCD997AF5E401BE
A51679760AF9EFA58CC41199942DC328EB2BA15FB277DE6E0812B898DBCD74AC
87B98CE045D6FD4F0DB7B70ECD6F1B9D95135DF2522F47A7C25DD455CAEC1B6F
1034266A41DD6B86275D2DB09B7E9E51C8B03301EF07FF330EC6DD7B113F24E6
E1A7E4F5AAF00781B00EBA2C45B8EC400652588CB38EA2F3271F456CB0483F4E
FAA37C9289B0EE9FF22644F509BE483E997B222A628B84B41822CA5124546340
A51FD0BA7B57AF8072592FAF4A4DD89CD07FECE17A5A6F85BDDCBFA331AE6811
70D21EF3FA70704FD28678C03A0D9C536A25207B4377DB372A104E25AFD2E319
A176B5094C1735F06339872E304176C6E83FE7F212E9C32AC8E5EACA912139D3
FDF142DA4C558F85C4D7CD44A73992977C87485569597C9F35D04D0C377B459A
374A1DD4FF21B5F853BBA93834D83033037EFF87DB381D50AD789370768AA348
BD01EBA861018F560647BD80626530656628FED3DBC3A97FA> |
17983 <001C60D8A8C9B5EE310D039F4137A316D2D06654A5F1BA8BF075C0B17
BAD7B2614FA671F06BDB18DD52D009EA8BB1880288BFAF7AFE83ECE55519CA5B
1B7648701CF115262DAA85056AADB51D7ACF04E5F42E419FAB57A33AE5D4FDC0
FA1278C5BF5B1C9516436C71BB18ADE15B053B19087026912D19E58AC2055298
BB57A5C4E98E1B14F148626810C01570E9CBEF24337F69C74F48E083E50BB8BA
7AF0FCF5032642A1D4C27DF92881E108F1256CE8AE9FDAF83343824DC0505B6E
DF4D301504DD8F1410910902F2BC26A13E93D3F5AA56B6999F73706AFE536FAF
69978EE4DAD69434976F281C7BC38552444AE9BC360D4113F985F6C97F28DBB8
411C5A8F69DF233D9B3CB828E798A9869CB35CEA492630C9104A771808403861
D35DAD82D4AA34A1D379144A3603366415612DA572B4B6037C6B324E82E66AFE
751ADA7381788DEAFA9485DD5AD6AFB1656313D9DB71C252AE8A21EB46632BFB
AD7A31603372E1287522B0661AC1F3F31F88303C3742D9AAEB650C1D35D93EB6
B7BB8F99B> |
11000 <001C60D8A8C9B5EE310D0A5AFF28738D4FAA838BC56774D72EFE1419B
D91423402E3E668A284A4046816DA9866F05869A6EB0CEEBEE62EF12EC25CD62
BDADA58C225573BD8999B412DABC4F2EE7810710D095532950360324476BBA2A
34E884DF889632C4362A25EFE73184F7A1703177B55E5AB597799927E9E904B4
47C4DA6EA500646DC07CF847A11933F6A6A9799678F2466A62095BB6CB828AE9
778F267978AFC26B9F41F53616E924A7666A6DC4C410EAD6AC4EAD404524F316
2FA17AE81F1A968CE1C3ACFF548D53938572601AFDB92C1DE8462E5A7903ABAB
B32BC8A77C5FBA5E4E6C8753D8A9754E106844129570A36ED0732F04DF877BBC
32736DD73E19A5D61F87B38271A3EDBE2063AB5207326E419C2> |
11667 <001C60D8A8C9B5EE310B885DCE2F812D07A3C620807D36A2E8A6FE797
DD6D02F99128BD97737777CA1E9D8BAE20B5BFA1E371B77BB9996E4C0E66F2FB
04CF17E5D658548D931A1C43E7C78C5C3A499B0A57B5470BCD20C14FCD7960FD
37FA5E875781AF8269A58CC696B03D36F73985D72570D4A5849F06AF6B6DB78E
5364DC964AAE10C2DDADC1922235EF4F308C3956304BF1616DC8D209D024BFF8
4ADCD66EBEE733CD8DE1B756C27A7CB20C593DD498E1069306449AF4A3F32305
8D3AC29A70ABE4DE75967AEB6E0C010A734205F581B828286DAE5041DB3C8E36
B44012998C22F37E55C0DA0A48FC83C62537FDEB585A72CA50B5E0EDDD5> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-130.048 431.03 mo
(-u\035\023L&\\\336F?*\370-\223E\2034o2m)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
49.9721 431.03 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 1 GetGlyphDirectory
11557 <001C60D8A8C9B5EE3130B1C389BCFAF600896A6D8D3C52201EFB74077
B59E8D27ABD73606E8A0865EF7D20D5F4EC4759AE3DFEDCFBEACC6F80E91E3ED
A589E461F1A4E70582EC800B030327DA1EEBE4177D0A4CC67B8D53EEE769E59D
95A9CFE9FD6052AA72F2D321C0B78544D7B09B07AD358E062B83522AE3DB7B64
B7BB24AC5F0D4DF433B320A74D8E574D59EA3F66461AC838EB4F11261E910FE3
C52DFC20B98C6BC1248A920DDD261C7F5217A7C5E8EB319048A303C7F8B2A231
7DC42C5FB723F1BC813B2733EE2CF7C5BCDA852A151EFC4A8B5AC77DBABA581A
103AEDB96A7E5A799402F867A00DF95A4B77970C8FE7C837B8BB78443E6EE65E
08A642962235A17FB2FDACC2C44F0D74157C24F8FD26EE8C9818764D9CAE6218
F6D5B07AF293A48BC19F5DC28C7F21CB5C0B3CFF36C7E46D6BF9CD7B57A75B16
454957A15B2925ACA30A5DA8C3B08523E43A7E0BC6A2908B91BD7229C3ACD072
DD0CFA9F9F0B66AFC1638C15BE097C1499D8DA72784AEF7D6741BC8C1FD3FCE5
1E61FFF1EEB6623AD6D9941DE9BD34CAB0FB429780B13CE2B69039EF86B5C02A
96A461AF38FBBFDE6DE4013DCFC1D0D8FBD83DFA624C0F276ADB781CDCBF4DF5
F82D632383398F1DACBFCF920374B01EC71D155F5E79336D038763FD9E69ED89
3EE81E2E829CBC35DB2ECFB3C> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
85.8521 431.03 mo
(2\006\035\343o\023-%)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
157.852 431.03 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 3 GetGlyphDirectory
10891 <001C60D8A8C9B5EE3100859013D32B00C9BBF50222355060F1D802F2B
D2C798BED8658DC388006AC14DE8055839BE0E429C57C5A5FF16831B62AFB2EF
E489A1684B81B31F9FF818FBDD499350B550D365079CF58F9FF86B0737255F40
D758B5EB248B80F2C99E51C37729BC79F381ABDC2AE7F2EC6B16D2049EA88AF2
0BCDA921F9B66928FCA8907825444C1F724A6A7FDF0A9088A8830F2115CB3735
DCD066717ADC6D7F7AE9FE075BEE09AD4F268D403C3A647C5939CC191BE1D102
F7F74C9E9E158F5E9F670ED8B8CA8DF3F605220EA4B095FD5B4342C57F9DF596
C6BF72B21D627730399E420200B1D427B8CB9947CDD7D80F64180FC1338F7759
FABAA3EA38BD8D6DF41187D9CFE5809AB4DFEFA6AD9534D7EC4FD8A37478B076
419E18CBF08574700C1EB5FCA52180589543946B90FB601114DD9493E64B3841
D9885> |
24282 <001C60D8A8C9B5EE310DCC86BAA4A1C212DF0C1799B1FBEE2BD77A817
0AD3AC9658655C2E4ABC1CD30E353CC164280445E7E17A2E09D1F637A764AB07
A5CADF94642188C969B929BA3B36AA8E72A015A4202254202EDCA0E8C03EBDF4
7286A38F8F3A2C123B2DEBE3151BA80CEB42217BF9DD73E18F20A04B13C42D7B
36DCF2DFDC667323177848F98331BB1624BABFAC97E2AC5F56E5DD48B70FF43C
3168DF4B3D465B8338179CAE56A3D3F961F181B2D0384F71DF6593EC39752F33
C9C31D6F54CF2ADC0229FE677C4CA49D12038B80398E0E3709C38518750B9E4D
C184082EF5FD712727BF0813659B7A50ADC923903E1121AB4D5ADD02194BA100
62BFCCA7D2BAF0E3079E51E0730C0A1991B4D6344A9146632957C07942FC0BE1
D563F4A9FF3AED8EC6C3FB6AD76D1249D3045A7BD019A258A04273CB01755AE0
B80A0ACF4B9A19CC43B30642DFBE250A30314D154BF09753196507E51CB8A567
CA6402A55C7104E84C01F7649DC5948F5FD5F0EA8F6AF3D53C6F5080A75F2B27
419E459DBB6C85FA15361DA50E41F58BEA353C2FC17302DEEAD46D436F83FB99
557FB> |
22347 <001C60D8A8C9B5EE31436D1BB7AA05197A77F0EE095DA9AF38490003B
02E6901545FAFF928E9BE8B9586887BC8CCC6352D4F0386D987E6F884CF5C743
46EB1B955A55CC695AB4835999D5048BEE4C36E44637739B0EB814E153802EE9
F570CFDEC584BDA1C30B26DD68BA25A738A28616062118E7451B84D550B265EF
C0D68D04F6630FFBB598EC331CE5D25F523BF0867486E14174610340EF56A8B9
5A68A4520C943E2A7752D77DFB91F81E7C92D58120B28BB22DB837138D759914
60345FC5481C8666ADFE610B59B50F064212886BE6E84A946A6EED4D9DEF77F8
187ACB4316865F77229D40791B5014B5DE92D5F44F90D376396AB51822E2386C
6FCF98B69017ECC5C50096423D2E150D8E65B39A3D64864F8533B79F88146> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
193.732 431.03 mo
(2\006\035\343*\2131\017#\015^\332WK\035,4\254o\023;\2406\010g\234\(\025E\203)sh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
28675 <001C60D8A8C9B7FD84953D11880AD4F37B2510559D37A2059564A2CE2
E16A7500A94FDD66B9E5A19619AACEE642F7128DBE261B121C3C7CC16942981C
D231447F25C4534F5D376D352FCD328019825A63D60C00859FFDC4B610FDC284
CD7F0495A1DC5978D3ED40B7F14741A387BEC5E756DB50728BA11C7FAA4BE6E3
23AF5AACA5CEEA8995FF8194E08068A8A5E046955C8CD8BFE88BBA9F1EEEA2C2
A3AE2D93280F668321E4BB938F72F3C852944> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
463.752 431.03 mo
(p\002p\010p\007p\003p\010p\007)
[10.314 9.91791 5.72388 10.3321 9.84589 0 ]xsh
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
515.592 431.03 mo
(3+^\317\035\342\035\366\002<)sh
gsave
-254.488 514.91 mo
705.512 514.91 li
705.512 -25.0903 li
-254.488 -25.0903 li
cp
eclp
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28616 <001C60D8A8C9B78C66ECA399DB3215B61D1045333ECE760DE944D4DAD
58E494E9686CE6E0B7F3BE1F35A93B5423265BA3893C04B714A69913AF9D9779
23B3C20D3D2AA76C91C82C1C386A7D46DE7E32B075962CCF06380F2D2F2120A6
00588A3E6789AEFC99A5B99FAD22A2D4F5D95FBB7D27994C4F36761D753099D0
4D937122FCF22470C8A4DB2D425FA5D9B241F> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-270.148 452.63 mo
(o\310o\301)
[9.47986 0 ]xsh
grestore
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 452.63 mo
(o\326o\364o\377o\366o\263)
[11.1599 9.01813 4.03198 8.15405 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 3 GetGlyphDirectory
7590 <001C60D8A8C9B5EE310E2558C66AC2D9DF940F41B8487D1AE3E3657EEF
FB513424EEBFBFD61C9D40C7DCDCF0BB0AC090380A6FF8ED8022C35A20FDD450
15F2905828B47BDE6C774CFC7BD8323C57046EA0BB37D8F503AC27EE5CF47FA1
4650C64FA10F5E823FC14491483CC1041AE74B0EF5807124948AA2D651BE4DB9
43B244C999ABC19F0AFE516B1B622F97598D807145942B0D4F9F26CF2425AB90
F2F88D9786CF9026DA92750CC29ECF2B08A10CA8515D8955CCF6931DB7072B9B
6C570F281FCF5267C3AFFCC842B37D9F60FD82B2B716B4> |
17438 <001C60D8A8C9B5EE310D2A2A10A1203C0532C59A4242FF3B010F89AE2
E27330FCB695C5C42C1F54DDB4BE260CBBE8715B851652C4F7FB0CB4F8F265F3
F86FE5405F33DBDFFBD0CC991235222C2A8311506A6408B9F8E3302541776813
DB791D1D301B425A7109E1BEEF32E6F66D2CE03EE82369FBBAE094B498FDC5B4
53FF05507A5ED1BE0445216501FEA581DB6AFACD53BA7101DFDE0E3BAEB6F895
809202B58E06C3F4056B944AAD4AB6C83DA015158C9A2E1683891E52209EE582
5D08CD1E42CF64E2DF8779A89B50FD62009FB2B9334A48A51102EA4A39BA7EB2
0BA14BCE1738A224C521F2F8822E5AE221684> |
19948 <001C60D8A8C9B5EE314258F840DEDCED1C90B29401F3C158031FC698A
5D3CF52F1C6E3DB078B4CBDBD963F78FCA389DCDE72BBC712AC180934A266180
999940D10FCF408CA9781A88B31A455A9B1F49F188D997DC9C124D194888B706
1721898538BD264639B65753ECB4E3C5C803942855B88A3985823F4FE6E09BDD
FBD1788A9FA9AA03C4F25B292B391F5C0D58B732C9E54F5C0D3DD15838C78E34
C1DFBD7B93C95248E734CAFA7FDBB9906FD3664D2D36E1D9ED64267C292A56D8
B9C2FA7BF789CCD7D339874BC2A49A11BF38E536BA4E84FFE0D04D8F29BF733B
CD9CA297C2A7D10AFEF48B68D067A6EFA6626498CCB6F6D15CA1209019968604
24F362AB8D927DFDDABB8053C1EFFC39329A64D1D82FFF2E1D81E0746750CA7A
3E29CC4C43B6670A051A993194CD2F6642A5E09BDB638FE1392FFD3D6B8AE1D6
EFFFD9B3E5D9B36852618989CC58355076EABC455AB2DEB1A95DAC11B2B58088
559A3425CF85A8F528E3F23526209C839293D2A2F9C628A4AE39AE670025FBC0
0DF8607FAF65A57C1CB9142F2165948A23ED4C1D0686CF4E7B26533D5658645F
A3789394C8037EB8B1EB5E5BFC291B65F1539C33195FF3CE66C26E770007EFB4
E3690399EDF50041C8171EF93FF6B41F1F12D8735B3836CD45593E819BC462F9
187578DA2CD776EA07A283C14F00B2387EDBCD99A9C2D54CCA65C4311529F071
649632B08E393DC0AA95EDDA763BF17CCED9E7F26DB4DD975BCB186E9DFC1A63
CFECA4103673B59E8B65AB6F9A7121B6D> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-206.008 452.63 mo
(5\377M\307M\3226\233o\023\035\246D\036E\203M\3226\233&'#\015M\354E\203)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
46.0121 452.63 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
81.8922 452.63 mo
(2\006\035\343\035,3+%\335)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
171.892 452.63 mo
(o\327o\327o\345)
[12.3601 12.36 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 1 GetGlyphDirectory
12681 <001C60D8A8C9B5EE31008CFBA5A6084080B3BAE7D95D5D2D900FBFC60
FCE03C76831142F5FEC2859D32DC56266D5DE6885F35AED785071C3494278C3E
B017EA243F22B22DCC9AFEC0276CCA8337C833B36F0FC6E96B12A5F22A89DA59
20FECBC43705877FEF6AE689E206551704E0E6C667B4D6D82FFC577AAB327277
B4DFB5CB6E63CD28967F1A4FF1B03A7ECA99025DD27F2DEC9C785D30761177BC
F756CA603BBFEA271C4B4839C8F586BF8B3671B31A53050D5B60BDC5465FD9A2
C2F7097D153DD6C07373A830E8E2BAEDAC979EB03B0082E41EEFDA6569972708
50F550B6B149BEAA643CF0B0985234CE8B355A80F6D96F6C7461BE8006B77FEF
ED9CA4C07EE98E53CC86ECAC456132BA04D5A1A4C7713E235B200E40C2287679
D772223A9AEA6C7D2DC8582F463D08D7572A4A93742316512841E9CD8B3B854B
A34DC1A3E9BB764FDE0FD452134B2DBFD01B08FEA7080D2D32E3D820540C2899
C2A98357AFA8F> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
206.992 452.63 mo
(o\023e\377X\2001\211#\015M\354E\203)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
333.012 452.63 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 1 GetGlyphDirectory
12741 <001C60D8A8C9B5EE310220D09DA43DB9BD75094F962E4A0B41C89AC82
C90592AF18E0373A993C050AA6BE8FFA1758B7F46EAB6A25A614D764AE4A2AC0
8C7F2183B4ADCB5A9A002D644237866C31125CEB4500CA6F2B94AFC09CD5323D
D627F5D640C41585229CCA993D52A9BE605D607599FBE460B549973140BAC323
B18780ABD27F5FF772EA1985910AB062F676024A7593E49FEFE9EF5413385CD8
58150CDF416BB0EA902176ADE8D8BC1885FB44C90BE32DD557A2DE856145D627
4D4F5165A4CE54C44251E08AF759FF31EEE0F50A430F2FF0028B6632F7B48F7D
958B73FAF4A8A3B5D075E32D2A58B9AE5C4DFE723D11BA7815D9A743F1182C80
F48341EA611176249842B69D9626FD221F931EAE5C7E5AEBCDFAA3F6E3FEEB40
195BB05F97E348985FA5B755A4271E6B0130C4465EC24D2419AB3C86D7CC15ED
09B510402296276BE3B80B87DE0DFBE67FBF693D6B04200C23100B94A243269C
89F7E304819EE48A5EA055B1C754024AAF9B0CC4B370F7BDDEA2071450104FC3
B17D8770CCD7DD1F690> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
368.892 452.63 mo
(2\006\035\343^\332WK1\305!\005o\0231\211,\361M\316Z\240J\226 \371E\203)sh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 8 GetGlyphDirectory
23215 <001C60D8A8C9B5EE310D4063FC8C2AC9CEC8A60715CFD3BF243C456A3
336A640982FE3E8BA6E2551A84D7028D22132D9E0C850159169F5F43FFFADE83
AD2E8C8A5E78DA081CDF183DE53B70460092A46B51670CC0AD624A76EF976662
2430559E777637EEBA25179F5878B889FACABF30FC6B2A2B39B48B3B72916FA2
5CE18EAF26C5BAF7BC3FE18E7AA091D356C25578A2C1E5F013EAB64A11996C3A
DE8280D95DEBC0E38C75E586F599CFBABBEBDBB65E1951D3DBBB57BC78D63660
780817D1353F1ED4A7D9A4384A1D76C07C4E41075BD5E7CCCF67DB58142C72C8
32209F8836082C20C6AE96C65CF0D4BC15B4A928D9E5F9A81BEF4DC5090485ED
539D52443823BC0BC1F45AA491A8EAD0848A6B1A0C764DE4EB4DED3DB> |
11860 <001C60D8A8C9B5EE310D2DB1746F6790DD5DC0B00B8F52A8450B1155F
DF8A88719AF1107B7B0059C0784037F83CE4817B60799EBCE270702F41B53F57
D0A9D8D6A75939A0A81142A904A5ECD59F1A8EC1F46EDE536BB56891D287DFA2
5FAE18DC5FDFAC86F7709B558FFFA8A84E2992A6DAB0301B92809F92C6D1C08C
CC5C9423A0B9EFD9137F75374C32FB650B17E913C3D02E5F40E795148AAF2E7F
4576AB3B6F12779534BF537F9EB37BEB94E4C9EB3A9317D5EF0E04F69C415A21
FD53733FCD98491F171A0B38674536FA5D5206E59B7958784139E902785F900A
195E0422034D16CB38A072D46DCDAD2029396C6AEC76A3121C88D5EA74C1DE7A
4F68096B412FDAEDCE68DE6132976CA6AA484F28443CFCC52DDAAD6C1C8F739C
4657185751ABADB526F02643005AE0955FDEF> |
8372 <001C60D8A8C9B5EE310D073028A205D8E40F245347C132FF8A3C6E8320
395B44E78D559F6A47784EEEF44B9CC72C152DE5338150FF147D2CB3DB769372
6F1300BC5D5E16D44BF7FC052C8C953D94C8C97FB8E4F232D5DE828F97E73613
45BEE2A29682FE8536264E426CAF8A8DBA91EBA0CC48208A5C4D0ACA3DD80E13
96E29C79135FD4C75B7944E9CD78CC5517497C65D847AF43F4BD937BE5A7CBA5
5491937AAE9ED418F1D1686D7001CD1A13FEF36AEBF2C7AD5A09B211351E9393
AE9B46C1119FEBA2E4B7A8E4EFEC7639E898E12BA3C65125AB1CEF92E497ED6B
8433F819FE66C203AC543D1843C224D4966A9FE73547DE078E0856C4801791B1
1925426DB6385269832855AC91C3> |
24262 <001C60D8A8C9B5EE310D37A0EFD25D101DED458C40EBD5332403B3E16
542A23671E0CC44E9D881C06031DCC0FC05386E46B19E97F9D9927397CAEE448
2BDDBBAD798243CA2DD311407AD1BE212053AB8351E7A8E2FD524EEDB2EB0D04
B5C7601254A31CE0B0A340801F42D09995D695FE236F663D2DCF4B9A171ECFB9
F0947504AA216D25C6171362E2EDB1853D45F66AB385EAE777B0BEF1B5835366
D369D12616F754C5CA2F2020F659881B5B3319230489FB545E46644A781C991B
2E6DCE2D14AC36297818812EC803217D904FA5B7246314D4E8D8905B5A67FCFB
3659C6CEAF7755B8695F00696C122E2170D34702928118E41B3A621170F35B78
1032E79197838A50D930408258B093381052EBA802428CA0D96DEF8031F96736
F457E3E701EA6CA56FDC1F580D886AECF3445EC86D17C92C05AD042EC0D12570
EB977D35D52E396D9DB4AEADB844D81B4A549E9FD1AEC00113437E8CFC72214B
B209ED9> |
24390 <001C60D8A8C9B5EE310D1EC9085A5FD21D2FFE00CD273DBC29BB57687
2D774BE755A84532733A05C707A708C7DF8F72B0ED63542542FDDFBF49232FBF
A1BD1EF9CBEA9423A90411C11061E6E2FB5F883FB6AB58EAB19CC9E3E189DC20
848A36552C5DE7074A02DC8A0EE0A2FF7E9ABEF252D17D8EBC1A8EF40F89AFCA
936CA012749A9F73436BB84A3D2FB4A24659122C1CE6AC246117919A5ADD9D2B
5DD17813390DF7D8ACCD87C61FD80CD4E1F3335928B20AC494AA648FD37D24EB
7C9B4D45E898BFCA3515867EFA34983A39A3BAA268566851E07C05F23822C529
1E9795F53F68A4AFF596BA075BA2DF9571703DB107D829F586264E16E08E0ADF
F93D030A16201315497C6E0D2606801C242F35F0473729488A027BCDD2E59FF9
54F5B9DD9C6B9B9A89F6550CABBFBC2EC1C021ECA9C877ECAE4724FAA1ABCE8B
DFDA503E087DACFDEF89F64E741BA230C48D9446C779B8996701DB424DE56A01
D16660889DB21E83382BAAF90B8BE70137A331E61CC91B5F90042670617CA286
490C9A5541BB1ECEC39F6FCD609528D8EF49E56DAC4FC8F7C6D7D0C76607A791
9CCC8CFC81226BB403E4FD6FF011121E106CD78C6246D951A3D16FD37C566650
CE4AC2383204EE8D22805DF08CDA4FA9F1E6A9CEAABCB1F362F19E173F35B079
12448862ED5EEC3CAC480C496F3C706> |
8495 <001C60D8A8C9B5EE313BA5DE6930DF9C0EC60B463ECAF4E829B6C4A7A2
C030A612177AC5195BB358BF63DC2E94E727063830C514C9BE5FEC73DCEDC923
C780BA0D421970B2E6EB957669B21263FC7052E8D595E09F4E97090F5865B129
298B2F76F93D02010E91F97DC7B852BDFB75BD8C00E83C1A42B15E094A4B1E78
CED402E23E5B28684D3B1DEDAF30F21B90334D8E2E7B59DEF6DFEEB6B9285C51
107F976F7DB7A55AABCC4B381376E43F554EAB4136929B721D6C756592BCF96B
0A1B0A565BD47866CB7E6EA161E058A2DEF6CE888DEC018A24C5BEF3DC6E8761
7FC06441A386F36CAC77E13FD067A6AFDE4D7567A5DFE824FBFBCC84D41FF60E
6E3589DD353FCC2A1573C238E548C14B20EE518C3A81201F3E6D77211AEAA16B
386F4D6FD6579BFD2793D9512B57F55BB26B73BCC83941EF4E8C6BA38B914050
CE90AB49FD0FDC474BBBD442EDDDA12504E876DD41B07AC704A74D4E748B611C
CB628A6647521859B8DA754C1F013CBB0A37C40A59D7D100BD2D009B171596F8
B61E7D8ED9135AA96CA2C39556F23F8A85FB751AC354715E85AB967422EC073E
F81527612B> |
14946 <001C60D8A8C9B5EE310DB013CF8AC38767F0738B4A83AE0BDFFEC8AB1
B78C477139885F63AC6B8A307ECDE0C0FC0F46BBCA1B333A716583ABDC8A94A9
4326BBD812F0701891274D8D0015D8B486F813A98A756814435A70C591209BEB
81C2F5F10647977E13C9764EE1F72ADBAA9FAFBF8CCE9E04489FABF8B563BE65
7D0FD5BAC734F81C2E3148E5D13754C08EDA28E0C6BE45135D28A7D37935A46E
26EBD6F1D94968F89> |
11575 <001C60D8A8C9B5EE310395E4964F33B10C89400C6685AE1E0A1AB36FB
CF83068477A683209A3B91CDD636813199B54625502B0DFCEC1BCA62AF8E2935
3ADDA04A0236D6F6AB3D41B8996CFAB84388C2587E18F6C7B66EC3245FB05AC4
B6943D635643AEEBF164DDF988EF29431CD60F2C94DEB576472BF34961E1189F
B51AC571AF5B6C15243EE967A8DBED71B26B7E7F2D5BB0B55AC477F9657C1A60
BCE2D164B0FAACB7015A767A8EA0B0DEDA1D136858C85525B1852EFF2A239035
53500E6E24D7456E48E558F0E9E9342DDDC99E2834E7F211A6B4BB12BDCC6F12
8EDC91F1BA788F0621C54EEB8E0A58C7A25BC3F30821E7C077CEF2E0062BD908
4D5286B0A6453721984C484A85331BE4A658E9746E9F1EDEA8FCFD08F997DE1E
48FA34A4FFA384A0EC0A23BE2E4A9929711849C96D66F2C761634E7275826376
DDF1E3814A3B4E90A0FD63E6A2141C64BA895455EB6B79BCB45D70A7E4EDFA0E
07990E1F368E07D22F84D6CEC75471408608EC704D85DF90F234250B4676B4CD
3ADBEB51B010A6BCBA964BD9DA26B4F0E9872BBF96F6AEDECC5474292964EC8E
4D9A90EBE2DE21D5AEB4C08BF78DFEA1E4D5DED230251C89B0A86363FCA5A983
28A7D3768240C> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 474.23 mo
(M\3226\233 \230%\335o\023-uZ\257.T^\317WKA\265 \264o\023&'/a\(\014^\306#\015_F!/*\370-\223E\203:b-7)sh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
206.872 474.23 mo
(o\346o\364p\011o\370)
[9.25214 9.01813 8.38806 0 ]xsh
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 2 GetGlyphDirectory
11949 <001C60D8A8C9B5EE311CDFB10CE35E286BAE06983800EDB4B398553EB
D8551A9B8D0AB5E292A8354602DF24322DA01AEA23D2D2CF26E64F3F8FCF23A8
1F16E426845CE8F705EF7E99C6352D3ED51C4D252C3572CADC034D4B28575F1C
08308DFF0D6DD74485F1BA96B27C1557E4A5D9307E97825B10AEA600C757FFA1
47B366D496DEAD2806A39D3C5574CCCB97223975C55FECF6629B2108169EED05
41CD7507D72172C720A315413A0E13610380110CE5834E379AC60185B0549BED
314C73C207DC465FE2391E9198606BE984E66C0C5F8771B60625129A45636968
5F30DF190A11D6D4897143D3FB36990B85458ECAE29426E6C19CB9469C3B3260
6B2693883EA887DA6B8F2CB876F5481E255A4A537FD9C5C1A67B9143FDAB08BF
D68987C3721C1A33C1605908BA41DEB09DADA591FB929F0507DA84EDB1655CB0
D8B52A5C975E22FA7D77F9A679FFB8E80F52B0F50BC8AA6E16FF61A14527D93D
35FBFFD72DED440D027481136934E6686D66F484CCD1A58082730E8D84027CCB
3516BA890C5CD7EE3692E5811D90F7EC5AC1202B1BC10F2A97E6478511558895
BC805053B412E029C126EF0022F2E60A616962E6E78049C9F8448CDB95DC29AC
2D19C161A7E8AED7F7E671CD3EDC88CE6861F7C239346A06045A9E021C7A48DB
5D811F67CE78A458AFDA46D1B3620BC9B8CC513ECB6626700DD7CFCE4F7A97E0
169A91A7C044A2905453AD9DBF8C2EB20390D1D1AB9B370FF19C4E5740295EA9
AE2FFF8F41773677D5B251B13DF23EA3FC5A004A66A725558444979A50022EB6
A374269622287645D032AC61766016F2C> |
23298 <001C60D8A8C9B5EE310DF81AC9961CA19866EA3516BE0C9A0EF126395
73185E7DA99A3AA31AF08A43C9F106F5B3B4E569A5D188CC948735300262B29E
DA969F38C58D185550D2EEB2C24EEB5B44DA210BF54346821BB04786E42D7C4F
005456EE4FFE5F0BE45D2C3821CE8731906391E2CC2722C94B1033BB8F5711BE
460EAACEC86902AAD27FEF72BD6D44976B2A9155FA0D882AC44CAC32655C9F80
637D0244D26471791D2BF8932DD9B3C983684C7F4B785D959BF801299F1E1781
B2B808D48F0FD40FA37A9EEEC6802B41B178665C6E04C8A764142D430A9E3DAA
82A9C0F2C38BDD3D9421B350CA3986066082371EBEA1F5F225C6684F26A2C259
7F10303BDC2567704264D6D8E9274F78026B6A05B0800A5EFC07313B4312F6BA
BE7C2BC6DD38615FC491CFA4DEC5E0D633B12C405C0B3E85F90E40B0BB939E1C
509B5E0BB280A17FBA5DC99298DB056FA3A960065C4CCADB613CCE6F5F321E59
3C908AC00923914E13ABB32D7B404E7BFD2EF9F0133027B3DB15FF21D0F0F30D
ED2DBADC1F930EA53EF16F4A93747B483FEBDB3793753A97C117A50BCB5277EC
7132C1D8977CD0E03309EBF332F6387DB8981A130BE1CAA64F3233E> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
242.752 474.23 mo
(2\006\035\3434\365o\023*\3703+^\317E\2034o2m^\332WK.\255[\002\002<;\2406\010g\234\(\0254o2m)
[18.02 18.0201 18.0201 18.02 18.02 18.0201 18.0201 18.02 18.02 18.0201 18.0201 18.02 
18.02 18.0201 18.0201 18.02 18.02 18.0201 18.0201 18.02 0 ]xsh
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
-243.148 495.83 mo
(3+^\317-\377c\377\002<)sh
64.8322 275.73 mo
546.092 275.73 li
546.092 276.73 li
64.8322 276.73 li
cp
545.092 273.23 mo
551.092 276.23 li
545.092 279.23 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.770321 .559594 0 0 cmyk
f
67.6122 284.66 mo
67.6122 55.7497 li
66.6122 55.7497 li
66.6122 284.66 li
cp
70.1122 56.7497 mo
67.1122 50.7497 li
64.1122 56.7497 li
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28642 <001C60D8A8C9B6E80D68E03F163684EC4CFF5B1EEF6DF5E6C0C3B3965
3F13C13CE1F9B1EFD11D8817083534665198FD8830755391BBD258AD06368414
8BCE694325CCB6582AB71438D34BF1DB6F8F84CBF3E96B7E66DF6A51951334CE
EC24B11F525BCDA1134AE76B7004670D3BA41F6CCF50687AA283B47E1717598E
6C196BFDE21BC56DB38BA07A7DBB4FEC1653BE0BEB641260387BEF1BA8FE1> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 36.7297 mo
(o\342p\010p\007p\003p\010p\007)
[12.1272 8.82693 5.09427 9.19556 8.82693 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28628 <001C60D8A8C9B67106DCE06030CC378319F03DC2A59F29632BE590439
740FEA1C4E5B4BC8EED41D08FA67DA3FCB2D66CF5A13D3B752F6A4FC2E722E73
0214184A0DABF55E8F1F230E6A7308577D829465EDDDAFFEF> |
28677 <001C60D8A8C9B81947031993F366B7797E01770F0CCF402A3810F4860
85B72DA10BE6CC101E91F1F1C8B8F646643C5A8F34CC08EB50A8A38B409FF70F
C08890288922D85661D7A1EFC0CE23BA363CBFF61764B> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 55.9297 mo
(o\324o\367o\367p\005)
[10.1888 9.19556 9.19556 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28647 <001C60D8A8C9B7B5777CD30EEC2706247F18F2EFF0FCD8D1B2AAA4975
E3C181CDDE8> |
28672 <001C60D8A8C9B6BC88CCA209E81BBB23118C1962F78530A6D2B1B22F4
C42E1E1780F3FAF3BA4D143D7AB9094600FB0A392F35595463AF65F814F8CFD2
FA68D1EBD08F24F882D398540EABDE5E14F3ED20707C55D17AFC142A349177EF
446C8B5CD5246C1A25D9E29ACD913B3DA4DA32F40D6AB2427E526FB3DBDEFA1C
762999B6CB00C8AB4BD2941F9E463EC30C1D40E11263ED534E30DB477FDAFCEB
E27BF40CE00> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
495.452 272.67 mo
(o\347o\374p\000o\370)
[8.29846 3.58844 13.4729 0 ]xsh
78.3622 254.9 mo
138.422 254.9 li
138.422 217.58 li
78.3622 217.58 li
cp
.770321 .559594 0 0 cmyk
ef
1.02 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
78.3622 254.9 mo
138.422 254.9 li
138.422 217.58 li
78.3622 217.58 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28610 <001C60D8A8C9B7212E9A58E2DDA81747ED27CEEC2E27DE2A6B> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
92.0522 233.03 mo
(o\326o\324o\337o\326o\302)
[7.43994 7.63202 5.56805 7.43994 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28621 <001C60D8A8C9B89100E2949968BCC9C9E907541FC50440089A34F51CB
B41925106> |
28611 <001C60D8A8C9B78C66ECDDCB4A31B71CF1B471418D658A1BE1B520F02
65AA7AC34644C5EABA639C18B14B6949B9B765938D8D07FC6BCCB4CE1CD5D830
F911203004567794A3B4AF38AF2CB559D9D9F05F95F1CADFACE76DFED6FDC69D
44D60ACDAF6EDA57FE4BDB361FCFCACF73865443A9663D673E91191E89511BF1
A6B0ED83D875E207CDA526DBC> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
86.9521 247.43 mo
(o\337o\342o\324o\327o\315o\263o\303)
[5.56805 9.08405 7.63202 8.25604 2.62793 3.28802 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 243.95 mo
(o\326o\373o\263o\303)
[9.93231 8.81107 4.22931 0 ]xsh
370.622 165.5 mo
432.422 165.5 li
432.422 131.36 li
370.622 131.36 li
cp
.770321 .559594 0 0 cmyk
ef
370.622 165.5 mo
432.422 165.5 li
432.422 131.36 li
370.622 131.36 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
385.232 145.23 mo
(o\326o\324o\337o\326o\302)
[7.43994 7.63202 5.56805 7.43994 0 ]xsh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
380.132 159.63 mo
(o\337o\342o\324o\327o\315o\263o\303)
[5.56805 9.08405 7.63202 8.25604 2.62793 3.28802 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28617 <001C60D8A8C9B78C66ECA5FCAD2AAB40A4192A68649CE4047E4AFAECB
7CCE984F38B8B50E6233F27BD605D687743F24A7E136BA1908054D9AA8AAE8FA
60DFE236222616415444B0B8B81E9B590E20EC5E2AE4CA73CFE760E5978319FB
10D6E85D90B0F0670931F7021C1540F7F59AF2F4001DC35F63939A901107334C
C707991D976B1159441A0F1ACA86EE9A9885D2AA13CD06CBBC97DCCE8B0B6519
440F899D41BA7449252C8DAEFBE21085C577DFAE8E5250EB7438F2FCF6755F16
B841A2282B2> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 149.89 mo
(o\326o\373o\263o\304o\311)
[9.93231 8.81107 4.22931 8.44241 0 ]xsh
418.022 113.84 mo
475.502 113.84 li
475.502 79.6996 li
418.022 79.6996 li
cp
.770321 .559594 0 0 cmyk
ef
418.022 113.84 mo
475.502 113.84 li
475.502 79.6996 li
418.022 79.6996 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
430.432 93.5697 mo
(o\326o\324o\337o\326o\302)
[7.43994 7.63202 5.56805 7.43994 0 ]xsh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
425.392 107.97 mo
(o\337o\342o\324o\327o\315o\263o\303)
[5.56805 9.08405 7.63202 8.25604 2.62793 3.28802 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 102.87 mo
(o\326o\373o\263o\305o\307)
[9.93231 8.81107 4.22931 8.44241 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28619 <001C60D8A8C9B78C66ECD5488D579047B239C54C624A020C31F1826B0
F16C5909608B14476F5A930293AA6BE740A4F5A140DFDDD4E0958C1A52E4FBF6
BA81B0D638051C0E8D1E2D2009555C79DF5EF428E3AB8105A28DC840928CB64E
D9EAFFCF7368A493D280C274A8330D43887F88981244A989D0ACD146FBADC503
B6AAD299C122524F4F9A4E1BD3F87EF997F6B2BDF74FADEE69B2E551CD72B9D1
72C9799A7DDF4F816AC1A7DD7ADA9B720DDF8501D420670D8354A38C2F839B67
C321B6B8AB70310D30EBC4494DD1896C85773999A629B4EBC26C918FA7D75D61
700FBE81143935EA816370E8F4BE4120DA73EB73559368A2975308988C646D81
DC1> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
13.5321 196.91 mo
(o\326o\373o\263o\313)
[9.93231 8.81107 4.22931 0 ]xsh
130.262 207.86 mo
187.922 207.86 li
187.922 173.72 li
130.262 173.72 li
cp
.770321 .559594 0 0 cmyk
ef
130.262 207.86 mo
187.922 207.86 li
187.922 173.72 li
130.262 173.72 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
142.752 187.61 mo
(o\326o\324o\337o\326o\302)
[7.43994 7.63202 5.56805 7.43994 0 ]xsh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
137.712 202.01 mo
(o\337o\342o\324o\327o\315o\263o\303)
[5.56805 9.08405 7.63202 8.25604 2.62793 3.28802 0 ]xsh
477.002 256.22 mo
548.282 256.22 li
548.282 79.6996 li
477.002 79.6996 li
cp
.320043 .208255 .120333 0 cmyk
ef
477.002 256.22 mo
548.282 256.22 li
548.282 79.6996 li
477.002 79.6996 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
488.492 173.29 mo
(o\346o\364p\011o\370o\315)
[8.23438 8.02618 7.46533 8.23444 0 ]xsh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
528.392 173.29 mo
(o\303)sh
190.142 254.9 mo
244.802 254.9 li
244.802 173.72 li
190.142 173.72 li
cp
.320043 .208255 .120333 0 cmyk
ef
190.142 254.9 mo
244.802 254.9 li
244.802 173.72 li
190.142 173.72 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.04 0 0 -16.04 0 0 ]msf
201.512 200.43 mo
(o\346o\364p\011o\370)
[8.24469 8.03613 7.42657 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28633 <001C60D8A8C9B75E5E15AFD6A09866F0491F1027106958A942351926A
12C16CC8CE102375270AADD> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
206.372 219.65 mo
(o\331p\002p\005)
[7.64163 9.17941 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28636 <001C60D8A8C9B875744C21AD59FDCBB2749B2268B75FB3> |
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
201.752 238.85 mo
(o\334p\001p\007o\370p\005)
[3.95685 8.81104 5.09427 8.23441 0 ]xsh
245.762 254.9 mo
309.662 254.9 li
309.662 173.72 li
245.762 173.72 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28635 <001C60D8A8C9B62823789F8A7672D012CAD2DD32D012654209C5EC2F3
24F864BC7BD9473B841A0850D77AD0FBF> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.04 0 0 -16.04 0 0 ]msf
257.332 200.43 mo
(o\333o\374o\372o\373)
[11.1156 3.59296 9.20703 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28608 <001C60D8A8C9B7A73DB6A60276D55D01F153B7D96DD64C> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.04 0 0 -16.04 0 0 ]msf
290.032 200.43 mo
(o\300)sh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28684 <001C60D8A8C9B747CAEFBC26A39BFF2819386B8EE1586C3CAC86C70F1
BAB44FD74F44D22A5C5DC757A66F0816E2C4932FBAD1CE3F09292C0B35BE69FC
446316A805AFF5DE4C4DCF6EE1023C859A9294B67999444465B2E58797F793D1
FFD7BE16AE4CE582B1E52CCD9D1A67897C4BBAC9E8DF1> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
253.192 219.65 mo
(p\003p\005o\374p\002p\005o\374p\007p\014)
[9.19556 5.43085 3.5885 9.17938 5.36682 3.58844 5.09424 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28670 <001C60D8A8C9B745265EC238AF683B8F4A353D25470A8B72A26DB7844
3BE3B1F44B4CA272249F727C6F8216C093BF16FCF6CA661AE> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [16.02 0 0 -16.02 0 0 ]msf
262.492 238.85 mo
(o\347o\364p\006o\376)
[8.29846 8.02612 6.50421 0 ]xsh
308.822 254.9 mo
370.622 254.9 li
370.622 173.72 li
308.822 173.72 li
cp
.320043 .208255 .120333 0 cmyk
ef
308.822 254.9 mo
370.622 254.9 li
370.622 173.72 li
308.822 173.72 li
cp
.923095 .755032 .159182 .0290837 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [14 0 0 -14 0 0 ]msf
324.932 202.17 mo
(o\337p\002o\364o\367)
[6.49603 8.02197 7.01416 0 ]xsh
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
321.452 218.99 mo
(o\334p\001p\003p\010p\007o\302)
[3.453 7.68903 8.0246 7.70288 4.44556 0 ]xsh
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28650 <001C60D8A8C9B5B548D2EFD0A9ED56EAF070A7FF069B060919C1C0A4E
72F395D9C48BAA98435BFFCA96D4A3ADC67E9E8FAAE63166AEA6A9D49D0911B9
EC81397D5DC0F1EBF7BE8A29E8F53DB1850EC067158195238B828892A6190573
0B4752BA46F53BFA297956E26> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [13.98 0 0 -13.98 0 0 ]msf
318.092 235.79 mo
(o\352o\370o\374o\372o\373p\007)
[12.7916 7.18579 3.13153 8.0246 7.68903 0 ]xsh
261.272 281.21 mo
294.032 281.21 li
294.032 271.19 li
261.272 271.19 li
cp
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLV+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLV+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28694 <001C60D8A8C9B62E09DE67EB61250D9A06B79A926C16A2D37591A26AB
67078E700175B7B58EBB0E54E50> |
!
end
end end
%ADOEndSubsetFont
/UKGMLV+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
271.412 282.25 mo
(p\026)sh
.48 lw
265.892 266.51 mo
256.292 281.22 li
.770321 .559594 0 0 cmyk
@
299.912 266.51 mo
290.312 281.22 li
@
146.872 266.49 mo
146.872 213.19 li
145.872 213.19 li
145.872 266.49 li
cp
149.372 214.19 mo
146.372 208.19 li
143.372 214.19 li
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: UKGMLW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/UKGMLW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28676 <001C60D8A8C9B7FD849FFB33A190BBBCCAB98A3FF3A15766A7C6031DE
4D0266652A6F79818870B61B135B5F3EC6EF415AC9A810D6CE9F402D905BBED3
2C041C4A6BD802AE756F3A54E3C898C3A5E51A516D49B1849FBD77C2A04985FB
547C8FED6BCDAA9A7CA3A2BF9C6F0E7D248F6462F432F0CFCBC9D26F1D18A548
C305F6F19780C22845C6F75CD51B6AA725DE17CD395D3CE2C0228040418CB68D
A8A1AE016BA892C15519C5B22DD5C510C6FCF69FFA26ACF> |
!
end
end end
%ADOEndSubsetFont
/UKGMLW+DengXian-GBK-EUC-H-Identity-H findfont [12.02 0 0 -12.02 0 0 ]msf
129.592 271.25 mo
(o\334p\001p\007o\370p\005p\005p\010p\003p\007o\263o\345o\370p\004p\010o\370p\006p\007)
[2.96887 6.57498 3.82227 6.17838 4.07483 4.07483 6.62296 6.89957 3.82227 3.43774 6.93549 6.17838 
6.89954 6.56287 6.17838 4.88019 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/UKGMLW+DengXian-GBK-EUC-H-Identity-H uf
/UKGMLW+DengXian-GBK-EUC-H /CIDFont ur
/UKGMLV+DengXian-GBK-EUC-H-Identity-H uf
/UKGMLV+DengXian-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
