%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: interuput.pdf
%%Creator: Adobe Acrobat 10.0.0
%%For: yujin
%%CreationDate: 2019/8/16, 18:22:17
%%BoundingBox: -1 0 893 406
%%HiResBoundingBox: 0 0 892.5757 405.1786
%%CropBox: 0 0 892.5757 405.1786
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1068 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® for Office 365"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® PowerPoint® for Office 365"
   xmp:CreateDate="2019-08-16T18:19:55+08:00"
   xmp:ModifyDate="2019-08-16T18:19:55+08:00"
   xmpMM:DocumentID="uuid:C410FA99-BF86-417E-AC76-DB82472D8479"
   xmpMM:InstanceID="uuid:C410FA99-BF86-417E-AC76-DB82472D8479">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">FPGA 中断以多任务执行</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yu Jincheng</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -405.179 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 405.179 li
892.576 405.179 li
892.576 0 li
cp
clp
gsave
-.941204 406 mo
893.059 406 li
893.059 0 li
-.941204 0 li
-.941204 406 li
clp
-31.9411 540 mo
928.059 540 li
928.059 0 li
-31.9411 0 li
-31.9411 540 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
5.61891 94.04 mo
5.61891 88.76 9.89891 84.48 15.1789 84.48 cv
90.3789 84.48 li
95.6589 84.48 99.9389 88.76 99.9389 94.04 cv
99.9389 132.28 li
99.9389 137.56 95.6589 141.84 90.3789 141.84 cv
15.1789 141.84 li
9.89891 141.84 5.61891 137.56 5.61891 132.28 cv
cp
/1 
[/DeviceCMYK] /CSA add_res
.415717 0 .387854 0 cmyk
ef
.48 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
5.61891 94.04 mo
5.61891 88.76 9.89891 84.48 15.1789 84.48 cv
90.3789 84.48 li
95.6589 84.48 99.9389 88.76 99.9389 94.04 cv
99.9389 132.28 li
99.9389 137.56 95.6589 141.84 90.3789 141.84 cv
15.1789 141.84 li
9.89891 141.84 5.61891 137.56 5.61891 132.28 cv
cp
.732753 .0580758 .214054 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PILCGW+DengXian-GBK-EUC-H)
%%Title: (PILCGW+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PILCGW+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28649 <001C60D8A8C9B7D7E8DC0A8F59926D729E6EE4D734E5A5AF737BE16BB
0E38958D10F8202854BDCA8BA9BCF0F321C0DDD8EF7643F3C3962AF09B1> |
28642 <001C60D8A8C9B6E80D68E03F163684EC4CFF5B1EEF6DF5E6C0C3B3965
3F13C13CE1F9B1EFD11D8817083534665198FD8830755391BBD258AD06368414
8BCE694325CCB6582AB71438D34BF1DB6F8F84CBF3E96B7E66DF6A51951334CE
EC24B11F525BCDA1134AE76B7004670D3BA41F6CCF50687AA283B47E1717598E
6C196BFDE21BC56DB38BA07A7DBB4FEC1653BE0BEB641260387BEF1BA8FE1> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PILCGW+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/PILCGW+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
40.4189 119.16 mo
(o\351o\342)
[11.06 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PILCGX+DengXian-GBK-EUC-H)
%%Title: (PILCGX+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PILCGX+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
346 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022AE88ECC5C2CA2FEB053E1BD4E62E51D8C47DC
4FA103EECE16794DC7853096FAA22BCB6E2AB223DBC0FE117AFAF47487357193
2EB44856AB9ADA4A904F5BDE54C24BA32FCCC2B4175B63F7A0B182427BAA5459
E468FA8CE789E6E2E376C425E25ADD834A2C74B711076404FE88194E8C947943
821D9F367> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PILCGX+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/PILCGX+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
67.8189 105.76 mo
(\001Z)sh
5.61891 19.22 mo
5.61891 13.94 9.89891 9.65997 15.1789 9.65997 cv
91.9389 9.65997 li
97.2189 9.65997 101.499 13.94 101.499 19.22 cv
101.499 57.46 li
101.499 62.74 97.2189 67.02 91.9389 67.02 cv
15.1789 67.02 li
9.89891 67.02 5.61891 62.74 5.61891 57.46 cv
cp
.415717 0 .387854 0 cmyk
ef
5.61891 19.22 mo
5.61891 13.94 9.89891 9.65997 15.1789 9.65997 cv
91.9389 9.65997 li
97.2189 9.65997 101.499 13.94 101.499 19.22 cv
101.499 57.46 li
101.499 62.74 97.2189 67.02 91.9389 67.02 cv
15.1789 67.02 li
9.89891 67.02 5.61891 62.74 5.61891 57.46 cv
cp
.732753 .0580758 .214054 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28633 <001C60D8A8C9B75E5E15AFD6A09866F0491F1027106958A942351926A
12C16CC8CE102375270AADD> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
44.7189 44.34 mo
(o\331)sh
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28632 <001C60D8A8C9B7A4C86C58826A7CADEB7B0D78D3A58A13CDBAB0CA4F6
979882BC86A42E2AD85808956602D9668> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
53.2989 44.34 mo
(o\330)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 1 GetGlyphDirectory
344 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022E8287896034F98F0C335974F7EC994F23645F
C1A8204464AB62152BA1373B95B51> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
75.9789 47.48 mo
(\001X)sh
4.05891 168.86 mo
4.05891 163.58 8.33891 159.3 13.6189 159.3 cv
90.3789 159.3 li
95.6589 159.3 99.9389 163.58 99.9389 168.86 cv
99.9389 207.1 li
99.9389 212.38 95.6589 216.66 90.3789 216.66 cv
13.6189 216.66 li
8.33891 216.66 4.05891 212.38 4.05891 207.1 cv
cp
.415717 0 .387854 0 cmyk
ef
4.05891 168.86 mo
4.05891 163.58 8.33891 159.3 13.6189 159.3 cv
90.3789 159.3 li
95.6589 159.3 99.9389 163.58 99.9389 168.86 cv
99.9389 207.1 li
99.9389 212.38 95.6589 216.66 90.3789 216.66 cv
13.6189 216.66 li
8.33891 216.66 4.05891 212.38 4.05891 207.1 cv
cp
.732753 .0580758 .214054 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28631 <001C60D8A8C9B625CE6BD2BE419D5CB815C1CA0C61BA0A2D3DFC3B96F
CF9FB6F9E0519EA65E7C8EC76A179BF9356B2C1F7F4A814471AED147404B13B0
B2776E0D6E4D16A4BBA0742D992692136F6DCF6FD8FBBC1141BFB8994DCD1331
B5CC1B493> |
28643 <001C60D8A8C9B7931D88C549581514B303475B68F3A5B82FC10C33046
B1178E35B340E46A0F7AFD1D8477157DB986336BDE495E836D190C26AFD0533C
6A5709B3E706B37262928FC6678F90AED700592FB6F17C4CA4353B0E987BB933
7B4E4E6727403A52D0FD507E960> |
28645 <001C60D8A8C9B7FA1378253013ECBC2E2375A528708F98127351381D8
D6D4621D951E8F5F697D02315B161674B3B669EC72DC9FB775331F6348CFA7EA
DF53D1E65E2A1653259F1DF90BA621D0BA605DBDCF6462367C15F1F9BCD37860
53893E0E997109E5787E293F736D944B821F2A5> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
33.8589 194.66 mo
(o\327o\343o\345)
[13.7463 11.029 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 1 GetGlyphDirectory
345 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022B54330B077440232E43B33E7F53620D8BD32C
7509B88CBA35B7E02575B89A922FC6D08F2749CCDE056DB22ABACAE66A27F17F
0D9398650EA33090C375B3BEB24F26AB744CC46ACD557374E9300AD659E5EEA0
A0F3769A5842EE30527> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
76.6389 191.48 mo
(\001Y)sh
128.769 75.1499 mo
255.609 75.1499 li
255.609 27.09 li
128.769 27.09 li
128.769 75.1499 li
.53695 .360723 .204135 .00146487 cmyk
ef
128.769 75.1499 mo
128.769 74.64 li
255.099 74.64 li
255.099 27.6 li
129.279 27.6 li
129.279 75.1499 li
128.769 75.1499 li
128.769 74.64 li
128.769 75.1499 li
128.259 75.1499 li
128.259 26.5801 li
256.119 26.5801 li
256.119 75.6599 li
128.259 75.6599 li
128.259 75.1499 li
128.769 75.1499 li
1 .816159 .15967 .0319219 cmyk
f
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 9 GetGlyphDirectory
28630 <001C60D8A8C9B66129408EDE254C9C680856C5C58CDE8931886FD33C1
3032CCEAAB93F031A223E0F10B1688B890AF923FA33D50791F3585DC847E52A2
604D942BE0A76707C2DC7FFDDCEEF612E4CB75103563AA302D73FE057047D483
85B58BB1622EE008969F0F8C1E9BD68AC43409FEAD97A8A1EE29EE86CE1D9D45
843FB75131B> |
28641 <001C60D8A8C9B60C97DFC02343A3E5C1F4BFADF2D6A13CB977D71B63F
CC7869D9D2A8D6D48BA5B351B43FE416CA7C26B97CC2A1F0470F658BA> |
28595 <001C60D8A8C9B8581AA5> |
28603 <001C60D8A8C9B8469EA311E84B2F78CB83AF7D17CC7A5595C17F48675
B292551E9C492D4BE6296DDE304B008E2BEE4200570F85805CF9B118B84A76CF
88D679E2F0705B758C596D1E73E> |
28613 <001C60D8A8C9B78C66ECF39464E4C36A41875CA13B3F1084BE95AC3D6
B174FBE334F26768C74B2ECC4CAD6BBADA966160EFCC7F2747E70E0119D6AEC1
B017FF7666859BBB2EDC8A44058072DB251CD7C890E5801C60DCDEC2DC5E66B6
27F3C4E46C8D576EB2D7BE3EC5C6EC7CA35C52158FC62F188AA92F4A597AA61B
2CBCDB07E050E80BB022F1A82> |
28615 <001C60D8A8C9B78C66ECE3FE51EC4A6C00F5F743D3A964A65A3B26B4A
BA75D1C6449C63EC7E2BD2BAFDE22A96CAB5112BA62956C94C83D> |
28672 <001C60D8A8C9B6BC88CCA209E81BBB23118C1962F78530A6D2B1B22F4
C42E1E1780F3FAF3BA4D143D7AB9094600FB0A392F35595463AF65F814F8CFD2
FA68D1EBD08F24F882D398540EABDE5E14F3ED20707C55D17AFC142A349177EF
446C8B5CD5246C1A25D9E29ACD913B3DA4DA32F40D6AB2427E526FB3DBDEFA1C
762999B6CB00C8AB4BD2941F9E463EC30C1D40E11263ED534E30DB477FDAFCEB
E27BF40CE00> |
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
28604 <001C60D8A8C9B8469EB7E8938ACD1505E21B42AD34FFDF41E8211D757
8D5D3F08B11A6F726875BE4D728ECA810A039EAD4A4B27F567B1311F62C4E5CF
AB28390CAF35147BE5132EBD2B120B5> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
145.059 57.1 mo
(o\326o\341o\341o\263o\273o\305o\307p\000p\006o\274)
[11.1723 13.1366 13.1367 4.79335 5.26198 9.49641 9.49641 15.1549 7.31622 0 ]xsh
181.989 221.31 mo
518.589 221.31 li
518.589 173.25 li
181.989 173.25 li
181.989 221.31 li
.53695 .360723 .204135 .00146487 cmyk
ef
181.989 221.31 mo
181.989 220.8 li
518.079 220.8 li
518.079 173.76 li
182.499 173.76 li
182.499 221.31 li
181.989 221.31 li
181.989 220.8 li
181.989 221.31 li
181.479 221.31 li
181.479 172.74 li
519.099 172.74 li
519.099 221.82 li
181.479 221.82 li
181.479 221.31 li
181.989 221.31 li
1 .816159 .15967 .0319219 cmyk
f
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28612 <001C60D8A8C9B78C66ECFB0787869A9A1A23E44B3E9AC19DF9D3CAD17
2DB0C5BD42A48D92FB57C46F18F7186> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
298.439 203.26 mo
(o\326o\341o\341o\263o\273o\304o\305o\304p\000p\006o\274)
[11.1599 13.1221 13.1221 4.84204 5.25613 9.48587 9.48587 9.48587 15.1381 7.30811 0 ]xsh
259.089 75.15 mo
343.089 75.15 li
343.089 27.09 li
259.089 27.09 li
cp
.448402 .271946 0 0 cmyk
ef
1.02 lw
259.089 75.15 mo
343.089 75.15 li
343.089 27.09 li
259.089 27.09 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 7 GetGlyphDirectory
28629 <001C60D8A8C9B7ECD94E209CF2E001D5BD73F2D35607F6F9CFB8183DF
05975139416B10983007BAF37315FB80AF3F59A7AFD6F4F1B834AE085B526220
6D57D2525DF8F938763EDC8C63383C21ECDFE5092FB02C978A1A94F951D9B028
E65FC2284B0FFC51184F29C0959E7954453AB3D017B2FF221846C842BD6C3E1F
1DB394CFA79FF0D9FB9240F77F3981762AF037B68A10511FE361698819099> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
28662 <001C60D8A8C9B776A06C6FC231F3BF82B95E430F6D347A409EECD485F
9B406FA6336964C8BF7664E2AB055B44D3A06959A7781CE4D2FEDDD996C546F2
2FC5837E64BBC80EF4699966E80B1E4ED4A9C3550A8BDD97A63B0696CF3EE432
A03807D55000A523F2214> |
28670 <001C60D8A8C9B745265EC238AF683B8F4A353D25470A8B72A26DB7844
3BE3B1F44B4CA272249F727C6F8216C093BF16FCF6CA661AE> |
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
268.459 46.3 mo
(o\325o\364o\366o\376o\370p\001o\367)
[10.0733 9.02817 8.16312 8.46942 9.20834 9.91104 0 ]xsh
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28611 <001C60D8A8C9B78C66ECDDCB4A31B71CF1B471418D658A1BE1B520F02
65AA7AC34644C5EABA639C18B14B6949B9B765938D8D07FC6BCCB4CE1CD5D830
F911203004567794A3B4AF38AF2CB559D9D9F05F95F1CADFACE76DFED6FDC69D
44D60ACDAF6EDA57FE4BDB361FCFCACF73865443A9663D673E91191E89511BF1
A6B0ED83D875E207CDA526DBC> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
270.319 67.92 mo
(o\273o\304o\303o\303p\000p\006o\274)
[5.25613 9.48587 9.48587 9.48587 15.1381 7.30811 0 ]xsh
346.509 125.73 mo
495.609 125.73 li
495.609 96.21 li
346.509 96.21 li
cp
1 /0 /CSD get_res sepcs
.514 sep
ef
346.509 125.73 mo
495.609 125.73 li
495.609 96.21 li
346.509 96.21 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 4 GetGlyphDirectory
28646 <001C60D8A8C9B7B9B9DE69CBC96F0B5A3AE98D065C1FD7CFAD83FC43F
1290F4F9D34982C14CC513501F9076D4F8907F22AC9522F2896E944B1C90ABCE
1EBF569BE3E67D6DCC89DBF0C52716419D51E2AEFADD36CC19C82AD0FC3F3BA6
123D0BD3A2ABA4E110BF677253E952D076F531E23520FFA1895776A2199512FA
C9BD1336F7E1C8EDFA463D40ADCD492ED3B75F11D80658BD7ABA38DAF43CCBA2
32FE248B15967CE3B652AF643FE11F6C5568129285AEA24CD260CD6D81E569EF
64502ECAABE996CCD635CCC94E3C711D5E8195F3A715AF8260F36A77EC1CE55F
17D20D8E151C2> |
28639 <001C60D8A8C9B74B0CB5DF6C84CF353B772D85B4038C184407812FD2> |
28628 <001C60D8A8C9B67106DCE06030CC378319F03DC2A59F29632BE590439
740FEA1C4E5B4BC8EED41D08FA67DA3FCB2D66CF5A13D3B752F6A4FC2E722E73
0214184A0DABF55E8F1F230E6A7308577D829465EDDDAFFEF> |
28640 <001C60D8A8C9B69449B17425C8547CFDA8270817BBE34FB818DFD3400
AB236206D8E33A195934514318A5B76D2E6BBCF397E7437A6E24D2A09B92194E
D12385BFFF65C91BDA6D66CC8CE8455ABB16E2EC3596D70D5E874E2DB464B983
5FD670A17B5D18BB2C8E7FE95E35DC06C2C5E52744FD1BE1143> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
383.979 116.94 mo
(o\351o\342o\263o\346o\337o\324o\340)
[11.016 13.6261 4.93204 9.18015 8.35208 11.448 0 ]xsh
523.149 221.31 mo
646.029 221.31 li
646.029 173.25 li
523.149 173.25 li
cp
.448402 .271946 0 0 cmyk
ef
523.149 221.31 mo
646.029 221.31 li
646.029 173.25 li
523.149 173.25 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
552.019 192.44 mo
(o\325o\364o\366o\376o\370p\001o\367)
[10.0621 9.01819 8.15405 8.45996 9.2522 9.90002 0 ]xsh
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28614 <001C60D8A8C9B78C66ECDB6140BE188B7AE32EC2E6019387F28A4D7BE
FD974FECF9A6F435E80E22F5012EC52C00C178C2C2233F0B02C6B10EBA64AD22
230138C4945FB4B066D7E42C2C6EFB71864F1E255E0A8537DA22ADB3D546CB61
607C115C7A490FEE823B22C59C8C165CEA3BA45F26ED3655E00609C70321AC2E
2A2A318B590A3969C48D77B80570739FD2C391323D888FB7CCA532472D5F05C1
B478B862C545672D9550E95CD5D79AEB7716096AD08C7A6D17AAF6F6AA3FE1AB
AEC80F85A> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
553.879 214.04 mo
(o\273o\305o\306o\304p\000p\006o\274)
[5.25616 9.48584 9.48584 9.4859 15.1381 7.30811 0 ]xsh
497.349 75.15 mo
624.249 75.15 li
624.249 27.09 li
497.349 27.09 li
cp
.53695 .360723 .204135 .00146487 cmyk
ef
497.349 75.15 mo
624.249 75.15 li
624.249 27.09 li
497.349 27.09 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
513.679 57.1 mo
(o\326o\341o\341o\263o\273o\305o\307p\000p\006o\274)
[11.1723 13.1367 13.1367 4.79333 5.26202 9.4964 9.4964 15.1549 7.31616 0 ]xsh
627.669 75.15 mo
711.669 75.15 li
711.669 27.09 li
627.669 27.09 li
cp
.448402 .271946 0 0 cmyk
ef
627.669 75.15 mo
711.669 75.15 li
711.669 27.09 li
627.669 27.09 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
637.079 46.3 mo
(o\325o\364o\366o\376o\370p\001o\367)
[10.0733 9.02814 8.16309 8.46942 9.26245 9.91107 0 ]xsh
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
638.959 67.92 mo
(o\273o\304o\303o\303p\000p\006o\274)
[5.2561 9.4859 9.4859 9.48584 15.1381 7.30811 0 ]xsh
715.089 125.73 mo
864.249 125.73 li
864.249 96.21 li
715.089 96.21 li
cp
1 /0 /CSD get_res sepcs
.514 sep
ef
715.089 125.73 mo
864.249 125.73 li
864.249 96.21 li
715.089 96.21 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
752.619 116.94 mo
(o\351o\342o\263o\346o\337o\324o\340)
[11.016 13.626 4.93207 9.18011 8.35211 11.448 0 ]xsh
5.61891 245.07 mo
5.61891 239.78 9.90391 235.5 15.1889 235.5 cv
90.3689 235.5 li
95.6589 235.5 99.9389 239.78 99.9389 245.07 cv
99.9389 283.35 li
99.9389 288.64 95.6589 292.92 90.3689 292.92 cv
15.1889 292.92 li
9.90391 292.92 5.61891 288.64 5.61891 283.35 cv
cp
.415717 0 .387854 0 cmyk
ef
.48 lw
5.61891 245.07 mo
5.61891 239.78 9.90391 235.5 15.1889 235.5 cv
90.3689 235.5 li
95.6589 235.5 99.9389 239.78 99.9389 245.07 cv
99.9389 283.35 li
99.9389 288.64 95.6589 292.92 90.3689 292.92 cv
15.1889 292.92 li
9.90391 292.92 5.61891 288.64 5.61891 283.35 cv
cp
.732753 .0580758 .214054 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 6 GetGlyphDirectory
28683 <001C60D8A8C9B763568A72CE33323336558FEDB35993DFA979CD86B9E
44D82CA27D61977017D8EA8E32C142B6DFCAD6275AECF8C3D9734503912A95C0
6> |
28675 <001C60D8A8C9B7FD84953D11880AD4F37B2510559D37A2059564A2CE2
E16A7500A94FDD66B9E5A19619AACEE642F7128DBE261B121C3C7CC16942981C
D231447F25C4534F5D376D352FCD328019825A63D60C00859FFDC4B610FDC284
CD7F0495A1DC5978D3ED40B7F14741A387BEC5E756DB50728BA11C7FAA4BE6E3
23AF5AACA5CEEA8995FF8194E08068A8A5E046955C8CD8BFE88BBA9F1EEEA2C2
A3AE2D93280F668321E4BB938F72F3C852944> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28677 <001C60D8A8C9B81947031993F366B7797E01770F0CCF402A3810F4860
85B72DA10BE6CC101E91F1F1C8B8F646643C5A8F34CC08EB50A8A38B409FF70F
C08890288922D85661D7A1EFC0CE23BA363CBFF61764B> |
28621 <001C60D8A8C9B89100E2949968BCC9C9E907541FC50440089A34F51CB
B41925106> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
12.0189 262.1 mo
(o\330p\013p\003o\377p\002p\005o\370o\315)
[9.05411 7.92004 10.3321 4.03198 10.314 6.10208 9.25214 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 3 GetGlyphDirectory
347 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022D1B33357ECDD4C35070E23870B27D9D8A979C
AC913210801CDE9EAFF6C317D7128285FE62E80252C41BD1EF785> |
348 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022B181DBEFB4044A8E0D0DF92F6735CC89F270C
F967940367118B192E5216263B5BDC00503767A93F524B5225C0C43EE0564353
AF8B5277A8B5B069B691DA67EBD459DFD55989697815EF0480557261F67A6D54
A74CDC6D72E694E0D96E498207197DFFA> |
349 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26022889D009B424B0CC82DCE335B296EBE01C721B
9DBBCDB4E0C93B4123DA5BE216954FBCABB2184B1C07A7D6291440DB19BD96FD
94C612571D2078B6A5CE195A21C5B000112AC38A60CE0C58A429315C5F69A323
1FFFC524AD17495B5C8F417AE29B8F33EC5B94EF3736215944445FD7DC765BF4
A4E> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
12.0189 283.7 mo
(\001[\001\\\001])sh
5.61891 318.5 mo
5.61891 313.22 9.89891 308.94 15.1789 308.94 cv
90.3789 308.94 li
95.6589 308.94 99.9389 313.22 99.9389 318.5 cv
99.9389 356.74 li
99.9389 362.02 95.6589 366.3 90.3789 366.3 cv
15.1789 366.3 li
9.89891 366.3 5.61891 362.02 5.61891 356.74 cv
cp
.415717 0 .387854 0 cmyk
ef
5.61891 318.5 mo
5.61891 313.22 9.89891 308.94 15.1789 308.94 cv
90.3789 308.94 li
95.6589 308.94 99.9389 313.22 99.9389 318.5 cv
99.9389 356.74 li
99.9389 362.02 95.6589 366.3 90.3789 366.3 cv
15.1789 366.3 li
9.89891 366.3 5.61891 362.02 5.61891 356.74 cv
cp
.732753 .0580758 .214054 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28636 <001C60D8A8C9B875744C21AD59FDCBB2749B2268B75FB3> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
12.0189 335.5 mo
(o\334p\001p\007o\370p\005)
[4.44589 9.90005 5.72388 9.25214 0 ]xsh
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28608 <001C60D8A8C9B7A73DB6A60276D55D01F153B7D96DD64C> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
47.4389 335.5 mo
(o\300)sh
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28661 <001C60D8A8C9B7FD84953D118AA979FC6C631901144BB02E815F2AD38
C9304AAD5C69BEAA7F87F397A8B68E05A58AAC0AE7365E3D5B033BE3AC489C99
F1A84D26C4414FD9A1B105486BFEE67D38C7D79B5C30E9D2EE19AB4E806BF73B
81F502E722B67ECA466A631456E16BBDB15CD7175C1ACFB9877440AC4934B23E
96968CD65ADBB658B8EEADD2A5CF185829ED50D824179AEBDE1D69054AB218F2
E572E00B798960921609D88F11B3649413151> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
56.4389 335.5 mo
(p\005p\002o\365p\002p\007o\315)
[6.10208 10.314 10.3321 10.314 5.72388 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 2 GetGlyphDirectory
350 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26025E5C0B53D13DC82C7AB7CB026510445B0DF1F6
9788E7ECC880FEC162D4FBF0893B386EFD4EB> |
351 <001C60D8A8C9B5EE3169C8082301AD49B44B50A338F564D59FB0CDE8738
5B4D6B257CD5B13D4915540005265669DB41820644354C571724F876F50C59AA
F7F7DCB6EFA78761A88286C6CD4F354F8F80991B8552DB61C9667EB468405914
415663BC4269DA79CA3B4D26025FE9B6B0CE1350AEEE1C691B14C6AE56186DEA
FCE80895D0F51832778DC63169DD32AF2A1EBD368C96392F596E5F18FE113473
E66BFBD34AF7CFABC5DBAD2C44574E2009B492AD6D39BBDD20FE3E79DFEB01C3
62E79EA2A2AB0B51463CB9B862F954C13B3F70CF3FAED53338D19178FEED2C26
B372FAD75C96FA6D991A574124792D97A53DF8D82933B184B0DEA52D5FC91C6B
C> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
12.0189 357.1 mo
(\001^\001_)
[18 0 ]xsh
128.769 125.73 mo
343.089 125.73 li
343.089 96.2099 li
128.769 96.2099 li
128.769 125.73 li
1 /0 /CSD get_res sepcs
0 sep
ef
128.769 125.73 mo
128.769 125.22 li
342.579 125.22 li
342.579 96.7199 li
129.279 96.7199 li
129.279 125.73 li
128.769 125.73 li
128.769 125.22 li
128.769 125.73 li
128.259 125.73 li
128.259 95.7 li
343.599 95.7 li
343.599 126.24 li
128.259 126.24 li
128.259 125.73 li
128.769 125.73 li
1 .816159 .15967 .0319219 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
221.879 116.94 mo
(o\334o\367o\377o\370)
[4.43988 10.3261 4.02597 0 ]xsh
497.349 125.73 mo
711.669 125.73 li
711.669 96.21 li
497.349 96.21 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1.02 lw
497.349 125.73 mo
711.669 125.73 li
711.669 96.21 li
497.349 96.21 li
cp
1 .816159 .15967 .0319219 cmyk
@
346.509 75.33 mo
495.609 75.33 li
495.609 27.27 li
346.509 27.27 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
346.509 75.33 mo
495.609 75.33 li
495.609 27.27 li
346.509 27.27 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
407.039 57.3 mo
(o\334o\367o\377o\370)
[4.43988 10.3261 4.02597 0 ]xsh
715.149 75.33 mo
864.249 75.33 li
864.249 27.27 li
715.149 27.27 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
715.149 75.33 mo
864.249 75.33 li
864.249 27.27 li
715.149 27.27 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
775.659 57.3 mo
(o\334o\367o\377o\370)
[4.44592 10.332 4.03198 0 ]xsh
128.769 281.13 mo
864.249 281.13 li
864.249 251.61 li
128.769 251.61 li
cp
1 /0 /CSD get_res sepcs
.514 sep
ef
128.769 281.13 mo
864.249 281.13 li
864.249 251.61 li
128.769 251.61 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
453.159 272.36 mo
(o\330p\013p\003o\377p\002p\005o\364p\007o\374p\002p\001)
[9.06418 7.92883 10.3436 4.03644 10.2714 6.10883 9.02814 5.73029 3.96436 10.3254 0 ]xsh
128.769 352.41 mo
864.249 352.41 li
864.249 322.89 li
128.769 322.89 li
cp
1 /0 /CSD get_res sepcs
.514 sep
ef
128.769 352.41 mo
864.249 352.41 li
864.249 322.89 li
128.769 322.89 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
450.759 343.64 mo
(o\334p\001p\007o\370p\005)
[4.44589 9.90005 5.72388 9.25214 0 ]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
486.159 343.64 mo
(o\300)sh
1 /0 /CSD get_res sepcs
0 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
495.159 343.64 mo
(o\345p\002o\365p\002p\007)
[10.3859 10.314 10.3321 10.368 0 ]xsh
129.639 388.74 mo
857.599 388.74 li
857.599 391.74 li
129.639 391.74 li
cp
856.099 385.74 mo
865.099 390.24 li
856.099 394.74 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
28647 <001C60D8A8C9B7B5777CD30EEC2706247F18F2EFF0FCD8D1B2AAA4975
E3C181CDDE8> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
417.559 379.92 mo
(o\330p\013o\370o\366p\010p\007o\370o\263o\347o\374p\000o\370)
[9.05411 7.92004 9.25214 8.15405 9.91791 5.72388 9.19815 4.80603 9.3241 4.03198 15.084 0 
]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 13 GetGlyphDirectory
13427 <001C60D8A8C9B5EE310D039C9A6B276F4FE12745034F93EC00C29CC46
C29AB76536644A1AA65F64ED2417BA9EFA9FB8F2A3692FA21033E10FB1363D10
632ECC3AE237455078011C0BFDB0032E4D751DD3F02D8B238290D99E3D5B3C45
7C27B2A3A16D1392E298663314AFB4C3CCFA437C737305CF8545D99CF639092E
42F23201109EBDBD15CE111A6C2848A27C9BDC241E13D497A7A677E8F60530C9
03A4126E1742042D4AAE41B3171521440B6402D8F4C078E6209F89848D1AB59F
75F461CC7F244055B523237571F4073A3B3E832C8185927DC8C70D72EAD64BE4
DE40E22CDF26A10E2672BFB5B36B2C07C1393B15769B39F5702E4D781D54EBE4
1E5B45ADC395B060BDDA1EA9F3FA7DFBC324649830DCEFCD25646A1EFCA55974
D175E9C2777827D30DE09D9649006579E76D4A6B932A0F19C63743364545323D
AD389E5372C2564827EBFB16734CDBAFF3A485449673F9A7B0F4476FE81D3A40
03055D1B03F59B055E5659CDEE041DD784FE9912BE85B5CA7E0DB341F0924D6A
A5199F5F97D83FBE5EBC7DFA84D6DCAA792C0F270848A91F65A748F6D243BC67
D2E1933CD813E597CA17E492406970DC017C2937D3DF297CAFB7E7785968932A
157B33A29B68925FA501646C2DC93BB728DEF36F6E5BD53986A065E8742961D7
A1047E8BC8487B8676A06761005FEF82ACAEB710D6B108E04F2B1AD79BAD5A64
DD167F5E119B3E6BCEB829E44D20F4632C7C54C7ED8A0755EDD76A26415D8E83
F45A3F49CA64332847CC708ABBD2479C3878F3791386D732B7A> |
7762 <001C60D8A8C9B5EE31259DCF888306D9DA2B506849B3CBEEF0C9DF5FC8
F1D8E47D5B097827E773547145D8CACCA0DE3760FA7F67879962B7034914D97E
5351EE6ABAB0A727C8C8468FD418E01A17762CD89E21D5CEDB7694738712D0FF
AD81B436331EECE6C246DD859DE7C327F1CA874DA1EB82A1731AC0DCB815F1DD
01C74F33AB79B6573730A6C668373B94FCBC813259547188CF603C5A254D5CE0
1F06A4AE34F5D5EE947303A8A88F962138E3DF0CE5584C10B5E3E66E7872598E
DE2F3D6E73AF14DFC89191CD14853A99C11BF0B239AA3F17313DC4D5157A094B
8B5943FC279C035E5E0E87E162CD6F5E0902193941285BC888E3F3C47AA2739B
84B0653398AAC3320685962E3D731A7C8CD2B3C16272D9C5ECE2BCE423661807
BCE7F2AC44EE0A495F3568098632D95C5DA22D544822E8E9BA7546C1> |
15424 <001C60D8A8C9B5EE310D6E459E8B1ADA3AAA093297591B9CEC442F449
1FD627AF81A659972173650941597031D06E1F910841CF919A17AEC33EFE5F95
062C2316D989051E93B6CC0AC29ADBB31408997F19B43A56791E6B924FAEF503
74A3CC6E2A77A78B7D95AE15B6889EDB06426EDE6D8A50E1E930024F0C7A4656
93636E7A2B0E7A0041C1ACA00C2868EDD90E07DFC6ADEB3ADC005247644057FB
271FF98447A4CAFF902F4D983411E16B7927A2B82506AE950C072CB9BE27E4E7
46E9EECB813AAF601B223031C0107612D35D9214D4B0F27D2FC3AEDC7221B256
40FDF2374573F9E62F79260A71B7B402E3DC5D977138C04128AFAB1AFC2673F8
5E5A3B41A92EB756B6AB5ECCE286C0D3542418FC51BA8EBCCBC342FC956492E6
5227CB665409AA7E8F4E7B7C7CD1BB99495A50911739758AFE3948128BF1F612
B1544C5E7B318D6D236FEB0F532DA4CE2D095C93CA9C7C9C961C148F02BA2B38
3F38DDD359205BC6C70927BA5039E0B4B9FA834EA412809EA8D53F498EC8226B
359133AA0F0B20B13FEF35986881A23153B6DE7FAF38D8ADA1EFAEF4E6F2D416
4281522729585B1CD610183C8AAE63EB4C5E3541473E21DE57759814B15C9FEB
AB33FFCC097A5FEFF867C147C5F3E2E41D6E158743533A7788EF9765002DC813
5675B4C18ED6A7A4AA555> |
18698 <001C60D8A8C9B5EE3102343C67F129BE1F56C15506E18BE1FC0C71955
95753EFFB3B286648F13F4C3D04A67C24B5EFD6D5538DBA10E87A2CBA430B447
553AACEE53D71673C297B82AA91785FC7BCF3D1663DC03A38CA2E5453AF5F7D9
65918786DF7CE7B2EC24527F377EB19B8E061FE02FD10438B1049194EDC50FEB
5E6BED8FD031BAA2D64C8465D0BC30B1DC4F5AF47C4E1049C7DE595BBF803BFF
6D713BE0BCEF6EE41BB679065D80D34555237E262966672E12541B4C245E5123
53C2D67C77825CFFD3354EE87F7E442E2959431BDFEE2AE7D6D400B9632289C1
FBE4F55B4DA8747BF0D9A1977BCA2318031093798BC9670E8605925A4DAD982A
21B8CDE8B7F36C7B802CD95EAFD5F6477EB1FEB57375CF56E8D34D7BA056F57D
6D610B8B79B84AE88F9A6572A5BC7BDC05AE03D1B856223ADEB59ADA76AD4900
D4B75C2CA7CDDB848A113AEB1C2E84FC2CBAD403FAEB785B2C496629B969D80D
BF64F2610C666D7D55B52D0C3380DE74AEC198B639A1AEAA00A7684B559B9C6B
0CC4A4DB1393B2F9868E37A77978B28B628E9CAAE40927A4080FB7A47B2C0A0E
FEDA6D483524C86D9C9357A72B29E3FD7BD> |
10369 <001C60D8A8C9B5EE31401695766D21E8B50DA21DB4C12EA378C833B33
BA11698B6829774A105A8BAB20B2F406D963A9CFD4FCABF3FEEB70507F8E5DCC
08A4A13600D4B923C17B6358304854597E3F7A881936B0B8BDA9EF794699411A
8559E2CE4D17E532C66A5F868F2B1124BF72E3FA35FA9C7E4892D73EC36F6F68
4380FEEC440633B19BE4C266F7882BDC04F2CEEB1CAB9AAA8D1E201910573C6F
8BD20CC7A776976866E15348985AD8892B867C1B10B1979F249B168D872A0FA6
647DD91A402D1550913D1F9217D7DC336EE5CF834270A22C5EA6F4A1D5C3CB37
7615ADFDF67951107A2C72178E724A5902CEC60FC9E51B8845C04B917B8AECBD
A9461D666F6ABF6EECDCC9A7B8076328A4CE6B8086493518B15DE78489D88> |
9725 <001C60D8A8C9B5EE310278D84EBAC674BEFE616C264FF404CBB02D4460
E1FB4D65A8B61CDB2CF6FB715B89921AFA513A07180A3C5DC4A386B507E36907
753628633CA22A983E7BCC42980309C3D7416A48CA483B814282C15616427665
4132EE4C11E1BB33472D69451F218992F0C78996AAFB51224ACD2CF1725DE980
F891476A1A81A950A712A91DB1AFB2287F590481C2B91C9C7F0C6124E8CCD5B5
8511A64B0EE31F69F18CDFE24D30C7AA5174C5D37CE1E7717C2549D66366D284
0C5958AB24CE4B0DA032AD7688228F345AB246F40ABEC43DF2BCCAE7CFD77229
B700A7EB3859E6C708B1954ECA1527B59F4C760717476921476214C7FED61622
10A2F0E8068BD3E1E46A7F1E9D5CEB197497333B172D7FBE1E41A99F50A88E63
39A2305C> |
12607 <001C60D8A8C9B5EE310D29F7EAF3B74311E3DEE32A169477DAC9D040A
4AE9A1EF715E85DF4CFCDBD071E3CBC541BCA48322543125EE23A5B0D5EBA65A
F7943C5EF0B8CE3F485834875DFD13EE71F1EAE919C9D60CB1F2303163BA82FA
74EEBB3353343900EF61B10D1788ACCA3AD34FBCE7AAC0145824EC4E38D7EC30
CC04CE3559E0E9FF436ABDF5A846472B727B9D666265BF31B5C9FDCD28CDDF25
06914459EECFF6574A84A370C5080644B1B36B9D26BE59B4135C63210ADA4810
86D61F295BDB9FBB0D5D8BBE32845A52C21CB356509F358ACF88E5123B135D95
B29CA836C4BA3ED1EF4F11859F3AD0EDDFF00FD29DF79C61C2FDA30E33B1C6D2
56050B5B3DEDC8BB41A6A870FCE5BD78EC6BE3CF9D43F7CEE820C182B45090B5
E37BCCB6BE584F2D97365AF84FAD9567A4647A5AD910DD01F6D89DCB35FC088A
3CDA5028E3B31C1526CB0544D> |
18489 <001C60D8A8C9B5EE3100AD50004334763119DECF736D263C63DF254D6
3CA05BC52D1D155EB7AA2C164BA575753DE6AD3629CFBEBAB037D8639DD051CC
ADD9CE3E2D9FB9DCB120904EBF4B42E97D44D6211F90EEEB25E6B12E174E7E03
23EC4F8D9F356A3BD244CC517042A7130F27F096B681038B87648986AC73A173
644994437EFB9722937BFCB0CB2EA02DE67C518E7818331D21C319C8D92AF839
D1B2DE2E2490B260F114F15258A2A612E7E05D9BF4D65E8C27AEFD8E068D8925
910F85B118BC94B1AA4C76D285F86B32EDA2E70A21BDEE100BE889E289B13FEB
6C9603B034D05> |
28449 <001C60D8A8C9B5EE310D8BED2F47822674726410D51AA56174CE223C5
85F0ECC82C2DDECACD2A4BEF9097B3B86B4EE2E5BA7D52865C4BF514B504AC00
C28BB6ABEF1D990C32EA726CE92926FDAFF52F06B5CA8556F2939734059CAB71
3AA3C26B2DB97B2BE824A21A5B9795D85983A3B1626563209C2F21D89296AE20
4FAB9DBE8FBA7C7> |
15428 <001C60D8A8C9B5EE310D61C04D7D87F931D95E7A09215B44A29049A38
DF69B722B6173F2A76F048CED9F2031354CA6AC2950AA51251DBDFE38845F7B6
8F6A9E0ED35AAC4D38562FCAD447FE9F274479340AE15058169156261E871D34
60CB6137FFC5FB826D4A1F0A227F3BA52C4300CB29C5BF7B55052DE3CFC64021
0E7B1E7FF67FAD043E05E25E9213CFFAFC28CC1C2FD69E94A8E9F664D0981CB6
B44ACB4A1B7938E6B2C497F03C2226AF4F4AB80528C9C3BCBFB0E4AF4A7C21E5
8E42FC1A1919A1853F6BBAE80A9491AFF677DE86A82F0EE1BCEE22C49A1E0B22
C704E9773BD5531EC220600CBC4E80BC34B0439E67B92CB0991386F2FBF6D118
43863C5A5774C385802A0036997ECBE428E75D85B6EC5920C09273837786048F
135C9B49F46C5BA5B9D5C6123B4B6548B6BF38565BAA4B19D31663BE8CEE241C
4D6F35C9116549F8646E719765C0C5729FDCDC37FE933DAE6BE7FFA6D9122F14
4C9624045CD8893515F3D9851134D07407DCE03DE9130130E4EFC4E4A3B0E65A
8AADB53D8794BDF72634B7A732B2734AC6BDBFE66C233B2> |
19966 <001C60D8A8C9B5EE3155B57548884CF8E79F56F87759A21F5A8CA36E8
07ABA8C17598195568E41DBB8502A495145F8E4039262914C285D449D828C136
89B31AF85916EF0CB5AA6630E1349545F528E1CE25A59F476F6F3F08AF2EEF24
4372206EE20EFAA24DA40AFA863C88BFE13BCD0DCDE01DCF0E5616B00BF2DBCB
56E987C277C17182A63AFA067287CC1FC3EB1D05F9AA58BB44F0689F6B0CCB82
B2E43DA1D42028C4FD56DD59048D790DF57BB3D977EA2ADC23F400F2601DC001
4830EF1F162BF0FD29BEFFA8E66A91A2FC0B65CCC9D5BC1DB5B4E43D5DACF01A
CC17D99A93575B14A0D93654B265933CE4BD03FAC8EF31B23D7B21F11A81E1A5
6C71D8F9AD8C9C258B5638DAF6EA1CBDA08F84C96A8965F0A05682C605C633F5
CA9F1906BDD6DEC6F96877560A8ADEDBD695FCB9D632AD9989277BD4025AA337
3254C9ECABD07D2113B3823B29DA551B13930616075D49A674540B17D2998758
69FAA399620E9965BC44B25C5D99EA8BE5CA8649B5C0DD3A6997D61873AE73F0
C155D7029C8F639B822EC75C5F31C1F51CBE2053FB2E1A1D03D616DDDEFFA83B
5DB8922E1AC0507BE13D9C79FC674946EE98BF9267604AA999818E7E29F77F50
2A46640155003540905F82A2F136F47BA154066127AF062B72F338620E89C33A
6E8994E55F5> |
20849 <001C60D8A8C9B5EE31092E961A7CA7A7B2D325822D7FF95BE1D683486
BFC094E5F0654F7757098F2073612A26FE8BB6D3E9B3B5C1F9EE7A9F21869633
DA2FCE42B68F7170C265B3B6282044A54C3CE96298ED891A47E8E32115BCF1E7
897390871697C6ACBA5D7DED088A928C5AAC5E6D74EB663A1897246D1D212973
5FCC8FF6EAEC8B0B71C226A4E3559A6A0544FABD004A6AF7B37AA5D03906D83E
1D2DEBF58AF75418A3E3E1FF3FFDC7667856147FAE9BEDC3B7CC605800937437
04094F4F7CB3D38FD8637E2932FED7B4460CDC2634C785DF07B8D66B75B15AD5
0800BEF157C984304B192DAF6FDEA4A3B6D18C9448A393E433F416C6082B000A
896BDD193FAFCB942D562F8CF600C866B6C8CF9E4465A9D1ADCD49D9D292F8C0
E11FC9544AD> |
13614 <001C60D8A8C9B5EE310D14D71FFBBCD8258762979E413F7E53733A658
8AE42DFED312990E4DD33124CFA6EE7EBC4D6BA2B294FC611276395D4B87DCE8
F2B4053246A0ED00B37AFE81ADEFC983B6858DF1AA6CC864958A04CBE1CECD7D
416678559050A4923BB6AE1C53BA249851B8FA3DE874AC580F16BA0F58530D74
2A8E50BBF1F4FDAA0F945179C9E16D6F6A2225D17A9B96FF51368FA119A3E90B
89E3E39925A188A99563967D6F01DAF9F83C50204D2497D55A15108773C5C078
F75FC49001FB54A32EE9888F56C76B3ECD7BF1BB8357979D54A625E539B7CBFB
557C2883AAF56C65F02D1238911E0D3BEFC5972940F4EA53100F4DC169B0B7F9
2DDBBFAB5ECF01FFBBEABB2EA8FFD8A6C306384A07775DF0B6350F591E8431DC
A1A7275CA32361D> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
4.13891 450.06 mo
(4s\036R<@I\012\(\201%\3751?H9o!<DM\376Qq5.)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
243.079 450.06 mo
(o\326o\341o\341o\263)
[11.1059 13.1221 13.1221 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 4 GetGlyphDirectory
14624 <001C60D8A8C9B5EE3102C723EA1C8027C726B15885F743D33BDCE900D
65415B683143FF256094D4A44B25E4D2338492F64F613AA57E0BF0A380922B93
56BBBF128C91A21E029B0CAFEF14AA4254DA35E8110F18030D006666ADABA022
234A57CCD5FAFFF4DD32A0B4BC8E4B4C29A7CE26F0ACFA8E53E663FF4633C0E6
3E1414C0396CBEE12B572398C83EA19E21D354125EA362BF2B830A1DE422C512
B7836697C1AD12F1AA2F97EE8712503E6FAA8B2D506E33812D26D80DC1D4F3BA
C394A88725C5D72361C2E4F20437DDB87250D8E4EE0DD21EA49D5A670AD137B7
776B60436475EEDB80C596FF7A87A56CD17B9AACC08A2EF952FE583B1235CF80
F2DB6A59DBBA2C5D15DFA95197DA87B3C2DD94884717130ED01DB14610FDA16F
4FFA655C94D8722489B8EA9FC947FDD66F1038D029A0FE3F1A2F075FFE8D1352
12BC9D205BA4E4638114B22A41CD193A88DC5052D1850B3A4D68279D3B942DEB
6FB089ED6672A8554F19B354BE30252485E593408B0B93B528DAD13727062387
CFE016D8175C85FD9BBB59E0F7801B5528C57130E8E7F3CBEE4388967E0D55B1
83AFE08D95FEC822050A817D40853C784097E30DAF806A139B976E2EBEB67E34
124B0B9C3E2358FF1536AC20EC540C1D395E3A3DFDCE1010A977DF5EC8C7164F
9303A1C81A6279F0484397C45FD0731666C54460EAC594BDE1A73E3D0AD18164
B8B679096A2C0F60DEF8A6F402B689AEB02362F0234EFBBCB9A8582552BD570E
6A635D809D0B56A6087FDF64727> |
9814 <001C60D8A8C9B5EE310DE68D996DE78C1563C635ED21821F2A44C9580C
90A648ABD1378C75712287839567CC2B52DB4714EB008629D1694A1B0D974114
31863A2189F1B7A585049186721206BF934EC79B8613A5C38FB9149ED5BE1ECB
6C7383178A984FC8C19C24BF9899DFDD1D65B6B3FBB4DE7DC6AE4D11956A1502
BC4B82266BD458ADE5EC8BB9C2A9EE8957D197A2B04FB1D26CA12C96A3B5692B
60A6D2A16DE212C026DC6F3C5B256F73A7DC86C654B097239BA63E7EF6CCE046
972AA3B36B0D4445FF7CD01F819A03398E441E8659ED423FB79D8EEF3DE78F3F
DCEF466EF46223CE524E716649FF8C4707B675955BE7070575CFDE87E34210AA
1118615CAFE7C61D27FBFE0A2EA8BC116F4C6E4F7A3F50872AC51F4622CA6983
D6EFCAC1DB820AA3D8962944E38EFEA106843696E298AD569115D87D19D44DE5
86545157E566460B6D2F76B9AF3E1B06484D176A4CCFDFD701EB88D4464E> |
28435 <001C60D8A8C9B5EE310D6CAED735954C41DCCC8F64B7D7EDA32CF5A59
FCABE1CF904498FBB8AF3ADBDEC0082> |
9767 <001C60D8A8C9B5EE3111BEAD497A81E9CD8E02A067AD21B3A1B103528B
6E6FF8652194045EE9C431380961F1AA7EDEBBDFDFD725FF8560C6CA80A693C2
0177DA8D134A80E129C3527591979459436F1B0432B06B09459720B4D8B44E5F
EED8567715E1280135D9838674883574382BB113D7BAE83A92F7987788EED254
120F65526F5DAABFFAE0F3F8E964ADA1ECBCBC6CBEC074A5F6F4761DD3F0A0C0
F4806D99534821B21AA86BA2464140A8802BE890DA979D6C3CA4D372DA39410E
6DC2417D3C678C1AF4C6278F37D5E3AEDAC1F3615BF5D0CE253106B3EA926907
E84C62AA8973B66BB62F8A482F2966D8ACD003EE95E700570994A30D3B110325
E8C12294D067A989A57D348F6240662F5550F2547E30D24AF5C81AB79E33F2B0
610A9DBE36109F8B5909AC51C2A451BB51038D3CFF7E3B> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
285.319 450.06 mo
(9 &Vo\023)sh
339.265 450.06 mo
(&')sh
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28648 <001C60D8A8C9B64EDFFBE0529FE7BF73E7E4EE06B059C6F43BFB8CEDA
2D6CFA48E52FCC5206BA141F46320F79F8572BF0C11B6917E6E3CF5165E69B4F
B8EA861A538C262D5BEDB8BF3F05B9CF822550090B2410DBE96E5> |
28651 <001C60D8A8C9B7FBE1CE24559EB0EAFB54674C799AE2C984ED82FDEB0
4796945E89496727EB7A6945083D0F709C3768FD566A9FF4944482846BB7660C
E> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
362.179 450.06 mo
(o\340o\350o\345o\342o\330o\353o\330o\263)
[15.5701 12.0061 10.3859 13.6261 9.05411 10.3681 8.96411 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 3 GetGlyphDirectory
7468 <001C60D8A8C9B5EE31028434C4D6C30C64DF1C96B7E46404E90C2FA9E3
8488C286DD13DCCADC3A0AC855704BE521DFFEEF8C2FCC7041C780932D31D84C
64663717C7BDC9EC5CDE9EE4785DC1293B522116561533EAA4CF35E326ED302E
FB1E78D291DCB210CFB838D87A23CF01ECE388435919AD440336B2190CFF0AAC
9CCF40DFDA7BA855F0025635224377A8E04BD4F921C208D72A51CA69C5A20B6D
1714F71EF327303F4E298F819B27A7302BF7551867> |
24551 <001C60D8A8C9B5EE314FB0AD8B22891BC60C9D7231A2CAC0D7C43DCAA
CF4077BB1CC3F528A314C4B5E678293FE2B5EA63A833E5027F51250CEABBAC6B
A286E036C7C915253F02C922B7E4B7323FBFD8F396796AD68398E4DD40921CF6
DF2456E5207E749DAAEC642EF7875E4918509928FD5CEDEF05FCE2D8F6E4172A
73DACE617AD1EE7C3E3AC5BB57C81D6542BFFA9DCB4F6F997A6B10A7A4518213
8167538760657773D30FE2E334CE9BCC2F77758421C814212874BDE8D1A8767A
AB239BB7794800F9B76560BA84E337CE78D06C57AAB47E08E8812B912A6EF41A
8BC7B4E8AFEDF2A7CFCD78CD5C57FFFD5359A4CC5C4C1A6B29FFD1BF9ACDF4F6
08F1CD267BF4998AA37238587683509C1B7C89B7CCCCFE2FDB1F80BF4CC3FD9B
210FB123FC6E61330FC969331A98ABE7DD0C6D290291750A6A051F012CDAE65C
D04DB2425C9E590C34EFC2F362C3BE0E34CC05DFF66C45377364ED71BC0C162A
FFFC334B3E0401AB848E236EC17A450EBD726B7B22A458244F44438BADB85E02
79FCA95F88D5ED6823B4A4E0058163D6FF6671E92D03A564CA30FB6CA90E041B
F91> |
20081 <001C60D8A8C9B5EE310267933BA2181004F035A548D308F3BA602B024
1AF2CA4EE62254A4360D8FE59799D350C6CBBB047399D50854A372CB719F7E34
FD3D838E82357642A31F58DB9A5AFEE4BBE7777501C1D33C1CC5374C66720877
BDA0D6079BDE07E0CE47F25D9BE00BC788ED3A23164CE229E3587A28C87A8742
AABC7EE6A92CDA626E0798D81A7BF4D829457B71D6E2CEA2955BCBAA2745378E
3F4A073C929AEA3C1B49C731C4450447568D7D93BAB3C51D286C68B0F8874D95
C88FF759DBA503ECB3705FD8D73B98E3A99B9B71ED319052FAC5E2FC0C37974C
FAE88BFC8776537735323054757CF014CF384D51F04F12734D57EBBA6A63D21D
C69BEC8B4914BEB00F302D57F944E8DAB689AE9AD2343A1ECD17A74DDAF49230
BBF610A60BFBA31C0C0CE49CD68CC6A8C3B32593F322BDC270A7080D4889BDFA
86E881A7D525E0EC758B11CEDB8E6383C4748A221751A192A493C455903CD480
AD60CBEB85BA22301DCFDC31576C52EEA477C509BF787CD7D028BDD4839EF69D
817331D3BE061D1C6D3315CBFFBE9E1F10A7B71B5A72A89393F61054077F8BF9
125CA9D8F40B5859399EB> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
447.019 450.06 mo
(\035,_\347Nq&')sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
523.959 450.06 mo
(o\327o\343o\350o\263)
[12.2941 9.93604 12.0061 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 12 GetGlyphDirectory
8607 <001C60D8A8C9B5EE3102C4917493271F4F301812AF67E3FAF25E8B34D2
492D4512A6FC95C8AEE21BF78EE13BE4DDB20CE0F80ED87274C7DDB4A90B3EED
C1FC133B7FF99FC54037778DE42843D3316243CAF3EECF79E159AAA9CBA9F7B4
A1509E4C0ED793FCAC0C96B3263E8C56A65E4CFD299F20215026E3859CAFA379
31C58CA50CC17487DD2F16E65BC0078FADC6E992F728F7CAF636FD0DCEB69B5F
5415731CF23C51F91987837656E5B2B1C19E1FC7E792DA801388B8C9973BD6E5
9E612393B78500C3EA9E2B4CCF24AA378EEE1D7DB99326031E01EF14488292AC
1DDEB41D7BA059EB1098506C4F1CE3D9522161C2973B37853C8EB5EE7AE58C5B
3CD9995EC4A0FE217F3399A9B75F8F31620249440783F0ED51908B> |
24350 <001C60D8A8C9B5EE310D6CEEFB044F713790F417BEA058EE808332AC3
68FB286AA4CEE19520E02948CD1745FDB0A95BEF3514EF285893A86A2F1BBF7C
C3A82044775A8E8357B5FA9C91AD6331EC3A627095CAC3AE03E1B23B1667187F
2C204D9E54C3439D0C0674860E16CCDE6A6450CE6EC5C9FEA98659BADFC5D277
AA7CE4745E5D4E07A4CA75F404D3C7BDAC4E12EC078C8D55C3C778D7F82E64A6
13B23D613B6BF6D10CB87284C1879CA00FB2FEAF1D0B447DAB54E0915B180DAB
1A22B741708091FF336A4C347B927E9E66B73C35A1ACB703E0E998D805C178F3
FEDB478C6ABE1732F17F62AB897AD8F7EB61238E332D6032FDBE6AE108F1E81E
BEA281B158AC4792A3DA1B47F707E55A013F69DECE567C79661FB329CCF9EE67
E227887291B1AFA79E8D04403F3D627F5F2E984659ABC0AB9606AD8C79897AE6
D5D3C374617D8090FABEA0E90FC57CC72099B4572D5B6616E9AC4DB74EAAA32F
D7FA74CD895718411275A9F0CDF233847826928D4A10F4FF7B4FF0E9982D8B8D
E8A0E656AEB0A46A94D07B81155E7A32811AE5E9702D70455B3EC3B50A8C8035
EF198D10C7115E089C8C6814743DBD9AE8496B65FC31FC584> |
9575 <001C60D8A8C9B5EE31371A078C09E5B91DE093C44BAC15F87531AB5DDE
3B0C7EF36D8C45DE136D8391AA19AD20637FDBC4F408C3D506A3C3CF555BF732
4C362801282870005096D56814DCBB648722A1AC08D1149C79688D2B64BC5FF3
23FDA8E64F87178019A098D4CFB2E23F491611CAC4B894F7543085AFEAAE92EB
B168B14C65344392602A66DF258DF3A6A7A4115A725CE54C0BD00B9A9941BA61
9E35DEFF2E025F40E2AA28AF71A2D5154FB8AADF19CB77B1074DED211261EA53
F49D941B70E4D5F461A6D5AF767526DBCD8E9752B6A821DD16C99604FDD4DFBF
8C70C76B2DE97BED33748F6E18C7849DA664281B08C3C143282336E070E47391
62629F7AD47A445AC15EA7BD20A5B85B67E8633B642D8A9BCE19481870358D47
E4DA9A6E33F1EE5EE2DC86BC71CD8873C7DEFBFCE3FC69070B394454E67AD21D
1C24E2B5EDAA96CB14C9B4A8E4EA9486F6B4463CAAE6B250EEF28FFFE7FBF42E
9F67E6DF5D7CABD4D04B69A6578DCE4B3E4AEDBA6CE287B433DF974DE8C6FFBC
B243CEC3EEA8C333F4D1F4C46AF5685A5527FF05EFD56617063FC60446EF1363
A6BFC71FAD3A3C99CD2F49E4FFD982CAC9864A837BF673D3F8F3A21B30752A9D
850BC504A0B5EFBFD747EDA519A0DBC0B197CF05615C632CB76AC95E8A366A9A
1F6850E241B57DF31EA197629D65280998A44CDC78E0395B2C3448BB21366E71
2CDC9AAC2417> |
7433 <001C60D8A8C9B5EE310D358EDD1734B756EC703EB62F58CB539A59966C
71F6C42149247A08B679AAC67D28DABF03A0F30CD37C10220B416F9FC065BE54
B880BBF0BDAF6025A24394863BA21CEF58C74FB3F20161A9B75B8A1D50C297ED
00E02374F2AD8375E9307B9DA68A93F0C3D84CB1E123BC033C> |
572 <001C60D8A8C9B5EE310DE440651B03219120B25474DE3ED7A0DB5F61DAF
92FD401B834FF178228BE3EC6BF579E516E3566FD3AD70F4F4AE2C99C01FF1F8
ADA8756E9E24E1DC07241477DFB> |
15600 <001C60D8A8C9B5EE310D544CA99EEDB3971B704B88653B986DBB5D0E6
2884214FA1DB277184EEED27E9C81BA0A757CB4CD0A7BD07CCE071CB2B5422B3
2E9B81530E36E121EE7AFD355BA73C8CAE212F141CB881A411FC2F92C40BC303
BD2D5FA201A3E01159C0E2B9B94557057B3D2FB336862F16C001F94C156EF0B0
7EF663F8DAA8FD56816F7C50A44827EA5970D67F042BEE2BB3657B561D8942BB
0304B1EF9A039E443A7A76C15E9682701E25342DC3566A30AD783687E67BBF6E
C2635AA31A90347BC8A698CC2DFA3ABE73A72402B1A720E699434542201A4734
71AF2166BB3555123A88D3F775C076F6715E7497B5567316D292CC5C65B878DA
28F80191ABC664CA1CD3641B938C6152073FEFAAEB8BE8B9FB9547D3E439739C
194A51A98299940BFE77A345B3C5F9AA4686918A5EEC3B362469A06852F1F859
DD4D470837EAC0461B4C2140524DA6C7274661122082237BC292C99E9B88D7E5
04BF72A4853951C3FA00FAEFA410A1D0983F5EDD100104B7722FEDB0696DEE36
54D5CEF9AD88CA54B28F0F9A765404D1113D23592> |
17795 <001C60D8A8C9B5EE3102ACF6DA1574FF7DE927B8CBF37F5241CBE4591
10F5CEF92306AAF001C4E4C848D0FBCF1E97CF09D79B33182400D635FAF37844
7D75DB108A532C80D850D8D913F46D44F97EB2057FEE27BF74578F95877B9FAF
F6E357CBF18945F0C950567ECC42FDA83DB4E123D642E32FBA57B1471DCA7AB9
73BB27BED96B73F0B0A12EEB2737C7F657D0708B540CA09A238F21B11FDA3631
F5ADAD8450CEBF0F4E2E9FDEAAE7C0A8F86206F3AE422817B30431A83BCA74C6
8A20EBAD75F6902EEF457A04931416F88DA72C4C88AF8A3FFB3CFECBA7AE062C
03AE0CA580490699F24141DFB736E2D44F6EAFF71E151BE631069E7F8D2E90A2
199071532F49C7F8E6801EB3082C8C7AC4B39AE00A849B599A39A81A4B5E3C69
167BCE7EE65B69AA3D413A5BF63C408731250F92E7BCE1F000C5C77> |
23200 <001C60D8A8C9B5EE310D4CB0561C61DE4BC95F49B2EE503A84C029335
1911BCE0CB089ABC7A996C18FCBD526BC49826D259693B889D0BA0C1901FA548
7CAE9D83B5D292F588B809A41B6E7898894EA2F799AA85E627E7F9F57EF1FBE5
907B3FB2BF8350A008E04805A7583E2E7C29A3BE8BA884E805CC746A63C2FAAB
57263824B47A17A7FD789D8976E5FF4AF13137651F673131703A34EAB7C81313
37DB5336B9C42248FCA5ABC33828A783467F40DE3D9D03AB9EC8C683D89A8B62
0CD867A5EECD420083F94D79A0E77E2560E3A6D4898272BD7CCAFCDD8C56BA7> |
19094 <001C60D8A8C9B5EE310DB5049D64D561C14831E6242E5CBD53B158BEA
79884104F42065EB6C64DF335B01EC893A8131BA1BAB2901D805F4395AFE55AD
843B59D10D3213F11601633412EC1D4BF84FE17064ABEC635683802DB2E4A669
5E5F974F2A1C8E79CDB58F11E2DBA0F12913A0DE3B2F9F2221131CFCDFADE4A4
94AA416965443FD86445E8198CA6B5A6B3027457F16FD2E4D481792E5D2F2858
3148F3CF7049882C3C7D173830EE11933FB61095ED0ADA8AA6D4943A8C19F743
0183CCF706609220251DC84EDF7830A4D067E9842C74198FE6647B13DDF85B06
E447C0C43E51C09A16A31D31A44408001AC557245A769B4169F2C1AC3EA0B67B
41314893F79C647408EF68B71CEA162CB3672E072A22965F0A7107F53D6B2973
B22EE5101969E0C07DE5F171E3CF0A439735CBFB3697E1B36D15841B59009329
8E858AC4D1443E838FBB1BF695A5BCB1F0603A8E3C5A40B6C9FCF34A2E0C7465
B3E4B9DB6FF0DFB183E0A8974BF93B7E270119C76B6CC04B85AF5476784F051D
F59BB78A830BED30C414A9DEAB178BDA02805DE8A465CBC1DEED449BD8D0BC32
782D5A86E494CA2AF664FD97DC3> |
24782 <001C60D8A8C9B5EE3103026C78F9C1F518971444797A99293BB8A8DC1
4BA0B75810806CEC332530350C32D40BF98F9739EA79B9F9454A56526F60E0EF
F25B5F4BC0F9CB50638B943AA0246F290445EEB27CC88BAD44D1539975FA0C7E
62955AAB4F5F01C8810B1731616BFFF792C881EE4D79B681B0A043D4EBAAF3DA
56BEFE97B9A100255ABE3EF34357E5BC9FE1B0C8EA9D5F46DA07903FE511308F
66AF228B81E55A03ACBC49C9A9F64B0E815F021404E777E29479726211CB9DE5
42C0159324FD54415C6AAF0ADD5B9D804E4E8AE150BFFC182DED96E71D1F6EAF
9E0C5844ACF27F9ADB5B203825481AD30CE1B8D72069C3428D9CCBDF0453213D
CD0F14A810ED086B20641A82E3059F5D1932215E0E922144C195CCCBE5EF4CD4
58C1C25F6A50ECDE8ABCDB1E069225428C1B46A5EB0F825DD7B66EC975096CC3
BAE2361741E92772CD7CBB58F096CB855FA700FFC1E7A452C8F7CF6E729A6167
F22E1CE8D6B1051BA4ECB226FBCFD22C5186DDA612B335CD2> |
7436 <001C60D8A8C9B5EE314FBF93A6B0E45704A97A0D1B01DFD1A94B3E486D
23AC888E3E1DD2B57A0F4B95729A9FA36AC339966FD24FE7455F33DEBF5D6DE1
71EC23FA2B10AA3E4505079D6E1ECDA35B35EEF750E6C65662DFF363C1216E39
17A421C414C423048250DDD98B871FEC3CC2911DF557C1B7B0D43D508DA0B6F6
5F1211133FBF7BCAC38317> |
10278 <001C60D8A8C9B5EE310D1D990B9F277D493A512B188047C49C8C4081F
9ABC7E94A5CB0DD5400AD26ABFDF227E48141D0BF2904391C6E4B4744892212D
A2AFCDD37F2474B9F8BB3C39AC1F10C1C94D41220219E6A0A4BD3DCB8C387BB3
D839457382E22F185BB84DCC46F959F74C68C8CAA53581BCC0F036F6021B259F
88254CA42E866D3CA4A81B8444A3A403B7991A39498A7FEEDCAFEA2AFD575EEE
904> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
563.079 450.06 mo
(!\237_\036%g)sh
617.025 450.06 mo
(\035\011\002<<\360M\376QqE\2039 &VZ\240J\226`\316\035\014\(&o\023)sh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 2 GetGlyphDirectory
24321 <001C60D8A8C9B5EE310D81FD92789C6982A70C1C83DEB0DB30110A838
1065765C630F1A7E08401B5CBAC2E465FF7035A8D155C9D8E10D63D9EE6FF13E
F8DB59E1C08C6FF44ED546A013C6E922204E9F78814330236579EC424BE8AE10
B34657B82A9145D30C4C4B0B759BEEC1F6E6DCD2C515B90E77933300AF227625
82D519CC929829BB57ED91DF074EF61C509C5021CCAACC2BD38855375FEFA423
254DBF91789BA86D8BC7B144D866177B7E34FC59FA066E811A7E6612649BC3D6
CD4A01272E666B6291C03E85EAA36E7BC03BE1A9C26BA2F6415EE235CC3BACE8
5B0506602919F6F2EB206C2F906EC756471F101FEC22EC43A11E5A63E3AC9820
0BD0E8C6A3505578BA57E9F6EFD035FFE1DD900C0103A046550ECAB951FB7F27
38B92BB8ADA77AE766DD1979B063C9F8A444B23139BD877C803C3B0B55BE70F0
68255F13C2A0019DE2CFC2D2FF1C12B89E78B37C346D33D3CABA60F0EBD9EB85
A6FCC1302C0B29C3942399B30B9ED118FA35DA80062973AD2E9A972D4E97B8DD
6F8F02F097DA0CB7E9732DCC341CC575053A183B6D51F394F59BCAC998A60DFB
4EB9BDEDFD39F48E8F0> |
8967 <001C60D8A8C9B5EE3155E6C34FB24880EF8C31828042AFDA0C0256376D
E2A3136E5B82B19EFCDD6D8159545D59029123918DC43189505A3DB25CA7D1B0
62CB50021050D27D1D4883DD6C5563ADC2724FE474E43F0A2F91D39AFD23C54A
6E25CBDB624B31AD32D3156179E8DB9876F75920EA5D8129FE5E1647CC6C4D98
8E5B74F3B5336B500B270227C17CA8AF7EEB9286CCCFDC93CDC56BF8564CF6A2
DCCE696FFBABC1A209521334C22A1B06E0012D0DF36DF554F8D0ABE4F83793A7
EFFA895540791804CBC093B0EF4CB319C6979488CA6E162226BA54783DA48349
DF525A98948B73> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
4.13891 471.66 mo
(_\001#\007&')sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
62.9989 471.66 mo
(o\326o\343o\350o\263)
[11.1059 9.93604 12.0061 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 3 GetGlyphDirectory
10265 <001C60D8A8C9B5EE310D2EE0263EDFCF3829382A8800741D678A739C6
C13E0B737D4A4202A1A008C95C733C0516D641D213F84403438A48F49E99AD67
DD73323A13D566CC4088F7D8572EE24C8CF491E280673B9417174667AB890255
382268F7A5F36869BB64112596BF3D5AECE3013546CAAE7AE188CD8153C6F0EC
927EEFD35FEA9BDD433A7D4FFD97359ACA1B8609EDF69B02C098F3552C1E951B
6B29D8D0BBD7C009A5FF62B3B899C4C481985B8304A741A66F75864F2DFC7EB1
A3DEA4E7DE43B77366EC0B39F6C55C5D675CFF4263A96701BC462B181CCC8378
8054D76E7034A7EF08DC82BB5E620C0950699C21F843452ADD81B577769D96D1
1DED98317C95F4B629F52032B404A01004F20ABD2C3CD7968> |
19902 <001C60D8A8C9B5EE3123E5F9A55E70F1E70802277A860306989E90823
08332BD776A3A21972DCB9BD0AE7F7844D2777E4AB84879C7DFE67E525296BBA
5CABE32EDC298F2EE09F33D7025F5AD00B45CB2A14C3ABB50F3EE2FB4D29D705
12233B2114CBF05644AA0FE081FB999C88A41CFB0283FC97426CD99A60E5C7F9
AE28D590961D07304001E907280F2AF626E70046818ECED7D26A09E54F9C0ADD
B23A854CFA46220B208B49E8694CC8ADFED017FA736E06E6CDCC177BA81DBDBF
2C435C852ABB8ADE93A716DDA0CA215A0B5F896E7100208796E378255D8178D3
70D8AD2F5B5232C9E96BDFE8EBB87333B11E9ED3619F642C435AA9F48BEAF08B
007CAC182BEA9896D73A98080380A3934722859BC24F65826FA2B975352A3CEE
1BE48A61098D128E4825ECF725BE8C10BD8B3C35FEE87A1780C3FC7A22EED066
2ECD968EDB8923EFDE95F92AE6FCE9144351F18C368D25E9EF7DD4C027C4E3DB
7D2E66B5367284C1DB3E93A93324DDA24ED788CD9073B881FAF3C6FEA3B79DE6
FB23BFFF3CCAD020B6418E414B6141E537D89A88A1FF70031D16E542140C5DC1
492CB6193FB3204214302BC61A2816FAA24DF8E6D982F78175D3FA2FAB6F7B90
C30C81111AEC683B6520CBD4CABE176955B0A450AD84A9DD0EF17EBAB3D771BB
3C4E00FD6EA537AFFEC9CAFBA19F51A6B27B6> |
21468 <001C60D8A8C9B5EE310332BE7044D7FE0C111292EA2C91F0A3B4B8EFA
073B379A1BFF2826543E9B3028FCCF50F7A449E470F4906BF409266C9F2F98C8
1B2C2C0F003CF76580F6DECC3153BC278C40A99C37383BD32AD12AFFF4845A1D
A08A7E66D094DDEF41066BAEE92BC2BFAD11741DE5F5AC71DDB58E0F2E051DFB
4DA9281BCDFAFD37C019A8D5DF341B5E9184173B205D46ADF0A87E8AEA080EF0
DC911BB1A9AC0F943DB6AD5BE60E6D3761730D18A3C2ACD0DAD301647B177679
76D4F40D45A4F19464E453A3C0EDE30125D5C9708015AAC712690976134519AE
0CAB13AB0DDBB993AAA8D09C339AB6922D3FCC6F6CDF6043C3DB74692E6F5646
B507A37EC56A5C2C42EB3CB30A517D9A913D7E8A9172FB1EDC8E2F4FA42A2AFE
4F143200FEDD3BE222203CAF7B7066C1347541D812BD13937EEFD4C9F4866304
083E75A2384B7547B1B210F609D70777E0ECECB494B365143911CD3FF5B4DD82
CF0F0D4C083E8C55F2FDF9E2D81297B39021FE3D411D3ACD3037435E6E698823
068615986441DEB65B63EB56B3E3175EC8C2E6075F3FB229B9101637483370FA
EBB0FB0A5CB9E03A13D3EC374F4DD380595EEEBAD6DE8941A1E216F8A620ECA8
2B5397FC2D6BE34876C09C3A07B7B193F2A105E9D31AC2425DBAF94AD38C3D32
AE112BBCBC14321B77C1AF6375E81A9FC2EFB0571319F5DFE39> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
100.919 471.66 mo
(\035\011\(\031M\276I\012_\347Nq\002<S\334Qq9 &V5.)
[17.9459 18 18 18 18 18 18 18 18 18 18 0 
]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
321.799 471.66 mo
(o\326o\341o\341)
[11.1059 13.1221 0 ]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
359.179 471.66 mo
(o\300)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
368.179 471.66 mo
(o\365o\364p\006o\370o\367)
[10.3321 9.01813 7.30811 9.25214 0 ]xsh
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
419.359 471.66 mo
(E\203)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
442.279 471.66 mo
(o\331o\330o\263)
[8.58609 9.05411 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 1 GetGlyphDirectory
9099 <001C60D8A8C9B5EE310D1A3AD6FDD29C7AEB6C9ABDBAE2FF34C52D879E
C325E21FFC4428B069CA24F86C6447269FC589DA9ECD650D605E5A4113F32603
4A29B30B76FC255A72C340097BB8ACAB0FCC661E6D7DD77006F46A095EE06656
8DE885D53432AFD406EA406582ECA7B771D22CE72C33C2E68902A06117D77392
2122F0A32D839F23E5411194A8FF00B7560B11F4DE054FA6FB6C89CDDFBF9528
8150723E15348875C0C631BB24AD624BD1998B73627D6CE58FDC962365B9F5AC
9AF4177FCD351BA2DF3F56DFD5D6E72905B433988C787AD6CAD31ECDF7C2D94A
9D1FC4A11B7D9B8804AB5602787B14CA1DBFFECD6DEFDDC322E653AC659880DB
F0B5D7CB64EF88D86685DFA7C65DCB5976495D9734EFF5AB9CDA21EFC8F0AFFC
33E89E6C50A5C3CD880F55578F4D7042> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
464.839 471.66 mo
(#\213)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
487.699 471.66 mo
(o\327o\343o\345o\263)
[12.384 9.93604 10.314 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 7 GetGlyphDirectory
26205 <001C60D8A8C9B5EE312F8D3974F0E622DE5BC55F52E17C18C4775DA54
D40C6512CEC2A6DD8D7DB21809C3616A3C8D9FFF965306EB5761EE8F5B8742CC
9D6F9B18277D53DC0B80A5D0098155722E300800DEA7B54105BF36CC13F41A4D
15029EC573D5C906C26F41012F985BD8335892A81D0E3DACD96A442E4080709A
3EB6538F9C8053155243211179F5EECA9650151C600BE52863AF13D9BBE88BD5
B1996EA97E3FEEDF3D9690595F9AE4A92F96549A4C7CF313700A80040CD9991F
AD160783BC50AB4472C715FD0A65D987674263BD2B9C1F99D0784F3089AE6D3F
2CD6CD5583A0DEEC05B7A199BB952215A7E8776181228F40A71321468AD78E99
7A705B1CEC40A1A03133F1E61AD0CDD4FCCE55B5A07C3> |
18525 <001C60D8A8C9B5EE310DBD9E7927B7281DCAB588DA7E90822E4C83AA3
D323A9432A448AA705109428841E8CAB07E4DA203FD7E37F4399DFDD42F7EC51
7B233F7311EF5F4AEBFD1EA1DF23053D37C19C51C77E2F9916A1D5FEB3A0D247
E94A74EF95603EBDD6791C92703AF1B47C4833BEB8F8F749E632224F0C511224
02BA03208E2A0D986679FDE31AA3170C8FDF8151147D5722D19053BBCFD06C55
538E5F5426CFD895D15D4A96EEE6A919E8B8D24D191926AD52AA17FE69B70BB2
5022A74DAAD979E56A0AA390FE548DD0C02B8D85C320C454EB10C95665A5BC6E
80B7B8CB647A4CDD33BC1EB258B8AD05C67AFFA56F8C7990AB520DE22077D045
F321189FF443295C1E685CD830E66B6162A3D157A881D692186207FCFA4F1DE8
05258A1E140D31A32B244F6531EFF7B59856B986EB5792C82EE224FE2D4AC72D
B239790939088FF39472101FF792F52E01A1EFE> |
19918 <001C60D8A8C9B5EE310DBD9FAA5A7C7CE6C4321D233DCEFD44703CF73
088185C36F58BFE70DDD507177331ACE1BBDA20CFDB97CB8E88768F2785E5AF1
6C17963E25C79CE2A05214DFC3AF14082EBA3F9B70BCBF7F0386A303BCCD2D75
856B44BFBF1AFA9C9656E58C4629A58A0D8045D8DDABCA23EE6E32DAE46EDD79
F7BD34A7697679CB272D270980DA0271EA5AE5D2704B4170162C11AE86DF25A5
D3592F7AC8741DB306CF3A3FD0E96999B1F953C65C4F85041804C446BF315433
272C2DD4B032CC6494313355EFD33A8A504766C67A7C123488169EDD30D03453
86BBCC875AE2F255825B4BDD899E35F4DC5BE01FA84D84DFF708CFFFDA982CDC
001C1C99A1383E6DA15D30FA2629A43DD4FF3ECE147DBB3FC1A033459CFB710D
9A11FCDE025848CD2834634B58319F1DC985CE00111ABC5BA68BA5C9521A8EC0
ED29C5E4D0BB206B56DBCB5625925E88074EACFBB88D3C6B78BDF39E6A90975E
5A2A620EE1DEC811878> |
20048 <001C60D8A8C9B5EE310D5F76D66F81816DAC4DC2DED42C2C76FF501EF
D47C66D761A892B2B23F7C0A98BCC232036B8D735A190BF0AB745310CD53F347
5B984B042C12DC9A9451B7CC97EB93C06CEF80662DF6485690C3B4CBCE647ECC
6EC73C8120B0715CEE46F78F73F4F5F9346DF75B0CB6949D2C8975D944FF21F4
71AF28BCC8EAFEB1EC46E97C4735D3B76BCFB33C140C56B6FF523E3B64B495DA
A1363E5994AA0222EBCE96063DACABB20DD46A7E8D463669DA97EF3EDAF1B4D5
2160FEEF27F90809F748EC84D249FF8829049875D05CBD54FA72B3065046F32C
110AA03EC4DB55F6A829E8FA07CEA58779661979692EBF43C15EDDBE90D55F68
3B945FEAF4989D2D06F65C321AE9F227D8F8EDA186687025C9C347F35B482DF4
3FB0D72BB99083C827A1FAFFA957AA56F2506B13C9CB01C3DE7019C545A945F9
71159F38F14AA51> |
19931 <001C60D8A8C9B5EE310D088B8060A7E0CF39B156A49BE26550D522B6A
99355BBE3EF6EBEC2E50AFEC55B908C0C83CCADEE031792B2CCC49D34B9D5F32
1E68AF706D3D68ACDC82847A27DC130B08174BD35E9DB8DE6A325D122F67AF39
89D9B0AA96180F1D7202DE5A60975E56CD6F3B600ECABD39DC136E03B42CBF61
9B4BEC1199FA8E942E022DB276AC4508613D768A4E5605DD1BB39F6DF60F12A1
0E63A02A2F67DB9BD202822AE5A08F29D78AB1DB0B13758BCDD01D127B54FC2E
466A88539155C7E17DB5F2D9BD87F531E39BC132B481A7EF926CF4D938F6FF25
F642CC472F53FDF94843B96DEE4B15A95B13FBBE4B222A2DD8BC5EAE71568180
EF617EBE731D973EE12BD6D821F43CE1F3EF8C715F12C9E8F5EFF42C7C86C5D8
0345780CDC1402F753FFAA28B154F14B1C21A72089888BAA0322379817909EA7
46E73F526971D105FFD67785F612F271F7192E9DF059BEBC9B5E7BE55164A000
F8C8A5C686E6AF744C2A170C38765499CDF8A408DDFA884C602C5F3CE825557A
C50067972BB341228065E2E4D12955E51A01619921E277AEFEBD0443F456FD80
3CC2AF899D21275081B9D00A8C18D91A3C958A28AEC631F36> |
8973 <001C60D8A8C9B5EE310D06E4D22DBE98A1FE2F2928133747EC42742620
8CBF767FE8803CDF3EE12E5FEC273C20D3EF22691B17F4A24B3F0F6E8AE67C29
8175DAB03FD3B235AF250C85DAA94ABF8ECC6240D319AB6263445F4FF4DDFCCF
9E60DDAFBFD71AA809D12690BC0A05AC74A9951FFE439EAD1899B34CE684C006
506D5F5C517EA34F02C257D2244688FE0CF5B87450B301A2A3C9CE2473BAB0D5
453E6A4DA3CB3D8CD47A7B3F9DA01DC6EA7A9CD98A5D5D0AD837BD6020F8DDD1
1EB8DF205076482686C6C722DF58C1C439F76E4BA57E5F4F0C9DDF8412BF7713
74679D8FABDD27DEA2CC0454A0681741C0D9A6A360C3E64E51> |
18926 <001C60D8A8C9B5EE3136413135376160BFF45564430871F7A918E1034
A453CD48EF85CDF19C292F0F4F6C8118558FFFACC184EC5B0F7EA3B901B4693C
4190C7A61B108B7D9032AD79538C501C5DCD69F35421D85EEAEC488A5D603987
E839821D1A553786442CE103F69C4AFDAC16553F6B60793AE9830D83ACBA913B
B50EDC2CEE95935C491F0C16F1D44CECAB6A07DA3118C58D6111760B0D62ED13
C9D714BED3352B2AFA6B87FA60BA5565AB5DCF8D9EBCBB18690493686CC5F18E
55B68F864F24AA108C88D51107DB0E9984B0055C1BE0B60EC680EAAFFEEE8779
FCF77A833BFAF500D86EDE4115D0D1D9C7565FACEFB856A9BDF58820E529C9B4
4F914AE5E3DFA9790A8C1A0CF810D6D15C37935439F7AAFAB3CC6ACF8D2F965E
D32294365D98D1B9509B82D5178313236D1550C0F4C7863EA7A618D838976ECB
5C9D2D85D2A3EF442D22F09D14D1424718890A0C8C17716ED01F808FA29B9498
B3617D50144CDB4B625BB1DF5BE06E342DE0666D6E4498FEB13B3F609452B04C
658C42E470F0B501DCEE56C9E26DA790CE95C9C9BE0FCCE4884158E16DBFCC06
C0F320C29416B9F18A7B666B99AE7B2B320DC44863A55DA6942B9018D88EE8A9
F02C7401DEF8E5B76F0D4F33D3A42B43A309F4FC6E3B3F515DA007CCC8244D88
61F64CFAC35A4BE2548BB7D5EF6578BC01BF6C6704FBFD2EAA90D693B0B07ED9
BFADE9C2D9ECF33C90C53EFB09DBFDC4B9291E0F92890772A88468E76F1E8EC> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
525.279 471.66 mo
(f]H]M\316NPM\333#\015I\356\002<)
[18 17.9459 18 18 18 18 18 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 7 GetGlyphDirectory
23298 <001C60D8A8C9B5EE310DF81AC9961CA19866EA3516BE0C9A0EF126395
73185E7DA99A3AA31AF08A43C9F106F5B3B4E569A5D188CC948735300262B29E
DA969F38C58D185550D2EEB2C24EEB5B44DA210BF54346821BB04786E42D7C4F
005456EE4FFE5F0BE45D2C3821CE8731906391E2CC2722C94B1033BB8F5711BE
460EAACEC86902AAD27FEF72BD6D44976B2A9155FA0D882AC44CAC32655C9F80
637D0244D26471791D2BF8932DD9B3C983684C7F4B785D959BF801299F1E1781
B2B808D48F0FD40FA37A9EEEC6802B41B178665C6E04C8A764142D430A9E3DAA
82A9C0F2C38BDD3D9421B350CA3986066082371EBEA1F5F225C6684F26A2C259
7F10303BDC2567704264D6D8E9274F78026B6A05B0800A5EFC07313B4312F6BA
BE7C2BC6DD38615FC491CFA4DEC5E0D633B12C405C0B3E85F90E40B0BB939E1C
509B5E0BB280A17FBA5DC99298DB056FA3A960065C4CCADB613CCE6F5F321E59
3C908AC00923914E13ABB32D7B404E7BFD2EF9F0133027B3DB15FF21D0F0F30D
ED2DBADC1F930EA53EF16F4A93747B483FEBDB3793753A97C117A50BCB5277EC
7132C1D8977CD0E03309EBF332F6387DB8981A130BE1CAA64F3233E> |
11685 <001C60D8A8C9B5EE310D7F507EE45F0D4E576B9691BAFEEE5C701D670
FD01797803963B75245EAFF12CB1B485083C9E1711FBB65390101B58FF3B29BC
31B5D3CD1E0967E161768D8962C71F30731F0FE1CDF5ECD7A567A8E6FC25411E
83F4C4AEE4873F34601DC3EE5C9D787092021D56D77A7BC5C6BDBF4B3160AB89
E792B8B62593FCCF0BB7C9863BFE42955A5BE5CBB8F75ABFCA4A5CE3684B6390
B10116A6E10E06C8FEA3B5F2E86C0EFC1CCA1D92291EE2975EDC5014234825DE
C267B0D828514ACCDD03CF4EFFEDAF997C146AE39C7600ABCA8F5D1D6727B0E6
DD852773C28C3A2CF84841F3DD693D4212E404162772B23FBC30F62CF53950FA
400774DF76DF54E8856B856CE98AA1464431EE2A863305EE40DCE598ED6A976D
00340A609B441FE6CA2EB1B0F13C6492C0953D8255BC2D456AB663893BBA06D7
CBAE8D18D94E7F712638CD3E46F10756580C57CDD288DB70878ED7144A996E57
C775A45EA346D5230445888580CCAC29EAD28D3134934A8B232D723096B5154D
CF1BC69894148FD34A859A2C635EAE93A949E> |
10839 <001C60D8A8C9B5EE310D09B63D8E9830DBE62E535A08B503DF51456F3
B43CEC9B4A73D2C7FAAA3BBED33ABC081F867DFBF34AC3317028CCA29952AC42
57ADDE7C257DE9F3722427D81F4DA0DECCEE839EE710EAC9B09A1014149DDEFA
87D739D0FD06E4B4F654D6F72F47C0E8D3D06F1301D13A6A3B21D35826DE6D2B
96A1B853F68EEAC7D6EA3CD6CD9B4B82B13FCBF426368AF8FE793156AB6AD7A5
C852D24C245ACBF010FD633B985BE8375EADC09DDE6119523178F04AFA2C53BA
4DD8E90584F207D5838BAEE61DA508555AEEF20B31B441584814C79E21330319
14E5C77EFB25BB081588DE8873BCD79E7D6B287479E03A2C2FFC10BA2FD8704F
A1687B864FD4230909F0E80AB00507DEEA7C6A87EC3FEF5FB0E743F51B081E58
B8E591D896BFA265D6C67972AC451129D4AD6> |
7459 <001C60D8A8C9B5EE3103DDD4FDC0501C9EFD54BB9A82D9AC085FD45386
F852ADEFD0B2820A49D08BAA1B6ECBDFC5AD1B7EE7CC2FDF74CDFDFD06C2082B
CBED7E9D4CEA91532A95FE8D41EC4C9DECC607990F76CBC26671998E93738B37
2B88D6DACCB3FE10AE9BEFE89CADEFF2F6F3E2D85206F6B6EF99AED786A6C9C2
112C68CB798EA32C78746321AB0933CB57EAAC424959D0676ED435A56674918A
F00FF3BAA5794938DA8DC31FB5BA6A5F96EEBC17BEA0AC484259C34C8C8F2A6E
401DDD464AD5967ECE9C1529D2EAD09F727603EC447AAAB07E755CC05877BA30
5CD96882D7202BA64FF7B585BAF0A0380A93A495091682397AF0802DE5E4FDA5
1FDA7002E60D1D7455FEF28F8BC4DD5406F9AD26EA3C95731F04EA1527313A30
AD4F5E3AE7A1E0A6037FD64812ED6180DD2E68C45F3C8BE3086A4A45F72C9BCD
D743D97B8AE9E812B6B1B2E62861C7> |
7465 <001C60D8A8C9B5EE310921957CC25C79257D8C6DAD9877D56F67D88EEC
E15C0692AF077B4E4B3C4FC3DD6668B157AE2DE14026D911316272D35E4C0D41
C85C18D9E818978F2F5353067FCD6CD0341DA45F86A34F569673FDFBCC1595D6
D7E833FC53819A0CFD095750CA1015A36C10257421698E463907345767F7F1C1
BA1F1E6725B04E6D9D54BF31325CFD8C138E8AF6E2E9CF20E6A9DD647C67F21A> |
25837 <001C60D8A8C9B5EE310DCEE37EF4A41977A8769E1D46AED76296250EA
89BD5D04BBDACF4D3941223CEF1EC64A0AD1C4F5136167C4F2D29155233CFA80
33FF811492DAAEC70A68036D723CB631F4F646C9EDFA35EE72B21EB61AEE6BCC
215532B2137F5F349BE961FEBEFD4C8BB3B4438965C60DC35E5A5396936F86AE
3A329EF041C5287D6BF0ED9D8F522887E0E5DE7B576A0568FF06B07770B69096
E8705FD76E46BA0B6506E6E2091627DF96ACF7491781EA8F89B25FB4F01992C6
89D88C71F75317132B2626371A8D65DD9709390BA1F19DC806A47E8D79A53EC3
E34AEC9DB3F66241E5BB8CC33D6588813059EA461743149B62098EE04068D7C2
B28DDEB2D3A9CE537F435F53714E2E93B951B34> |
26519 <001C60D8A8C9B5EE311578974DB22026520E9AE35E3602F3B68E3227C
5A06D51502EC3925B3AAACA13E672FEE17C7AE63252C510CC32392CCE6377CDE
4B734F6F488FEF5ABADA6349871086D7BA420AFBCA4CBF8278690DE4F4FE0942
CD8AD3DEF4061F2999D5010B92E9451AD83930B73D3F94255E9512726ACA5BA3
9A2EAF0D8F7EDB2242734C47A5562E721046C4B6C93A935AB938F026BD3CC030
E096C32F9290106FF2B7DF6C23CC0A62AE3D71C767168D630736B5F2FB842B05
E9F23767A98F3142CA325439813AC558DF218001D6E5320F3C5F70AE2F69E1B9
42867BAA5DD86E1F2A918C0F2AB58E69D083F9B34074ACB1301D0451791C1E9D
DF069228E8519713B5CE51E025645CE315C1E5ED0E5090C61F18B9E0C748CE2D
DAEFE48AA9E2BD81C2D523410B4E5E7021094D4934B5C0B04D8EBBFA7C2D5E81
D1B1F44B1256267C76595ECF69FA16FA9DDE2F6DAC441A15B608C72ABD678708
4135ABF211FFAF48E49D7625CF591AEBA13F94DCD5E3B1F8184DCA765B3DF260
3178920F3A84D7917CFD62AE5EB0875D88AC7736557A1C14E24135AD194A382F
0CB4B84E1A7EBD39BF808E08DFFED5EF9172DE3948C44D3485EFF62CDC3B0950
B072C140100D82D547C02B035876025D506CEFA7FDC3AF11B09ED58E37C702B0
11D4A6EE7B9A5133DF369F294AC8CB269A5AAB5F17D37B078AE3D24F119AE966
54DD47059D7C73E842B344ABA71CE7EBA6E3D5A10F5F1A6D3EA51923C4BC217E
9> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
674.079 471.66 mo
(&'[\002-\245\035,*W&'\035#\035\)d\355g\227o!)sh
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28609 <001C60D8A8C9B89100E29405032CF540B228E72552> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
4.3189 493.26 mo
(o\304o\301o\263o\327o\343o\345)
[9.49641 3.94627 4.93752 12.3438 9.94708 0 ]xsh
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
55.3789 493.26 mo
(#\213)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
73.3789 493.26 mo
(o\331o\330)
[8.58013 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 5 GetGlyphDirectory
7705 <001C60D8A8C9B5EE311CDF2CCFBD5B9CB0FFCC6E2A68D660518DE0C55A
036E067038CE491AF98C7EEBD59B49016038AA13C22062BD9FD2C50DE49B3511
BA4BF2E8261187C7D6A924BAC8ECD3AB9C0AC176177A18CFB137FD529430DCEC
D5E7378685107AE6591C2E0BAC677988EBB6E51147C985579D50B9DE4D52E897
22E650586FA8D24786CEEC8810348F293CEE957374483843337F688FEEDE0571
A925C75173A6F3AB12CC16838CF6D209F2E3198DE95C67B6F62BCA2F64F6CD45
C2F8C52FAD41A2159379B140B11692BA428B32268CFC1B2CBC5624E3CB3486CA
B76A5B2704134578F430E5FA0DC1A06384FE9ED0820EFAA73607750AAC8EF15A
7B89953F4CC8FB4757B438677644BE9E7D7F37D03FE20D3DD36D4BF3E5AB0754
9B1845C262B5> |
8971 <001C60D8A8C9B5EE310DDDCC6C1951A15E7ABD8C71161D618DCC3279F2
C0B3A031090230FF695FDFF5C65CD7636B586BAB534C0322956C484FDDC24284
49B9994DCA31B3BFBCABF8EA1E90E1C65B38D062332B163DBBBA533D0226AF12
267842AA6EB58462E3A7F106D29BD28C349E4A118493F2E63991D9C5AD14B6AF
7C1E9665993F00508FA5AEE3525DCD4A32C40B5A9C857A212B2B0B9B207BC2B7
65F5FBAAE6225CAE181A27D4FEAFF4B4805D1FE7375AB1D8EF511181783BAA58
F4E1F1E5821895F52F19A6A8A2247495D74B5BA0D7423D7DE153468A43B98047
5783C05F97F921EFB0D5499E9C84602ED21689308A9E5C0F667B0FD990BF> |
13557 <001C60D8A8C9B5EE310D362AAA4DE36B55DCD16B5F5DFC7AB3FDFA4CA
A0BD41C7336041A3E020A7C01AAF20F8322DE0C32785464AE95B725B57C0363E
272024A774F1D3CC8FB41537C680FAB8BD50E5FAF98C5818CBE2D09208B1F058
CFE4C24CF8E25E70BF4AA57B1DA596AF08019A593BFC59E4197D2F20E59B3552
6D8AD42D8C7DC5C988DF1AF875DA495FFD281015688DF625C62AF560C8CF1042
68CC60248302763EBA8C05D4ECABA78AAC708C861EA66473AE8FF4B726A5B143
509F316704FE41D21BED15457CA95872254C697E605DBB77BC0835B06FD9D559
BE624352FE4B6A1F29700D0BEF0C32261BCB9C5D8EAB4F2072E6946A1B176115
E7B20721D2636893A9F1D754487AC4B3A66F5202A> |
8799 <001C60D8A8C9B5EE310D4CBFAB8A42727F65F98551A01073611264CC44
4F53FA29290DBCFA795FF858D2DEF32B63F8826F3DE9D4FBCC7571030C89DB40
C16F9661E0B751BB4AF4C8F2BE2EFD937B5F4526A70D2AA6FF1F637679F23CF8
827309AAA0EA94DF59F05E1047C4B505CE3E11A590B16499031E9AA7C7BA1B16
2F6AE947806E5484811A8985F7F4CC694AFF0A166CD6A58A913BE3BCD0F2CE11
69CEC61C6E1EDAF7DE> |
17447 <001C60D8A8C9B5EE310D580C651B0D6B6AD258974181A4ED701006C60
55ADE48566B4039B7E2EEE1F65200D050B4789F0110E9A251938B08B1E14D41C
53C0A35CCEB234817AF193995FFD2E8F0FE408CF583EDCE4D0A8491647D92C5B
83E9E21FE99377E5301A23FC5BC56E6B4C62AFEF92DFAF0D1A7BD19197F6E0CA
74D942867CE934E172066D484DBB340915796A6D9CFEB0C5D7A1CB66165F16E2
1EE8B0CA7C4B183FDB1AE147D26C106062272E8A9800E21A90F92AB90C1EC606
DE6BDC4AA9255E721B306CAB77BB4D8DF195E6E91B207> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
91.0189 493.26 mo
(\036\031#\0134\365"_D')
[17.9999 17.9999 17.9999 17.9999 0 ]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
181.019 493.26 mo
(o\327o\343o\350)
[12.3978 9.94707 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 8 GetGlyphDirectory
23619 <001C60D8A8C9B5EE310F5B5B1894D7364FC7DACCC2E640F2BC48295FA
3791B0D290B1B5B94BA6AB66DC7867A7439F6AA9E32F38CBB9FAA2426D14856E
517DB1C0121253B6B841ADE5D2E87CFEDFEDB5C99CA530A73D6D56B317F35558
06003A5FB2805F42C16A2B08B46FFAC430BA12CF74D2E993AA558999DE7E14D3
804D0ABD3756FB82B4F42764AEBB2C435D34353ED96D0E150CF4A090F634657D
E4A596D655D7EEE89BC02DA8FD3D957A6F1930BBCC350CAB8CE71272575EB789
2E85519F7C59168E644E226852456C1CAE16ACCE3824B656994B0D30E41C8234
DF1F7B0DE921FB913AB8B6DF67A0D827323F849F8B3D741574F629211237B5D7
21D32B2AB446224C98E7C348165DA8DFAA7D461C826931A1F773DEA74CCCE90D
5B025CA1478CF22788E54FE72EF8FD725200DBB532A3F5D2AEE78A7CE27FBA85
C761B9C783B36EB080065A33B43B005DFFD9CFDF15F47310CDD77E00448A4BA9
8E111245E49EE4C4C2C63E95AE297A59F38CD7A522FE62AFC02E70CD7CB14B35
A5571116C013509C2B52C012DF6F16C2A5669C2BFF0C63BD1CD> |
15759 <001C60D8A8C9B5EE3108FC35C967BABDA23B20FC4DA579AD8586FFF07
4317C384B84755E39F4D3CD0CF946FF9846A62492A2C7DD888F7A6BAB776582D
41D1AD1632E11C5FEB23773B91DCED30C9E552329F301AE47DACC1809331CADA
EBC9A2C7E35DBA78091F86272FAF384F7C5AEE8E0FDCEC70D57956BE8C9CB112
6B9816D91ED6C56DF101586A62CF9BF8AA9A1019586AC9CA839D5F4C873C7FFB
7A1ED3E72796C33E64029B8085535AE74E4280113B23C9BD185E4EC78A4ACE36
856D37A76044C3B2F30A7544E1840C17E7B6D2DA8820DD221EE80DE298A9199F
C58F2CA9B33B39C2D80F844F9157DAE0026F82BFE881205B27FE898033766F30
8277EE1F8F9E64A705409CB3A717E039CB05BDD6DE1D67D473AA83361669AA45
870D2EA67FF494A90F913EDCCA902E0D118D737CB59EFE2E23ED19FA7F9F6903
A8E8D6EA6B6574F4E42875BE642FC6A499B318FEAF3D9439B7E961BBA08D87B0
7164B34B4EEE0A9F8F541E19A09EF34DD73EF75D9E57350D9FC5B8B0F3F45483
9D09D7643792EF7265B1669AB5B14DA0CA31751F7283F1DCBDBA4D8D719FF550
C1AD2E893039A4850EDEEDF0499C1D85F6C15D27B978E93F3B99B> |
24351 <001C60D8A8C9B5EE310D075C8BAB8D286C6DF434C0D92196D1DD89B62
B2F0853AC9EF03FFC759B9ACE06DEE53FEA9F67FD707658FAF17B6BC790D3B79
26DC8920FEEE156B3B04235740A2BBAEF247590AA2DC42E52B3E02AEAC0C42EC
039C3C4FBFA948D8D3A778412B6EE7A4C7626D3BAF64F29BAA2A65495D0F13B1
EE63F232FB41B07AA4B01551939C7A07F8BE310B08EEAF2E3A9FE31B2ECF17E3
929C071FF98510CFA97FBBDD6E35D13E79233279B65B76C2B2CB32AF3514CDE7
A466D8D650482ABDAF145FA752E628A9942E8BC1B7A278670CCDA6CD0080D0FE
EE218DF137CAABE60E0FC21691260A9F55EDB71BAF1D6C2B02556CC4C82D17EB
BB972228246417283F7E5F71B8ACC3E84C5196FE93F95432CAB9B10803F2B822
25E21DA884EA7F88699BC7B3CF26E2904F33A304502698EA90FAAE5C86FE50B8
8F21E53F99844EA60DACB85B708A90BB57874756549ACA37F32B0B49B40963A4
22D7C7D0AE00787DA543919730C7849C6B00EEFFA45710BA38D933D6864F172E
D9C9F0EE97F61162DC57CCF576736C5256C885DA3E45923CAC462C92487B0DAB
8E6FC42BC72FC6E4A> |
12559 <001C60D8A8C9B5EE3117DB87B7A587A34C4707F1BF48A23B81329C676
DA51B7E8E1A18049029A4BFF290697ECCE3F83ED96A78CF357361BD8F0BC0146
4685D7B055073117869525B2E098E44C52C8A351A37054E74083F2BBC1BA2A4B
1BB7F8A2826875817B0E362D67535AB61562AC18D67CCDAAEA6088CB91AF46B1
C06DC4F83B3E2D16E9007B9DA8E529F7F9A3BC56AF5D48D73772C6ADBFCF9D3F
A19CF8849B48955BAB77330D6DCAB74684E3CF84C90DFD21251E34467A5B4CE3
5E386922D88AB8C667B095470C8CC43AF35471F035A1D5B9A4058CD8F90F830A
A9F5E23AFC495F113115E3FE951D738E6AF0C891E3BBAA79AE904F897C27A59F
C436090E5CF0B2B4E2DF4404FC32831B90751D55A2B4B397DE64DE64D44CF016
ECA0915065A79A61C3ECC05AA51D4F70AA093FCD3A29F458E31328C95111EC40
3ABE000A47ECB31557267C26135517F11A15888E2CE4D289674345A9B9859A59
6309F2A4D64C72D14225E3F866D8C20C12CF6C68A> |
18283 <001C60D8A8C9B5EE310220D3C0ACD22690C3A600FDFF31F59042CC66A
A42C76CBDD882C332F1AFDEE1B6DD28197B80D31EB5076C7A48BA453D041CA2A
90F1B5CDCAC002914B04956C60E162BADF5483DB616C0B87E699E8091DFB0F2C
3B3A387E7AE40EEB86D4BAFDF850F9190EB94E573650E3B85B4D8F21846862AF
11529744A3C6B792254DF765288A36806C5F5ED7F400385EC145E426B4A82A43
59FB6464F4DB00AC14E11028CBE7B88D21B11369E0E7F02F194F40000A4FFF97
3691163BAE315094A0BB0DF8CDD97A47D8CA44B0405CE1F50B4932538453B1E3
001C7B59372960C18872DE7C8E00B4711BA21768D94B3776B96847E7DFFB9F99
49AA588EA76D68584111C1C98ECF17950809176F8CE32DFF27660CD90342C18F
7DABE3C987C2B6E1C5A23B92716050020846777A53D855616B41EFD749A600EF
80201C997674C043DAE25F9B32D843617B5C063EFCB752AC2F6702638B0E0783
B4B951B206A22B024542CD1A3342CCC1F404A4F5A44C856D5E10A2DF1098D739
398C6927800B218E95B6CD8AF90DCB119AAF9CFE2CEC75D1534CD0CF7AEAEC8C
974DCF410E042BD19BAC1EE6DEE62A8A19B073564E323B6477BA40C45> |
7669 <001C60D8A8C9B5EE310D0C5ADA790B913440FECE52F539269BC39FEC2F
A52DC31B74C9A15770B8FF6369B8C23611B0FBE1FD431D463F17217DF73C0EE7
74193254D397BF99CE93BCED75605176F03F93C9B605E6C04FF597B01AC22FEE
C28760F4A6344EF8E028C2EA92FEAFB0D7E212D20A54B90E7FE3CE3E0080C22E
9B47BB13BDB129962D7BBD98AA9AB1EAF9EA2026043869B488AEDE7E652A9BBF
9510CA309E44940D4D633316769B8BF5B63DEF5CCB8D76885C6E8EEFE034CE12
F118BE9387677686DC9626051ABB53F32E1290AEABBBB3BADCBFA9CC9CD0DA4B
C96AB84D824ED9D303150D3D48A423B3577D54F18354DDFB77D2C79475000D52
E5B800E5B399BFC0C0807FCCAD07569AF57DFF45991FE0565EBC39E836CF8D6A
E88285A2B4> |
8369 <001C60D8A8C9B5EE310D056D2D79A719768B44DDC3569637260CC64D78
85AA4AA479A0FE4C27F6B00ED5AA7E6BB612A4975D7FEB6AEF7D27B0128CFB6B
BDE6B6C2E938A8ECD1FC1BF95E6F951CF2D5135865FB4356394104E66D197A21
7C674B2BC6B5D61DC3C95BEFB1FCC9FF20E7D1CBCC68465B23F83810F022C63A
EB868396D7CC6B2238DD9724C51A35BF59912E5B4AF939D2EFAC252E49919F11
7813A54572BA0B8120E1F0BC4BC68DC65C465A1C92F1106D54F8EFCF450008B5
396040A017199A7C6FEBF779389BC1024DFCEFFE45D8DA877BD77A7DA794A441
1E088794B6C74EC4DF2AB47F> |
18816 <001C60D8A8C9B5EE310D13A93B931CE5C38713A5776763DF547C963CB
63C5611291BEBF2AE2C92DCB46BF014CE76ED783DBB162830D29FCDB49A18B7A
2337577801C586DA3DF3CA23A6E6AE6A479D4D1D4BD9B8F80761FEA527634F71
5F726839096F53DF11E994B1813D9AA3CA46E7580E3BE7107E2DB43D3745124E
16E23F49E04858E0DB80D7D43BAE254F981D578407B6A6930775C890B87FDFEC
64F226F739307B3C17723E7ADFCE449A62FDD8E7167B11145C5DB3688F54C282
2E6C32EFA47AED74D1836D02A80C32559141C7C227B640470FED2CC61CC654F5
5E26FB8FBB5A8C482B22E5CA156A588FD5C09AE579B59AF9E06A6CAEC1DA8C8A
E29F83C33A919AE3E7A9B88CD03964FE9067C480BEBAF7130E84AE7F2AEA57E2
A6C4859904A42DFD2561260BD712752D9FA7025FC204642FB517167F39A6D4EA
EE2A2EC805990CD6F51E31DB9ACED30805684A39D5129A2CCA7168C86559CB29
31366BA5C1C49BB91C0D30A92A044DDE476D25CF5C3BC3B84AE> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
215.359 493.26 mo
(\\C=\217o\023_\0371\017Gk\035\365\\C=\217 \261I\200\002<)
[17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 0 
]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
431.359 493.26 mo
(o\305o\301o\263)
[9.4964 3.94629 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 2 GetGlyphDirectory
9977 <001C60D8A8C9B5EE31136367770AA4410C79C69265A768E7AE22A8A949
8ED935B72F7836324B869E451D926E6DA2C570B9A22AD93F0F50E4EFBB3CB3DF
31D0398AF9B6EB3DDF8C6763F1B5E1502FB1018C1F1D80A21BB2377572287DC2
F68944E6D3729519E303AB66FE57BEDA4150DED5FEC86D7FF9BF721931A8A090
7B4624B20DBFCC56F61C74A08DAF7A2A56932D9BA855739600A92E78A699D6C4
3BC3FAE746BE1BAFB9A06A58283D287F53018862C923FDCFA76FF1AAA5F2BA08
67590DE17D209FF96DFA828F9EB14A2C034DD83EBD25444E43DD0666AC39BF4B
108FEF8E1CC3AD2BE3AB39FFC6E37FB35EF9811E35C0B13B7F3AFC62621FE7EC
C602068CDC407F02F340F332DB51C872B6801C45B1D8470A2571D95284B6906B
0B4A5856C33B1ADFFAA70C78C62827F303C6AF2BF26B34FDE5B36FB6E725DCF0
10115331D43FCCE49544563D0D816141468EB77DD6B7A570ECF22B6ADA521300
3C7F3CCE570231E5AD4CC7CB1173A9E3C4C931EB354ADC26BA8A37885436A6D1
05F6B0F3B64CE8DF71A9140897AE31> |
7565 <001C60D8A8C9B5EE310D2522D73D61BC30AA1CE6139A49F03251A673C3
77EABFA7708C6C6C1349D629E19F68E1A55E8F6B10BAA4DB127AFFCF74D4DE95
54D4A588314FF820E60EA2B006CC8E46857B2A982C08A6CB696D137BD4191C28
91490C9640E808FA8D936239A1226113D32E547052F88BC4C310FCE845F2283B
9FE9CAFBB3EAE15361D55179B72D3F82207B0BE4826B283E1BC1991B5991> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
449.599 493.26 mo
(&\371\035\215)
[17.9999 0 ]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
485.599 493.26 mo
(o\326o\341o\341)
[11.1723 13.1367 0 ]xsh
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
523.059 493.26 mo
(E\203)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
541.059 493.26 mo
(o\331o\330o\263)
[8.59564 9.06415 0 ]xsh
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
563.499 493.26 mo
(#\213)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
586.359 493.26 mo
(o\327o\343o\345)
[12.3978 9.94708 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 2 GetGlyphDirectory
21884 <001C60D8A8C9B5EE31034563E46D1C00E7BE085076F7AF6BA8112B1B8
1E606A86227261B89688CDA7E42710A68C815572CBA9744D990377BCDCC2708F
F2467649F6117B6B5551C71B4567EF778B9EA520889A8CE92A53B9F552771E17
EB08C169DBD3B8F754A4991665ECF6FBBCCD06443758464ABCC5D6606BA63D20
FF80DF3B4D42D175FBF8E1CFCB72C100649FD8F8F240524413F2C9D283EAB2EF
244B3AAD5B6AB9DA7573E56789D8FC268CEDADB27EDC16E691F0AA5CE7E3D0D3
D3E110889E454BC756FB87C5D6706024E96A26F1F584910236D83999FA76E8DA
743F1C3F0E40A69E19A27276ECE27CCF608D56ADA44D12945BD9B8DF3E534D99
285128B394870A8AFBF9810EF819332DD9611096961A3C8E5185869134387882
1E7DFC9C3CA107D51D9BEB81DA0EC20930D188C6DC5816CDEEF588D54CE4BFE8
0CAC42E0B6268DD> |
16437 <001C60D8A8C9B5EE31397241FEC1089103E20472547A71DD59FF119F8
D70B87F88924CA23FFC6FD4A3A0954FC67A44253FBA2F1C1A5B671CFE1E62F73
0254C42DAD7B0F6A86BCBA412D6B60724B094BA7C6CCA524F37E6EC19114884F
7F111D18CF070E307F2FEF5B12DA7A3C19035AE82FFF7B8F8144DD2E7754E778
996BB45C037074DB46F0F357F0ABB4C9846F1BF0C958E0F64F9510BB9BD37F3F
618B1DAEE1FC95ACF69039862D38C8B36E1B9B989CF3A89097A1B0605C6FFD04
BFFA48808DD49A04DFC1552D9D619A0748E51EF02E0853D814AF39CA14812EFC
F908E2A030200EACA7EE43756CE34FC545FD33F4F908AD868851AAFB094BF608
B7FC5258889A2F4650103ACC1CAAF74487EEFF8973E2AA856E6CE14CF9EAA03B
624CEA9AE3277077CAFFFFC14D23BBD5263129F9AE2FB39F7DAC5C055BF9C8C5
1A9F8CE68D1462CA8600677173087D9FED04732BD3059BF2BE43BC606405914C
AD6F95A5E4EFAB11299E0D406C5FEC2A5F785A06F51015F640367F161E4F0DB2
8ED43879EF23FFD19D2E6D4E72003F21C7119CCE7A9F781713848951FD1A77A6
628E190FE00B4668B0E91F3C80E9031A1A0D4BFA32E42F0E0B104F79FDD8641A
819473E32> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
619.059 493.26 mo
(o\023U|@5)
[17.9999 17.9999 0 ]xsh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
673.059 493.26 mo
(o\326o\341o\341)
[11.1723 13.1367 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 3 GetGlyphDirectory
8942 <001C60D8A8C9B5EE31031154B615742F1DAA80CB5B5A06DB3018438022
143CBCE708D5DADAF44B39292721DB5E396A74E4B589796E3B9CFC76197898A4
A21049407DBC3A4F7D695D6911F17AAC040352AD0A869BB7CBD6277A7151FD8B
C515430274242DC1C877C7533839527BBC23321DB667F5DACF02B04714CB7BEF
B3A2CF759AB9942AB77D03C6B795F88A3CF57F51158EEAF39C678F891DF69020
B0F415B6BB45250FA4DE68A26ED2D813B071966F90082D1861D9288F862E89DB
F86DFE> |
7652 <001C60D8A8C9B5EE310D8D4B8EBA23AA0B21B59CBA2D76B4361C5CDCCA
4C15093D8759EFB9A2758BEECEDA19478DB357FC395E47959958E1439262E192
5EC736E5425EB1B41780139EC42BA6F578FD6F195745A59A51DF6F4754936163
EA97D54B0CC8D549F877B4E65691C52DCC99941D35350503397844ED5C019919
6B8E91FD1C0FFB65A6E2CCFCD20E8468F8964B65A1C0FD7B2C9F28FEA666B98D
A153EAA097AE1F6F1992DA4081F9CA192BC2F015A224DA0EA471F3222AB0B843
F37887D53C0155343ED7A27AE4C857CD2DF70D7201285E241DFCBE8BFE7836D8
782BCCE2B935> |
7749 <001C60D8A8C9B5EE3102279042A721BDE5143AF714065BF96AFBA5B13E
135479F40AF41D4337468A5C8DF4E0B10FCD6735C2CA0A6D1725EB6CB52CC4D3
B82B275067BEC533A19AE5056CF5A5C6FCEB1B60C4F17B5E2BE14C22B8B4528B
D05A78B6BD69A2446FB96AA61391395CA394BBA383945C275F47402A9C91D491
26380E61AD6EE4F1C434D3400D0754A922F4C1816946710E092EC5C8B8A7E499
D8A2BF97EC3F9B437DE8ECF73C9BF5D95A7116C6977B97F5F007277EDB45DEE5
472511EF44CA78F085CE91AD65DEACD51F7BB91649C75D57D3ABBD98130D74E0
9AE3C691E49893AFDF96A74E636DB1> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
710.499 493.26 mo
("\356\035\344!\237_\036o\023\036E5.#\015)
[17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 17.9999 0 ]xsh
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 9 GetGlyphDirectory
24271 <001C60D8A8C9B5EE310DAEB692537223E2087870910652E0267AD2F87
F639ABED23095F54E2CBC938D37D06AA0AE67FBEAD3EF72419D3519D5C0992F7
5416278681ADBEB63A5B6207558FED77A1EA79308BE111EC8209601D4AB40B15
56FE37386AF0BB5AF387A39B35D3DCE0F37E613A1329EA8AD99A9BDB063E649C
541CB8E8576B212C20D4A502C3815EFE376D3767E5FD7BA6B95D8715ABEF6CA7
BEF2ADC3BAF64086B090051D25C5BB6D340FCF9254D41D04786D072CCB1D51C3
5E583D9A622658434BCE4B75E8F0DB80B4BAE11492781651BF075045D1036A4B
FF6BC2FBF21FCEF690360B4FE6B2795C9490C85C2F05F005C9AC26C6DC92F31B
8977B533174BFE035B87CBE62517460D70236F0DFAB19D583C2A02A1636A2909
84AF97ACC299448CABA76A677631B0D5BD9ECE4AE5E4919280FE4D27112A83F5
9CB34AB7E4C58E1DB707FC1EDE78C15CE5C3B7D91F51C64E9DFF386B937B77E0
1EC033CF3F55E> |
22347 <001C60D8A8C9B5EE31436D1BB7AA05197A77F0EE095DA9AF38490003B
02E6901545FAFF928E9BE8B9586887BC8CCC6352D4F0386D987E6F884CF5C743
46EB1B955A55CC695AB4835999D5048BEE4C36E44637739B0EB814E153802EE9
F570CFDEC584BDA1C30B26DD68BA25A738A28616062118E7451B84D550B265EF
C0D68D04F6630FFBB598EC331CE5D25F523BF0867486E14174610340EF56A8B9
5A68A4520C943E2A7752D77DFB91F81E7C92D58120B28BB22DB837138D759914
60345FC5481C8666ADFE610B59B50F064212886BE6E84A946A6EED4D9DEF77F8
187ACB4316865F77229D40791B5014B5DE92D5F44F90D376396AB51822E2386C
6FCF98B69017ECC5C50096423D2E150D8E65B39A3D64864F8533B79F88146> |
12385 <001C60D8A8C9B5EE3112EF76D899C081C015F58006308FFD8523CC396
7F11601BB702DB2D19B50927C8F9C554CA9CCCB24C2D23E884A53E9ACBDF509D
439D0A72EABB3E9B454825146DCDBB4151AC4EE404B3E325D53266ABE1F34174
26F98D23E2B06FD26BA53675BE7BEE34022DB637B8DEDD593C9440FB5CD93470
5E8CA23400780AB0854F6D79ECF008D0DD5D7341E27100F053F6E0F2AB429FF8
09AF382FD5441F8770035D91E6496DCAD004F782C2DA3382348410A8CCF58167
76922767F8AE542CDF36CF4ACB55A2E9BF35018BD418BE0B1A90C4937341A0BF
3447C9D95F2896DD07C0E371226B5778C833EBA5F5E85063AFC50ACD0153C4E1
F1A989DCC18036E683453F90942C122419D9DF4229DECD639FE6472DFF734D93
F39A2C6E3300009CF3CB293629FC0C9C4F4B74D5BC567C06071D66CCDED1D492
39A8828C2FE9CA926EF63DA58499E6381E3C576E950B75DCAA2C14911C0067BA
19A934B7AEF1411ABC5CF8E9E96ED8508FB3723EB2048F6BDA0CE3C17F7BE7A6
4586EE5CC6C148CE24F9EA550D5B65405F4DE007726C41BF2734951A464B10EE
E8D3907435C9DE806A0258B20DE3C3A6883A2F36A6AABF9D2914F3D69779F81E
2D9E8AEF1FC1F9E4909D0481A1B2F81BDD8> |
7481 <001C60D8A8C9B5EE310D3F3780C3FB133F302AF9662CFC0273780801BB
04A9CE2CCB6BF39482B09C53E470488C282EF3998B3583D7BE5A45FF3DCD9358
EA1FD30A37DE4237E578A6D9EFB7853461318F1B6827BDFF1605A79637D95DFE
169DBCB5C4C6372AD7C4C0B0E4AB2534420A9EA9EDD0037D0F5A587D0428E83F
A5DFE3722641AD2D74D37BEEB49D617E9DD30261BF846BA4C1802B288EA36252
0D2B1DE157C96FB60B398F0DA48EA13572F5F356645D9EE9579307D7D432F9BA
4E29751135B238706294E282587E38AE9B7AB54C2C52E1F33CB27E29FA955CE2
E6EACA1116D7A0626C43FA9CAF179660567D359AE8CA> |
7557 <001C60D8A8C9B5EE310245F8193DFF605112DA605BBB325546A95A8545
7C5415E51B83C7EE9EF05D40F18E4FCA4BFD2806826FAC45E766FF73993E64BE
E0F8DBE6C64EA2C5B214E3BB609CC160BAB828E8ECBCE26955090B135B6395AE
424F1170193BDA0F8299F546E717C308FD> |
19450 <001C60D8A8C9B5EE310D11891C0C70CF167443577E6B88772B00AB6D2
2186A8C9100244092FAD2C366B57E44682D9673FCDD03D07788B43D62C23DCFA
79B80612BD8B3FB9BF19D6567E636240E0148E3FF62D65F255DD1629BA20F75D
2149DCEABC02789B32BDEF7E1B239B451B7427D95B71BFAD8D88E42F03AFD310
AF2C4A4A04867E38343F3644E2330B03CFD113272AF5B5708616AD209EFAC0BB
0DAEFFEC2E4BEFE7973FD78BE9F16B8FD5B05ABC4815CA313B5939CC23F3EC6F
B5F64E4C60F7CB735C03CB74E3A5CFD5479364D55685AAC46668FEE1112D7210
C2676891C92EFC34A89C786B2309E9598297882CA7CDF8538B2B530A804A9793
A1ECEAFFA391F42A2E159388B6AE8FD8CE76EAFDB97FAF13FE0AC964A25F95CD
7CBEB4D75E2A6B6C6D793441497BA07D113DCE0FDEB0783257B7F73C02DD0FEC
6A9BC48D4B1F4D17AB5257029E3F541A9C44B7D02CEAF29842CA207E52CC7994
993F0B07ED3252964A6051B2ADA18171C6FD5D0E95936DFBFBAFB21E89C53FBE
74893B6144B32BD> |
19934 <001C60D8A8C9B5EE310D8FB70C6FFF064426FC438C0DEC13C06DC982A
C2AE798F14E8899CAD22F99E8DE23BABBE9A637010E728DD9FDE1F27C9FECFC0
4CCD0FCE40790E8472DFA1718F426A69A4EB9B2554C4D8C400BC344A64EA597A
CCC81D857B3D5CEFE2BBB481B5D91E67E631DC6F6F7866155CE44C6BB679803B
9856514FF2A9C5789A4139117B0A3F0DFCD89FBFFD5989E20E75EFE10404774F
E908C2EB3159AC60DDB3E28E571703320EAA6792F572AD98455E15262CA97D69
A487F0DFD0F38867CB673D2C9ED6190ED9C893B1A026718C81C68DD1451FA382
2CA0C3AFFB452567F9BB94540B8DCBAECEA3FF0C439D80A26400D35A368ED2A3
AF9B81AA9E820404593E9537D470075CFB09D246FD2F13F80BFFBBC3B137008B
009CC72692C1DA269B874958F8BFB42656CCFED7900BD1F4E6E6D2B450BCDCF1
6D35F3AA9BB23F2D3AA361D6139C81944FC5B0728791E4A797E70B55E8E66053
3616D4ACE01C79CF669B483A17ACB6E658BE44AA0E888A08A48DEA21636AF0C7
2E103021408BC31A99956C7161A6BF9B76FA3DEF28234FE51A76C7BBCF1FDD7A
506485FF2020C164E34353D30EF0B095E6FD72C069CC0679106199266490AB9C
BFC746ED2F1C1510B5478F223DB4622790F87D473C1B91E00D044BAF43E075CB
F596DBAB863EBFC21A99CBFCCE2EA8B49E57F73AE95369AC59EDF2BD48EDB01D
1654121012A40737AED41BD66> |
17397 <001C60D8A8C9B5EE314BF9998736A65E24502ED1C3636C4C665E162D4
8DE4869CAFE9A8129D3525EC8CB200D977AB8F313260ED55967940C6F35634F3
78F6D94AF32ECE9CF83CA30AA2CC788364736F225D67469F99D730CBE1EEC6DE
CDA3BB8FA2CAF867CFB7952BA5EAE58E943F49FFDF0C885F4ABE498E54316E33
0F7A02DFBCD5829EC6E7DAA9B217678D60A960194F21C63B4AE371EC5B29BAA7
262ECCD34301B382C84E03A50387E02D2754A67E732EC21937E5635651F89E74
747DA2D4810986A04FF65E15FA3FFC31D253496D18144A9A601676217F2EDF49
87E2C1FA22265FF7D9C071EB226E43B556BD725A0E9EF55C86BCC876275232CE
D3883F835FA954E048547BEF836B2152B35186EE99B5E904612C02F08290D621
4AD9C081606AE55778FA56E47F1D25091057CEBE2752A09A5190B381E0B1ABB2
DCE77772052272116C6A4AD78B926B9DFF74629E5C5DC8B9D133213E4455CEAB
218999C2F87C7B5B166D7EED0E22D0463F656CCC7EF4702FD89808161D35D981
584435FAB8CC24EDCADE13ECD92C76FC35D0527CD2D07E09D826703B89F1A351
3E3A5BB62CF43521763C0B4BAF2A7F668AAD38964013BB4BAF7C2BD93869DB1C
AB5A729F1> |
26503 <001C60D8A8C9B5EE310272EBE1CBF700C56EE7E436FC01E97736FD158
8C2DA09A83D5EE0C0C390A717C7EBB597119405783D93621D468A97E75D35CFE
D182D0CAA7CE369BD5E16EF0B4AECFF11A2DBB60952BAD053A40BDA6B179E608
09A175AF018C8755CFBD8F5B8EDF4C415267C70A9BCAA4E2E1AB0FDA4D843C69
F1C495658315CF2513D6B367F85B8F578E6CA355BD3616FCDAA0D7B3A9DC2CB0
587A0243E1303A0B407BB94396548B0467F25F1C5E62BBD5424B62DDE3CE3528
8F9FE85299049EC7AC8B27CBFD0BF576AC375196DC8F8015B1131C702EBD21AC
6CFF67D3F1FDBF6977CE9F0B6C1FA58A1E3CC12F5A47F0E24C6CAF8525FD0877
8DDE45F60A3295928BCBE75EDAF44FDDFA22EE4DB4DD6E1BA594B486C70F9036
BBFC5D927B55127E4887D1FB8A1C55A29BCDB5D98E2DDD533691D6392EE715C0
C68EAA4C4A261340EB9DA246326E9AF71A254BBC4EF97EC5AA6CCD2D7C3C0C35
1F3877FFB5B43B4BCBD914F292FFC5792D563BB5E42208431DCA162E081A227F
EC561BEAE0A2B9332FDA9C843773B911ACAF30253714D235EFCF4176B73CC631
D363AA6A3FC> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
18.1789 514.88 mo
(I\356^\317WK_\036-\2450ao\0231\017\0359\035\205K\372M\336C\365g\207\002<)sh
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
288.199 514.88 mo
(o\340o\324o\345o\342o\330o\353o\330o\263)
[15.5701 11.448 10.3859 13.6261 9.05411 10.3681 9.09012 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PILCGX+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGX+DengXian-GBK-EUC-H 9 GetGlyphDirectory
15316 <001C60D8A8C9B5EE310D7E6ECFB2FF794FFBC3FF7737EB74D81B6AE2C
E07D4E9F7B9193E47642472BBBBB2443C82113C202D58FB8CE2BA71765611C6F
EBD592FC61F509CD6CEACF54C25669D1DCF80341FD9EC61C5BBDAE6FD16BC4BD
FAB2C90222EE682FB63535497F6A6A13E79E584A73C77CE38743987CF2CB6B16
4F7771453009E17AECC4266B8C923763EE4DEC09B1CAF91B16C19FC548FFC535
11CA02E361A21266EB9DB8B1F4D23AEE2FAB8FEDEC4F931DF4746059D0301ACA
C3C6B73F2C19CD19A5D1CE004BFB415704CFEDF6876F8EE94F6254D983E7DCC5
EE47EABF8B7B1740CF8662540E61B594B091DFF7CCC9DCB639DFA66DADF65D92
BB82B63EA081CDE3546109C86AA677FC275F9C2CE8245FA062667D57D0B82835
332A9B7E0C8009319318EE629FBE89DF821024FDDDE95EC85A3486DDBBA30013
698BE04E9> |
571 <001C60D8A8C9B5EE310DD90104D916E7F1D13757F9B69A8EC0EA758D302
8CD2AF60DC3F7> |
13496 <001C60D8A8C9B5EE310D16461C93CC1F4B31D552CB02AB0114843A7C5
2A23CDCB273906E6ED66E9B4564CEA6B8D980DFFD0E46E4D04C72213CEEB90D9
9F35BCCCE9165C3B83C7FA02872473112B94251EDC56A9946FB98BC6A9724F71
D0C582D4739CF51FD4BB0D3116719696BC389629DB0EC055488F4625F78603C2
4D7445D462B037EED4DAE17821F07849125FDDF2A146E305D46607FAB8920C77
28993B06FE0E8EF5D40BBB53943E07A428D822235BABDCF030FF594742025E90
60144CBC5D55B5409A285E3CEC5E64C1111> |
26209 <001C60D8A8C9B5EE310308923111AE694AC209709651D051D99333CE1
7270C3B8CCF63649129773E05E6E82260DAEF00CEA5274EE7BD9443463D7D75E
9A7AC6D05D76B27AF842ECB6977DB0D28EE6EE0A859476181DD16E0F491DB832
DD726F43E9F8BC52E8A403A2D948C88E82885CE288158D898C9AB7D653838DAB
D34F6976CAA02EF95EB932DDB3CF29EE1C4B27DE22FA2ABF520DAA8CB52130E1
5FFF7FAA3D99A9874E2B2210C51796793445F06E1744DB5221338CE633E8D0CB
502D3DB3F17A960CD1458BA0B55E6D00F6A66F63E63CEB3CA2F8F6293> |
25479 <001C60D8A8C9B5EE310D0EB207C342FB3FD5981A43620E2C2A5552ADF
02F66BCC1CB97C8EE07AE941E219780F06DB5E316AAB3044BCE11D3F3B64B96D
5F0578814731220A75CA956BFD37E7C51319F97E8DB5C0306FF33CDF972B2BDC
18075DEFB8B4B3B247173274F55B0802533A0156C23330167709F65EA936AF2C
B61FBC90C31270C5A37C88FCC94D3E09C780017F438C1C0ED1E099C6F16C2877
07346C9D1F9F1A5110DA49F320061DC60FD50B2349A866F809F3C6320A44C4DF
4BDCDA64CA63989676B01E3E058992540CAF21F97E768A0CBE323B64CFA33389
60C7C9E467176092F92A017CB782DE57F817D9647C91430ACE07DDB47591BA00
1AD61D9FB7FCFD41DD8A89387BE8F4567725FD80E8B2E29826EAAC57BC5C8A6A
5991C8F796F9D405BDF71DC437D73CC80BC9FC163DF6C2C5868887AE138FD383
0EF329A47E2087CE6898CA918D0954C23AE43AA1F15AD4E7456> |
11000 <001C60D8A8C9B5EE310D0A5AFF28738D4FAA838BC56774D72EFE1419B
D91423402E3E668A284A4046816DA9866F05869A6EB0CEEBEE62EF12EC25CD62
BDADA58C225573BD8999B412DABC4F2EE7810710D095532950360324476BBA2A
34E884DF889632C4362A25EFE73184F7A1703177B55E5AB597799927E9E904B4
47C4DA6EA500646DC07CF847A11933F6A6A9799678F2466A62095BB6CB828AE9
778F267978AFC26B9F41F53616E924A7666A6DC4C410EAD6AC4EAD404524F316
2FA17AE81F1A968CE1C3ACFF548D53938572601AFDB92C1DE8462E5A7903ABAB
B32BC8A77C5FBA5E4E6C8753D8A9754E106844129570A36ED0732F04DF877BBC
32736DD73E19A5D61F87B38271A3EDBE2063AB5207326E419C2> |
24282 <001C60D8A8C9B5EE310DCC86BAA4A1C212DF0C1799B1FBEE2BD77A817
0AD3AC9658655C2E4ABC1CD30E353CC164280445E7E17A2E09D1F637A764AB07
A5CADF94642188C969B929BA3B36AA8E72A015A4202254202EDCA0E8C03EBDF4
7286A38F8F3A2C123B2DEBE3151BA80CEB42217BF9DD73E18F20A04B13C42D7B
36DCF2DFDC667323177848F98331BB1624BABFAC97E2AC5F56E5DD48B70FF43C
3168DF4B3D465B8338179CAE56A3D3F961F181B2D0384F71DF6593EC39752F33
C9C31D6F54CF2ADC0229FE677C4CA49D12038B80398E0E3709C38518750B9E4D
C184082EF5FD712727BF0813659B7A50ADC923903E1121AB4D5ADD02194BA100
62BFCCA7D2BAF0E3079E51E0730C0A1991B4D6344A9146632957C07942FC0BE1
D563F4A9FF3AED8EC6C3FB6AD76D1249D3045A7BD019A258A04273CB01755AE0
B80A0ACF4B9A19CC43B30642DFBE250A30314D154BF09753196507E51CB8A567
CA6402A55C7104E84C01F7649DC5948F5FD5F0EA8F6AF3D53C6F5080A75F2B27
419E459DBB6C85FA15361DA50E41F58BEA353C2FC17302DEEAD46D436F83FB99
557FB> |
7703 <001C60D8A8C9B5EE311BAE0C57B7C6B877B6EF1BF73D899632B37008E2
AE22FC363CDD11407B92B03395EDAC63AA0CEBC842E037250721E8E97BD019D3
544DC47D8EBA6F224BF0FB8D9A774EC3A0276713A86FF6CAFFC178D80CB9B44B
ED0A0CF0055FF9456D5212CC9F3B12BB026B351034F547BE9E21F0271C3266D6
C20DB701365BC161D05BF9466B0298C148A472FF02DAB8BF4FB8C595EC92C5B2
E8511257C2C195129BE239677C9205C0E0F5BF8DE5D2EA12DB18569CF71A2999
C331A0BD6B4AE39C54598AB23B16148B82EA631AD5F53DEE0BC8D9C438C8C2C9
D22CE1A177EF5F7418ECC79CC1F27EA02879F85C278AB3C4D99C36562D5053B0
70BC821A4896E3EA17C5BC22F2FE20C72DA9CF5974C67B9B794DDE58ADF42809
7A649C2BA9D148F087534AE710ADD97DDD57A397A629EB30D64955C8CC7D87D8
A66E7D5CEE8747144C9DA23EF8B106F5697111F5F035E80D34CEBB3DDC6102D1
CC59> |
8725 <001C60D8A8C9B5EE310CB6850D5B5D3EB59F201EBC3C9AB641453165D5
67F287F69A6A34CCE58281899C873A93072A48BD718869041FDA5A86DEF884A5
50D5D9695CAF885744319C25D45659945A326CDC21EE37F2FCDE00907491965B
96BD81E7B4AB93FAA357FDAF6089040FC998082D6C81BD041B910013C34B5848
D8FB500F5295BB6169C2F82F42C39848CC7168FA211E15CBFD130BFDD0F11BDA
9A0BED93956B255A0B260757B5EFA144C43162ED03950AB2463661635A2671D0
45F100722BE97859609F118D1DD90AA2E558766A7CCFB650EC4E097429E2E7E6
AEE8759B2E66708D4EC45ECC75BF65317420B7BE83976C3A6DC2D06AE0173CC8
F655D467171E7A7DD8064F2640CAB1B69D9BFEAAFFA5773DAB60EA983B389E> |
!
end
end end
%ADOEndSubsetFont
/PILCGX+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
372.559 514.88 mo
(&'J\226;\324\002;[\002-\245\002;Gk\035\365\(\031\035\)4\270fac\207*\370\(\201\035\011\035#\035\)d\355g\227^\332WK\036\027"\025\002<)sh
219.489 103.98 mo
247.609 87.03 li
244.839 102.59 li
276.759 100.05 li
264.079 108.41 li
297.289 110.81 li
270.919 117.64 li
301.089 125.87 li
265.099 124.85 li
274.989 139.91 li
243.819 129.28 li
237.979 144.71 li
217.469 130.67 li
201.999 150.15 li
196.179 132.7 li
173.869 138.51 li
180.709 127.76 li
138.909 129.66 li
166.009 121.44 li
137.889 112.2 li
172.849 109.29 li
140.689 93.7399 li
193.139 105.5 li
200.989 93.7399 li
219.489 103.98 li
.808743 .585351 0 0 cmyk
ef
219.489 103.98 mo
219.226 103.543 li
248.308 86.0132 li
245.457 102.029 li
278.695 99.3842 li
265.613 108.009 li
300.423 110.525 li
272.904 117.653 li
305.34 126.501 li
266.062 125.387 li
276.231 140.872 li
244.121 129.922 li
238.226 145.497 li
217.573 131.359 li
201.813 151.204 li
195.846 133.314 li
172.742 139.33 li
179.752 128.314 li
134.863 130.354 li
164.316 121.421 li
135.343 111.9 li
170.946 108.937 li
136.488 92.2751 li
192.909 104.926 li
200.825 93.0665 li
219.736 103.534 li
219.489 103.98 li
219.226 103.543 li
219.489 103.98 li
219.242 104.426 li
201.153 94.4135 li
193.369 106.074 li
144.889 95.2044 li
174.752 109.644 li
140.435 112.5 li
167.702 121.46 li
142.956 128.965 li
181.666 127.206 li
174.995 137.69 li
196.512 132.086 li
202.185 149.096 li
217.365 129.981 li
237.732 143.923 li
243.516 128.638 li
273.747 138.948 li
264.136 124.312 li
296.839 125.239 li
268.935 117.627 li
294.155 111.095 li
262.545 108.81 li
274.823 100.716 li
244.221 103.151 li
246.91 88.0468 li
219.5 104.569 li
219.242 104.426 li
219.489 103.98 li
1 .816159 .15967 .0319219 cmyk
f
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28665 <001C60D8A8C9B844FACDE1262E660876C1C821F09A376508ACC1A69E7
44CCCB7E78648AFF64E5A36538462D4E62DC3E4EB2C79A256CD068EF675E11F5
BEC65134909B1991756C0B348400205629D9A2DBF4EF5> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
187.559 123.26 mo
(o\366p\002p\001o\371o\377o\374o\366p\007)
[9.05099 11.4485 10.9891 5.87424 4.47552 4.47549 9.05099 0 ]xsh
236.399 61.6799 mo
236.399 91.14 li
235.399 91.14 li
235.399 61.6799 li
236.399 61.6799 li
238.899 90.14 mo
235.899 96.14 li
232.899 90.14 li
238.899 90.14 li
.808743 .585351 0 0 cmyk
f
235.369 171.07 mo
234.849 148.05 li
235.849 148.03 li
236.369 171.05 li
235.369 171.07 li
232.379 149.11 mo
235.239 143.04 li
238.369 148.97 li
232.379 149.11 li
f
649.929 221.31 mo
864.249 221.31 li
864.249 173.25 li
649.929 173.25 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
649.929 221.31 mo
864.249 221.31 li
864.249 173.25 li
649.929 173.25 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
743.099 203.24 mo
(o\334o\367o\377o\370)
[4.43988 10.3261 4.026 0 ]xsh
128.169 220.53 mo
177.429 220.53 li
177.429 172.47 li
128.169 172.47 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
128.169 220.53 mo
177.429 220.53 li
177.429 172.47 li
128.169 172.47 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
138.759 202.48 mo
(o\334o\367o\377o\370)
[4.4399 10.3261 4.02599 0 ]xsh
255.609 226.29 mo
181.989 226.29 li
181.989 221.82 li
255.609 221.82 li
255.609 226.29 li
255.609 172.74 mo
181.989 172.74 li
181.989 136.922 li
195.846 133.314 li
201.813 151.204 li
217.573 131.359 li
235.092 143.352 li
232.379 149.11 li
234.871 149.052 li
235.369 171.07 li
236.369 171.05 li
235.871 149.028 li
238.369 148.97 li
235.58 143.686 li
238.226 145.497 li
244.121 129.922 li
255.609 133.84 li
255.609 172.74 li
255.609 95.7 mo
246.583 95.7 li
248.308 86.0132 li
237.793 92.351 li
238.899 90.14 li
236.399 90.14 li
236.399 75.6599 li
255.609 75.6599 li
255.609 95.7 li
232.237 95.7 mo
205.583 95.7 li
200.825 93.0665 li
199.067 95.7 li
181.989 95.7 li
181.989 75.6599 li
235.399 75.6599 li
235.399 90.14 li
232.899 90.14 li
234.882 94.106 li
232.237 95.7 li
255.609 26.5801 mo
181.989 26.5801 li
181.989 9.68994 li
255.609 9.68994 li
255.609 26.5801 li
.172549 .168627 .0941176 .0156863 cmyk
f
255.099 74.64 mo
236.399 74.64 li
236.399 61.6799 li
235.399 61.6799 li
235.399 74.64 li
181.989 74.64 li
181.989 61.2805 li
238.387 61.2805 li
238.387 45.0087 li
181.989 45.0087 li
181.989 27.6 li
255.099 27.6 li
255.099 74.64 li
.545098 .419608 .231373 .0156863 cmyk
f
255.609 75.6599 mo
236.399 75.6599 li
236.399 74.64 li
255.099 74.64 li
255.099 27.6 li
181.989 27.6 li
181.989 26.5801 li
255.609 26.5801 li
255.609 75.6599 li
235.399 75.6599 mo
181.989 75.6599 li
181.989 74.64 li
235.399 74.64 li
235.399 75.6599 li
.862745 .733333 .203922 .0392157 cmyk
f
gsave
238.387 61.2805 mo
181.989 61.2805 li
181.989 45.0087 li
238.387 45.0087 li
238.387 61.2805 li
clp
181.989 45.0087 mo
238.387 45.0087 li
238.387 61.2805 li
181.989 61.2805 li
cp
.545098 .419608 .231373 .0156863 cmyk
f
.172549 .168627 .0941176 .0156863 cmyk
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18.02 0 0 -18.02 0 0 ]msf
145.059 57.1 mo
(o\326o\341o\341o\263o\273o\305o\307p\000p\006o\274)
[11.1723 13.1366 13.1367 4.79335 5.26198 9.49641 9.49641 15.1549 7.31622 0 ]xsh
grestore
255.609 220.8 mo
182.499 220.8 li
182.499 173.76 li
255.609 173.76 li
255.609 220.8 li
.545098 .419608 .231373 .0156863 cmyk
f
255.609 221.82 mo
181.989 221.82 li
181.989 172.74 li
255.609 172.74 li
255.609 173.76 li
182.499 173.76 li
182.499 220.8 li
255.609 220.8 li
255.609 221.82 li
.862745 .733333 .203922 .0392157 cmyk
f
192.909 104.926 mo
181.989 102.477 li
181.989 96.7199 li
198.387 96.7199 li
192.909 104.926 li
219.478 103.391 mo
207.426 96.7199 li
230.545 96.7199 li
219.478 103.391 li
245.457 102.029 mo
246.402 96.7199 li
255.609 96.7199 li
255.609 101.221 li
245.457 102.029 li
.172549 .168627 .0941176 .0156863 cmyk
f
255.609 96.7199 mo
246.402 96.7199 li
246.583 95.7 li
255.609 95.7 li
255.609 96.7199 li
230.545 96.7199 mo
207.426 96.7199 li
205.583 95.7 li
232.237 95.7 li
230.545 96.7199 li
198.387 96.7199 mo
181.989 96.7199 li
181.989 95.7 li
199.067 95.7 li
198.387 96.7199 li
.862745 .733333 .203922 .0392157 cmyk
f
202.185 149.096 mo
196.512 132.086 li
181.989 135.868 li
181.989 103.523 li
193.369 106.074 li
201.153 94.4135 li
219.242 104.426 li
219.5 104.569 li
235.339 95.0212 li
235.899 96.14 li
236.941 94.0558 li
246.91 88.0468 li
244.221 103.151 li
255.609 102.245 li
255.609 132.762 li
243.516 128.638 li
237.732 143.923 li
217.365 129.981 li
202.185 149.096 li
188.538 109.854 mo
188.538 124.239 li
248.838 124.239 li
248.838 109.854 li
188.538 109.854 li
.729412 .572549 .0941176 .0156863 cmyk
f
201.813 151.204 mo
195.846 133.314 li
181.989 136.922 li
181.989 135.868 li
196.512 132.086 li
202.185 149.096 li
217.365 129.981 li
237.732 143.923 li
243.516 128.638 li
255.609 132.762 li
255.609 133.84 li
244.121 129.922 li
238.226 145.497 li
235.58 143.686 li
235.239 143.04 li
235.092 143.352 li
217.573 131.359 li
201.813 151.204 li
193.369 106.074 mo
181.989 103.523 li
181.989 102.477 li
192.909 104.926 li
198.387 96.7199 li
199.067 95.7 li
200.825 93.0665 li
205.583 95.7 li
207.426 96.7199 li
219.478 103.391 li
230.545 96.7199 li
232.237 95.7 li
234.882 94.106 li
235.339 95.0212 li
219.5 104.569 li
219.242 104.426 li
201.153 94.4135 li
193.369 106.074 li
219.226 103.543 mo
219.489 103.98 li
219.226 103.543 li
244.221 103.151 mo
246.91 88.0468 li
236.941 94.0558 li
237.793 92.351 li
248.308 86.0132 li
246.583 95.7 li
246.402 96.7199 li
245.457 102.029 li
255.609 101.221 li
255.609 102.245 li
244.221 103.151 li
.862745 .733333 .203922 .0392157 cmyk
f
gsave
248.838 124.239 mo
188.538 124.239 li
188.538 109.854 li
248.838 109.854 li
248.838 124.239 li
clp
188.538 109.854 mo
248.838 109.854 li
248.838 124.239 li
188.538 124.239 li
cp
.729412 .572549 .0941176 .0156863 cmyk
f
.172549 .168627 .0941176 .0156863 cmyk
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
187.559 123.26 mo
(o\366p\002p\001o\371o\377o\374o\366p\007)
[9.05099 11.4485 10.9891 5.87424 4.47552 4.47549 9.05099 0 ]xsh
grestore
235.899 96.14 mo
235.339 95.0212 li
234.882 94.106 li
232.899 90.14 li
235.399 90.14 li
235.399 75.6599 li
235.399 74.64 li
235.399 61.6799 li
236.399 61.6799 li
236.399 74.64 li
236.399 75.6599 li
236.399 90.14 li
238.899 90.14 li
237.793 92.351 li
236.941 94.0558 li
235.899 96.14 li
.729412 .572549 .0941176 .0156863 cmyk
f
235.369 171.07 mo
234.871 149.052 li
232.379 149.11 li
235.092 143.352 li
235.239 143.04 li
235.58 143.686 li
238.369 148.97 li
235.871 149.028 li
236.369 171.05 li
235.369 171.07 li
f
181.989 226.29 mo
255.609 226.29 li
255.609 9.69 li
181.989 9.69 li
cp
1 .816159 .15967 .0319219 cmyk
@
630.549 100.02 mo
658.669 83.07 li
655.899 98.63 li
687.819 96.09 li
675.139 104.45 li
708.349 106.85 li
681.979 113.68 li
712.149 121.91 li
676.159 120.89 li
686.049 135.95 li
654.879 125.32 li
649.039 140.75 li
628.529 126.71 li
613.059 146.19 li
607.239 128.74 li
584.929 134.55 li
591.769 123.8 li
549.969 125.7 li
577.069 117.48 li
548.949 108.24 li
583.909 105.33 li
551.749 89.78 li
604.199 101.54 li
612.049 89.78 li
cp
.808743 .585351 0 0 cmyk
ef
630.549 100.02 mo
658.669 83.07 li
655.899 98.63 li
687.819 96.09 li
675.139 104.45 li
708.349 106.85 li
681.979 113.68 li
712.149 121.91 li
676.159 120.89 li
686.049 135.95 li
654.879 125.32 li
649.039 140.75 li
628.529 126.71 li
613.059 146.19 li
607.239 128.74 li
584.929 134.55 li
591.769 123.8 li
549.969 125.7 li
577.069 117.48 li
548.949 108.24 li
583.909 105.33 li
551.749 89.78 li
604.199 101.54 li
612.049 89.78 li
cp
1 .816159 .15967 .0319219 cmyk
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PILCGW+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PILCGW+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28682 <001C60D8A8C9B6317D7763A655669C6E02448AAF388F9364FE21A14E5
285A2D62023D21C941644EE4B175DE88CF4C48ACE81BC234046568E7F7423114
120142242F4073B0692C01A1DF9EF591DB9537DD9975603936B7DBE5CAFE64FE
E70E042E0FC965DC960BE64BDF0895A91F4698C15> |
!
end
end end
%ADOEndSubsetFont
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [19.98 0 0 -19.98 0 0 ]msf
609.459 119.3 mo
(o\346o\377p\002p\012)
[10.2699 4.47546 11.4485 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
509.159 117.58 mo
(o\334o\367o\377o\370)
[4.43988 10.3261 4.026 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/PILCGW+DengXian-GBK-EUC-H-Identity-H findfont [18 0 0 -18 0 0 ]msf
303.119 117.58 mo
(o\334o\367o\377o\370)
[4.43988 10.3261 4.02597 0 ]xsh
646.499 57.72 mo
646.499 87.18 li
645.499 87.18 li
645.499 57.72 li
cp
648.999 86.18 mo
645.999 92.18 li
642.999 86.18 li
cp
.808743 .585351 0 0 cmyk
f
645.469 167.11 mo
644.949 144.09 li
645.949 144.07 li
646.469 167.09 li
cp
642.479 145.15 mo
645.339 139.08 li
648.469 145.01 li
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/PILCGX+DengXian-GBK-EUC-H-Identity-H uf
/PILCGX+DengXian-GBK-EUC-H /CIDFont ur
/PILCGW+DengXian-GBK-EUC-H-Identity-H uf
/PILCGW+DengXian-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
